'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsDefault"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsDefault
    Inherits Global.System.Data.DataSet
    
    Private tableTaxPayerFind As TaxPayerFindDataTable
    
    Private tabledtErrorLog As dtErrorLogDataTable
    
    Private tableYEAR_ASSESSMENT As YEAR_ASSESSMENTDataTable
    
    Private tabledtDatabaseColumnList As dtDatabaseColumnListDataTable
    
    Private tableBANK_CODE As BANK_CODEDataTable
    
    Private tableBANK As BANKDataTable
    
    Private tableCOUNTRY As COUNTRYDataTable
    
    Private tableSTATES As STATESDataTable
    
    Private tableBUSINESS_SOURCE As BUSINESS_SOURCEDataTable
    
    Private tableBUSINESS As BUSINESSDataTable
    
    Private tableTAXP_PARTNERSHIP As TAXP_PARTNERSHIPDataTable
    
    Private tableTAXP_PROFILE As TAXP_PROFILEDataTable
    
    Private tableMENU_LIST_INFO As MENU_LIST_INFODataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("TaxPayerFind")) Is Nothing) Then
                MyBase.Tables.Add(New TaxPayerFindDataTable(ds.Tables("TaxPayerFind")))
            End If
            If (Not (ds.Tables("dtErrorLog")) Is Nothing) Then
                MyBase.Tables.Add(New dtErrorLogDataTable(ds.Tables("dtErrorLog")))
            End If
            If (Not (ds.Tables("YEAR_ASSESSMENT")) Is Nothing) Then
                MyBase.Tables.Add(New YEAR_ASSESSMENTDataTable(ds.Tables("YEAR_ASSESSMENT")))
            End If
            If (Not (ds.Tables("dtDatabaseColumnList")) Is Nothing) Then
                MyBase.Tables.Add(New dtDatabaseColumnListDataTable(ds.Tables("dtDatabaseColumnList")))
            End If
            If (Not (ds.Tables("BANK_CODE")) Is Nothing) Then
                MyBase.Tables.Add(New BANK_CODEDataTable(ds.Tables("BANK_CODE")))
            End If
            If (Not (ds.Tables("BANK")) Is Nothing) Then
                MyBase.Tables.Add(New BANKDataTable(ds.Tables("BANK")))
            End If
            If (Not (ds.Tables("COUNTRY")) Is Nothing) Then
                MyBase.Tables.Add(New COUNTRYDataTable(ds.Tables("COUNTRY")))
            End If
            If (Not (ds.Tables("STATES")) Is Nothing) Then
                MyBase.Tables.Add(New STATESDataTable(ds.Tables("STATES")))
            End If
            If (Not (ds.Tables("BUSINESS_SOURCE")) Is Nothing) Then
                MyBase.Tables.Add(New BUSINESS_SOURCEDataTable(ds.Tables("BUSINESS_SOURCE")))
            End If
            If (Not (ds.Tables("BUSINESS")) Is Nothing) Then
                MyBase.Tables.Add(New BUSINESSDataTable(ds.Tables("BUSINESS")))
            End If
            If (Not (ds.Tables("TAXP_PARTNERSHIP")) Is Nothing) Then
                MyBase.Tables.Add(New TAXP_PARTNERSHIPDataTable(ds.Tables("TAXP_PARTNERSHIP")))
            End If
            If (Not (ds.Tables("TAXP_PROFILE")) Is Nothing) Then
                MyBase.Tables.Add(New TAXP_PROFILEDataTable(ds.Tables("TAXP_PROFILE")))
            End If
            If (Not (ds.Tables("MENU_LIST_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New MENU_LIST_INFODataTable(ds.Tables("MENU_LIST_INFO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TaxPayerFind() As TaxPayerFindDataTable
        Get
            Return Me.tableTaxPayerFind
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtErrorLog() As dtErrorLogDataTable
        Get
            Return Me.tabledtErrorLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property YEAR_ASSESSMENT() As YEAR_ASSESSMENTDataTable
        Get
            Return Me.tableYEAR_ASSESSMENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtDatabaseColumnList() As dtDatabaseColumnListDataTable
        Get
            Return Me.tabledtDatabaseColumnList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BANK_CODE() As BANK_CODEDataTable
        Get
            Return Me.tableBANK_CODE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BANK() As BANKDataTable
        Get
            Return Me.tableBANK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COUNTRY() As COUNTRYDataTable
        Get
            Return Me.tableCOUNTRY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STATES() As STATESDataTable
        Get
            Return Me.tableSTATES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BUSINESS_SOURCE() As BUSINESS_SOURCEDataTable
        Get
            Return Me.tableBUSINESS_SOURCE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BUSINESS() As BUSINESSDataTable
        Get
            Return Me.tableBUSINESS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TAXP_PARTNERSHIP() As TAXP_PARTNERSHIPDataTable
        Get
            Return Me.tableTAXP_PARTNERSHIP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TAXP_PROFILE() As TAXP_PROFILEDataTable
        Get
            Return Me.tableTAXP_PROFILE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MENU_LIST_INFO() As MENU_LIST_INFODataTable
        Get
            Return Me.tableMENU_LIST_INFO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsDefault = CType(MyBase.Clone,dsDefault)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("TaxPayerFind")) Is Nothing) Then
                MyBase.Tables.Add(New TaxPayerFindDataTable(ds.Tables("TaxPayerFind")))
            End If
            If (Not (ds.Tables("dtErrorLog")) Is Nothing) Then
                MyBase.Tables.Add(New dtErrorLogDataTable(ds.Tables("dtErrorLog")))
            End If
            If (Not (ds.Tables("YEAR_ASSESSMENT")) Is Nothing) Then
                MyBase.Tables.Add(New YEAR_ASSESSMENTDataTable(ds.Tables("YEAR_ASSESSMENT")))
            End If
            If (Not (ds.Tables("dtDatabaseColumnList")) Is Nothing) Then
                MyBase.Tables.Add(New dtDatabaseColumnListDataTable(ds.Tables("dtDatabaseColumnList")))
            End If
            If (Not (ds.Tables("BANK_CODE")) Is Nothing) Then
                MyBase.Tables.Add(New BANK_CODEDataTable(ds.Tables("BANK_CODE")))
            End If
            If (Not (ds.Tables("BANK")) Is Nothing) Then
                MyBase.Tables.Add(New BANKDataTable(ds.Tables("BANK")))
            End If
            If (Not (ds.Tables("COUNTRY")) Is Nothing) Then
                MyBase.Tables.Add(New COUNTRYDataTable(ds.Tables("COUNTRY")))
            End If
            If (Not (ds.Tables("STATES")) Is Nothing) Then
                MyBase.Tables.Add(New STATESDataTable(ds.Tables("STATES")))
            End If
            If (Not (ds.Tables("BUSINESS_SOURCE")) Is Nothing) Then
                MyBase.Tables.Add(New BUSINESS_SOURCEDataTable(ds.Tables("BUSINESS_SOURCE")))
            End If
            If (Not (ds.Tables("BUSINESS")) Is Nothing) Then
                MyBase.Tables.Add(New BUSINESSDataTable(ds.Tables("BUSINESS")))
            End If
            If (Not (ds.Tables("TAXP_PARTNERSHIP")) Is Nothing) Then
                MyBase.Tables.Add(New TAXP_PARTNERSHIPDataTable(ds.Tables("TAXP_PARTNERSHIP")))
            End If
            If (Not (ds.Tables("TAXP_PROFILE")) Is Nothing) Then
                MyBase.Tables.Add(New TAXP_PROFILEDataTable(ds.Tables("TAXP_PROFILE")))
            End If
            If (Not (ds.Tables("MENU_LIST_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New MENU_LIST_INFODataTable(ds.Tables("MENU_LIST_INFO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableTaxPayerFind = CType(MyBase.Tables("TaxPayerFind"),TaxPayerFindDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTaxPayerFind) Is Nothing) Then
                Me.tableTaxPayerFind.InitVars
            End If
        End If
        Me.tabledtErrorLog = CType(MyBase.Tables("dtErrorLog"),dtErrorLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtErrorLog) Is Nothing) Then
                Me.tabledtErrorLog.InitVars
            End If
        End If
        Me.tableYEAR_ASSESSMENT = CType(MyBase.Tables("YEAR_ASSESSMENT"),YEAR_ASSESSMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableYEAR_ASSESSMENT) Is Nothing) Then
                Me.tableYEAR_ASSESSMENT.InitVars
            End If
        End If
        Me.tabledtDatabaseColumnList = CType(MyBase.Tables("dtDatabaseColumnList"),dtDatabaseColumnListDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtDatabaseColumnList) Is Nothing) Then
                Me.tabledtDatabaseColumnList.InitVars
            End If
        End If
        Me.tableBANK_CODE = CType(MyBase.Tables("BANK_CODE"),BANK_CODEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBANK_CODE) Is Nothing) Then
                Me.tableBANK_CODE.InitVars
            End If
        End If
        Me.tableBANK = CType(MyBase.Tables("BANK"),BANKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBANK) Is Nothing) Then
                Me.tableBANK.InitVars
            End If
        End If
        Me.tableCOUNTRY = CType(MyBase.Tables("COUNTRY"),COUNTRYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOUNTRY) Is Nothing) Then
                Me.tableCOUNTRY.InitVars
            End If
        End If
        Me.tableSTATES = CType(MyBase.Tables("STATES"),STATESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTATES) Is Nothing) Then
                Me.tableSTATES.InitVars
            End If
        End If
        Me.tableBUSINESS_SOURCE = CType(MyBase.Tables("BUSINESS_SOURCE"),BUSINESS_SOURCEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBUSINESS_SOURCE) Is Nothing) Then
                Me.tableBUSINESS_SOURCE.InitVars
            End If
        End If
        Me.tableBUSINESS = CType(MyBase.Tables("BUSINESS"),BUSINESSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBUSINESS) Is Nothing) Then
                Me.tableBUSINESS.InitVars
            End If
        End If
        Me.tableTAXP_PARTNERSHIP = CType(MyBase.Tables("TAXP_PARTNERSHIP"),TAXP_PARTNERSHIPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTAXP_PARTNERSHIP) Is Nothing) Then
                Me.tableTAXP_PARTNERSHIP.InitVars
            End If
        End If
        Me.tableTAXP_PROFILE = CType(MyBase.Tables("TAXP_PROFILE"),TAXP_PROFILEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTAXP_PROFILE) Is Nothing) Then
                Me.tableTAXP_PROFILE.InitVars
            End If
        End If
        Me.tableMENU_LIST_INFO = CType(MyBase.Tables("MENU_LIST_INFO"),MENU_LIST_INFODataTable)
        If (initTable = true) Then
            If (Not (Me.tableMENU_LIST_INFO) Is Nothing) Then
                Me.tableMENU_LIST_INFO.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsDefault"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsDefault.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableTaxPayerFind = New TaxPayerFindDataTable()
        MyBase.Tables.Add(Me.tableTaxPayerFind)
        Me.tabledtErrorLog = New dtErrorLogDataTable()
        MyBase.Tables.Add(Me.tabledtErrorLog)
        Me.tableYEAR_ASSESSMENT = New YEAR_ASSESSMENTDataTable()
        MyBase.Tables.Add(Me.tableYEAR_ASSESSMENT)
        Me.tabledtDatabaseColumnList = New dtDatabaseColumnListDataTable()
        MyBase.Tables.Add(Me.tabledtDatabaseColumnList)
        Me.tableBANK_CODE = New BANK_CODEDataTable()
        MyBase.Tables.Add(Me.tableBANK_CODE)
        Me.tableBANK = New BANKDataTable()
        MyBase.Tables.Add(Me.tableBANK)
        Me.tableCOUNTRY = New COUNTRYDataTable()
        MyBase.Tables.Add(Me.tableCOUNTRY)
        Me.tableSTATES = New STATESDataTable()
        MyBase.Tables.Add(Me.tableSTATES)
        Me.tableBUSINESS_SOURCE = New BUSINESS_SOURCEDataTable()
        MyBase.Tables.Add(Me.tableBUSINESS_SOURCE)
        Me.tableBUSINESS = New BUSINESSDataTable()
        MyBase.Tables.Add(Me.tableBUSINESS)
        Me.tableTAXP_PARTNERSHIP = New TAXP_PARTNERSHIPDataTable()
        MyBase.Tables.Add(Me.tableTAXP_PARTNERSHIP)
        Me.tableTAXP_PROFILE = New TAXP_PROFILEDataTable()
        MyBase.Tables.Add(Me.tableTAXP_PROFILE)
        Me.tableMENU_LIST_INFO = New MENU_LIST_INFODataTable()
        MyBase.Tables.Add(Me.tableMENU_LIST_INFO)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTaxPayerFind() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtErrorLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeYEAR_ASSESSMENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtDatabaseColumnList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBANK_CODE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBANK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOUNTRY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSTATES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBUSINESS_SOURCE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBUSINESS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTAXP_PARTNERSHIP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTAXP_PROFILE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMENU_LIST_INFO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsDefault = New dsDefault()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TaxPayerFindRowChangeEventHandler(ByVal sender As Object, ByVal e As TaxPayerFindRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtErrorLogRowChangeEventHandler(ByVal sender As Object, ByVal e As dtErrorLogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub YEAR_ASSESSMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As YEAR_ASSESSMENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtDatabaseColumnListRowChangeEventHandler(ByVal sender As Object, ByVal e As dtDatabaseColumnListRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BANK_CODERowChangeEventHandler(ByVal sender As Object, ByVal e As BANK_CODERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BANKRowChangeEventHandler(ByVal sender As Object, ByVal e As BANKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COUNTRYRowChangeEventHandler(ByVal sender As Object, ByVal e As COUNTRYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub STATESRowChangeEventHandler(ByVal sender As Object, ByVal e As STATESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BUSINESS_SOURCERowChangeEventHandler(ByVal sender As Object, ByVal e As BUSINESS_SOURCERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BUSINESSRowChangeEventHandler(ByVal sender As Object, ByVal e As BUSINESSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TAXP_PARTNERSHIPRowChangeEventHandler(ByVal sender As Object, ByVal e As TAXP_PARTNERSHIPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TAXP_PROFILERowChangeEventHandler(ByVal sender As Object, ByVal e As TAXP_PROFILERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MENU_LIST_INFORowChangeEventHandler(ByVal sender As Object, ByVal e As MENU_LIST_INFORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TaxPayerFindDataTable
        Inherits Global.System.Data.TypedTableBase(Of TaxPayerFindRow)
        
        Private columnRefNo As Global.System.Data.DataColumn
        
        Private columnCompanyName As Global.System.Data.DataColumn
        
        Private columnCompanyNo As Global.System.Data.DataColumn
        
        Private columnEmployerNo As Global.System.Data.DataColumn
        
        Private columnFileNo As Global.System.Data.DataColumn
        
        Private columnCountry As Global.System.Data.DataColumn
        
        Private columnCompanyCode As Global.System.Data.DataColumn
        
        Private columnHandleBy As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TaxPayerFind"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RefNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRefNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmployerNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmployerNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FileNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFileNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompanyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HandleByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHandleBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TaxPayerFindRow
            Get
                Return CType(Me.Rows(index),TaxPayerFindRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TaxPayerFindRowChanging As TaxPayerFindRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TaxPayerFindRowChanged As TaxPayerFindRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TaxPayerFindRowDeleting As TaxPayerFindRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TaxPayerFindRowDeleted As TaxPayerFindRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTaxPayerFindRow(ByVal row As TaxPayerFindRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTaxPayerFindRow(ByVal RefNo As String, ByVal CompanyName As String, ByVal CompanyNo As String, ByVal EmployerNo As String, ByVal FileNo As String, ByVal Country As String, ByVal CompanyCode As String, ByVal HandleBy As String) As TaxPayerFindRow
            Dim rowTaxPayerFindRow As TaxPayerFindRow = CType(Me.NewRow,TaxPayerFindRow)
            Dim columnValuesArray() As Object = New Object() {RefNo, CompanyName, CompanyNo, EmployerNo, FileNo, Country, CompanyCode, HandleBy}
            rowTaxPayerFindRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTaxPayerFindRow)
            Return rowTaxPayerFindRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TaxPayerFindDataTable = CType(MyBase.Clone,TaxPayerFindDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TaxPayerFindDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRefNo = MyBase.Columns("RefNo")
            Me.columnCompanyName = MyBase.Columns("CompanyName")
            Me.columnCompanyNo = MyBase.Columns("CompanyNo")
            Me.columnEmployerNo = MyBase.Columns("EmployerNo")
            Me.columnFileNo = MyBase.Columns("FileNo")
            Me.columnCountry = MyBase.Columns("Country")
            Me.columnCompanyCode = MyBase.Columns("CompanyCode")
            Me.columnHandleBy = MyBase.Columns("HandleBy")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRefNo = New Global.System.Data.DataColumn("RefNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRefNo)
            Me.columnCompanyName = New Global.System.Data.DataColumn("CompanyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyName)
            Me.columnCompanyNo = New Global.System.Data.DataColumn("CompanyNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyNo)
            Me.columnEmployerNo = New Global.System.Data.DataColumn("EmployerNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmployerNo)
            Me.columnFileNo = New Global.System.Data.DataColumn("FileNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFileNo)
            Me.columnCountry = New Global.System.Data.DataColumn("Country", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountry)
            Me.columnCompanyCode = New Global.System.Data.DataColumn("CompanyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompanyCode)
            Me.columnHandleBy = New Global.System.Data.DataColumn("HandleBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHandleBy)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTaxPayerFindRow() As TaxPayerFindRow
            Return CType(Me.NewRow,TaxPayerFindRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TaxPayerFindRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TaxPayerFindRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TaxPayerFindRowChangedEvent) Is Nothing) Then
                RaiseEvent TaxPayerFindRowChanged(Me, New TaxPayerFindRowChangeEvent(CType(e.Row,TaxPayerFindRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TaxPayerFindRowChangingEvent) Is Nothing) Then
                RaiseEvent TaxPayerFindRowChanging(Me, New TaxPayerFindRowChangeEvent(CType(e.Row,TaxPayerFindRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TaxPayerFindRowDeletedEvent) Is Nothing) Then
                RaiseEvent TaxPayerFindRowDeleted(Me, New TaxPayerFindRowChangeEvent(CType(e.Row,TaxPayerFindRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TaxPayerFindRowDeletingEvent) Is Nothing) Then
                RaiseEvent TaxPayerFindRowDeleting(Me, New TaxPayerFindRowChangeEvent(CType(e.Row,TaxPayerFindRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTaxPayerFindRow(ByVal row As TaxPayerFindRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TaxPayerFindDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtErrorLogDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtErrorLogRow)
        
        Private columnNo As Global.System.Data.DataColumn
        
        Private columnErrorDateTime As Global.System.Data.DataColumn
        
        Private columnErrorCode As Global.System.Data.DataColumn
        
        Private columnErrorName As Global.System.Data.DataColumn
        
        Private columnErrorMessage As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtErrorLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErrorDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErrorDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErrorCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErrorCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErrorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErrorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErrorMessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErrorMessage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtErrorLogRow
            Get
                Return CType(Me.Rows(index),dtErrorLogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtErrorLogRowChanging As dtErrorLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtErrorLogRowChanged As dtErrorLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtErrorLogRowDeleting As dtErrorLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtErrorLogRowDeleted As dtErrorLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtErrorLogRow(ByVal row As dtErrorLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtErrorLogRow(ByVal No As Long, ByVal ErrorDateTime As Date, ByVal ErrorCode As String, ByVal ErrorName As String, ByVal ErrorMessage As String) As dtErrorLogRow
            Dim rowdtErrorLogRow As dtErrorLogRow = CType(Me.NewRow,dtErrorLogRow)
            Dim columnValuesArray() As Object = New Object() {No, ErrorDateTime, ErrorCode, ErrorName, ErrorMessage}
            rowdtErrorLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtErrorLogRow)
            Return rowdtErrorLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtErrorLogDataTable = CType(MyBase.Clone,dtErrorLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtErrorLogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNo = MyBase.Columns("No")
            Me.columnErrorDateTime = MyBase.Columns("ErrorDateTime")
            Me.columnErrorCode = MyBase.Columns("ErrorCode")
            Me.columnErrorName = MyBase.Columns("ErrorName")
            Me.columnErrorMessage = MyBase.Columns("ErrorMessage")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNo = New Global.System.Data.DataColumn("No", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo)
            Me.columnErrorDateTime = New Global.System.Data.DataColumn("ErrorDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErrorDateTime)
            Me.columnErrorCode = New Global.System.Data.DataColumn("ErrorCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErrorCode)
            Me.columnErrorName = New Global.System.Data.DataColumn("ErrorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErrorName)
            Me.columnErrorMessage = New Global.System.Data.DataColumn("ErrorMessage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErrorMessage)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtErrorLogRow() As dtErrorLogRow
            Return CType(Me.NewRow,dtErrorLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtErrorLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtErrorLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtErrorLogRowChangedEvent) Is Nothing) Then
                RaiseEvent dtErrorLogRowChanged(Me, New dtErrorLogRowChangeEvent(CType(e.Row,dtErrorLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtErrorLogRowChangingEvent) Is Nothing) Then
                RaiseEvent dtErrorLogRowChanging(Me, New dtErrorLogRowChangeEvent(CType(e.Row,dtErrorLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtErrorLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtErrorLogRowDeleted(Me, New dtErrorLogRowChangeEvent(CType(e.Row,dtErrorLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtErrorLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtErrorLogRowDeleting(Me, New dtErrorLogRowChangeEvent(CType(e.Row,dtErrorLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtErrorLogRow(ByVal row As dtErrorLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtErrorLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class YEAR_ASSESSMENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of YEAR_ASSESSMENTRow)
        
        Private columnYA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "YEAR_ASSESSMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As YEAR_ASSESSMENTRow
            Get
                Return CType(Me.Rows(index),YEAR_ASSESSMENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event YEAR_ASSESSMENTRowChanging As YEAR_ASSESSMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event YEAR_ASSESSMENTRowChanged As YEAR_ASSESSMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event YEAR_ASSESSMENTRowDeleting As YEAR_ASSESSMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event YEAR_ASSESSMENTRowDeleted As YEAR_ASSESSMENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddYEAR_ASSESSMENTRow(ByVal row As YEAR_ASSESSMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddYEAR_ASSESSMENTRow(ByVal YA As String) As YEAR_ASSESSMENTRow
            Dim rowYEAR_ASSESSMENTRow As YEAR_ASSESSMENTRow = CType(Me.NewRow,YEAR_ASSESSMENTRow)
            Dim columnValuesArray() As Object = New Object() {YA}
            rowYEAR_ASSESSMENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowYEAR_ASSESSMENTRow)
            Return rowYEAR_ASSESSMENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As YEAR_ASSESSMENTDataTable = CType(MyBase.Clone,YEAR_ASSESSMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New YEAR_ASSESSMENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnYA = MyBase.Columns("YA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnYA = New Global.System.Data.DataColumn("YA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYA)
            Me.columnYA.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewYEAR_ASSESSMENTRow() As YEAR_ASSESSMENTRow
            Return CType(Me.NewRow,YEAR_ASSESSMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New YEAR_ASSESSMENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(YEAR_ASSESSMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.YEAR_ASSESSMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent YEAR_ASSESSMENTRowChanged(Me, New YEAR_ASSESSMENTRowChangeEvent(CType(e.Row,YEAR_ASSESSMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.YEAR_ASSESSMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent YEAR_ASSESSMENTRowChanging(Me, New YEAR_ASSESSMENTRowChangeEvent(CType(e.Row,YEAR_ASSESSMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.YEAR_ASSESSMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent YEAR_ASSESSMENTRowDeleted(Me, New YEAR_ASSESSMENTRowChangeEvent(CType(e.Row,YEAR_ASSESSMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.YEAR_ASSESSMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent YEAR_ASSESSMENTRowDeleting(Me, New YEAR_ASSESSMENTRowChangeEvent(CType(e.Row,YEAR_ASSESSMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveYEAR_ASSESSMENTRow(ByVal row As YEAR_ASSESSMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "YEAR_ASSESSMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtDatabaseColumnListDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtDatabaseColumnListRow)
        
        Private columnTABLE_CATALOG As Global.System.Data.DataColumn
        
        Private columnTABLE_SCHEMA As Global.System.Data.DataColumn
        
        Private columnTABLE_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtDatabaseColumnList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABLE_CATALOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABLE_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABLE_SCHEMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABLE_SCHEMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TABLE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTABLE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtDatabaseColumnListRow
            Get
                Return CType(Me.Rows(index),dtDatabaseColumnListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtDatabaseColumnListRowChanging As dtDatabaseColumnListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtDatabaseColumnListRowChanged As dtDatabaseColumnListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtDatabaseColumnListRowDeleting As dtDatabaseColumnListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dtDatabaseColumnListRowDeleted As dtDatabaseColumnListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddtDatabaseColumnListRow(ByVal row As dtDatabaseColumnListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddtDatabaseColumnListRow(ByVal TABLE_CATALOG As String, ByVal TABLE_SCHEMA As String, ByVal TABLE_NAME As String) As dtDatabaseColumnListRow
            Dim rowdtDatabaseColumnListRow As dtDatabaseColumnListRow = CType(Me.NewRow,dtDatabaseColumnListRow)
            Dim columnValuesArray() As Object = New Object() {TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME}
            rowdtDatabaseColumnListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtDatabaseColumnListRow)
            Return rowdtDatabaseColumnListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtDatabaseColumnListDataTable = CType(MyBase.Clone,dtDatabaseColumnListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtDatabaseColumnListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTABLE_CATALOG = MyBase.Columns("TABLE_CATALOG")
            Me.columnTABLE_SCHEMA = MyBase.Columns("TABLE_SCHEMA")
            Me.columnTABLE_NAME = MyBase.Columns("TABLE_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTABLE_CATALOG = New Global.System.Data.DataColumn("TABLE_CATALOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABLE_CATALOG)
            Me.columnTABLE_SCHEMA = New Global.System.Data.DataColumn("TABLE_SCHEMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABLE_SCHEMA)
            Me.columnTABLE_NAME = New Global.System.Data.DataColumn("TABLE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTABLE_NAME)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdtDatabaseColumnListRow() As dtDatabaseColumnListRow
            Return CType(Me.NewRow,dtDatabaseColumnListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtDatabaseColumnListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtDatabaseColumnListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtDatabaseColumnListRowChangedEvent) Is Nothing) Then
                RaiseEvent dtDatabaseColumnListRowChanged(Me, New dtDatabaseColumnListRowChangeEvent(CType(e.Row,dtDatabaseColumnListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtDatabaseColumnListRowChangingEvent) Is Nothing) Then
                RaiseEvent dtDatabaseColumnListRowChanging(Me, New dtDatabaseColumnListRowChangeEvent(CType(e.Row,dtDatabaseColumnListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtDatabaseColumnListRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtDatabaseColumnListRowDeleted(Me, New dtDatabaseColumnListRowChangeEvent(CType(e.Row,dtDatabaseColumnListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtDatabaseColumnListRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtDatabaseColumnListRowDeleting(Me, New dtDatabaseColumnListRowChangeEvent(CType(e.Row,dtDatabaseColumnListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedtDatabaseColumnListRow(ByVal row As dtDatabaseColumnListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtDatabaseColumnListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BANK_CODEDataTable
        Inherits Global.System.Data.TypedTableBase(Of BANK_CODERow)
        
        Private columnBKC_DESC As Global.System.Data.DataColumn
        
        Private columnBKC_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BANK_CODE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BKC_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBKC_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BKC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBKC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BANK_CODERow
            Get
                Return CType(Me.Rows(index),BANK_CODERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANK_CODERowChanging As BANK_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANK_CODERowChanged As BANK_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANK_CODERowDeleting As BANK_CODERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANK_CODERowDeleted As BANK_CODERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBANK_CODERow(ByVal row As BANK_CODERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBANK_CODERow(ByVal BKC_DESC As String, ByVal BKC_CODE As String) As BANK_CODERow
            Dim rowBANK_CODERow As BANK_CODERow = CType(Me.NewRow,BANK_CODERow)
            Dim columnValuesArray() As Object = New Object() {BKC_DESC, BKC_CODE}
            rowBANK_CODERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBANK_CODERow)
            Return rowBANK_CODERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BANK_CODEDataTable = CType(MyBase.Clone,BANK_CODEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BANK_CODEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBKC_DESC = MyBase.Columns("BKC_DESC")
            Me.columnBKC_CODE = MyBase.Columns("BKC_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBKC_DESC = New Global.System.Data.DataColumn("BKC_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBKC_DESC)
            Me.columnBKC_CODE = New Global.System.Data.DataColumn("BKC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBKC_CODE)
            Me.columnBKC_DESC.MaxLength = 255
            Me.columnBKC_CODE.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBANK_CODERow() As BANK_CODERow
            Return CType(Me.NewRow,BANK_CODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BANK_CODERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BANK_CODERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BANK_CODERowChangedEvent) Is Nothing) Then
                RaiseEvent BANK_CODERowChanged(Me, New BANK_CODERowChangeEvent(CType(e.Row,BANK_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BANK_CODERowChangingEvent) Is Nothing) Then
                RaiseEvent BANK_CODERowChanging(Me, New BANK_CODERowChangeEvent(CType(e.Row,BANK_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BANK_CODERowDeletedEvent) Is Nothing) Then
                RaiseEvent BANK_CODERowDeleted(Me, New BANK_CODERowChangeEvent(CType(e.Row,BANK_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BANK_CODERowDeletingEvent) Is Nothing) Then
                RaiseEvent BANK_CODERowDeleting(Me, New BANK_CODERowChangeEvent(CType(e.Row,BANK_CODERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBANK_CODERow(ByVal row As BANK_CODERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BANK_CODEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BANKDataTable
        Inherits Global.System.Data.TypedTableBase(Of BANKRow)
        
        Private columnBK_KEY As Global.System.Data.DataColumn
        
        Private columnBK_NAME As Global.System.Data.DataColumn
        
        Private columnBK_DESC As Global.System.Data.DataColumn
        
        Private columnBK_CODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BANK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BK_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBK_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BANKRow
            Get
                Return CType(Me.Rows(index),BANKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANKRowChanging As BANKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANKRowChanged As BANKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANKRowDeleting As BANKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BANKRowDeleted As BANKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBANKRow(ByVal row As BANKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBANKRow(ByVal BK_KEY As Integer, ByVal BK_NAME As String, ByVal BK_DESC As String, ByVal BK_CODE As String) As BANKRow
            Dim rowBANKRow As BANKRow = CType(Me.NewRow,BANKRow)
            Dim columnValuesArray() As Object = New Object() {BK_KEY, BK_NAME, BK_DESC, BK_CODE}
            rowBANKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBANKRow)
            Return rowBANKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BANKDataTable = CType(MyBase.Clone,BANKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BANKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBK_KEY = MyBase.Columns("BK_KEY")
            Me.columnBK_NAME = MyBase.Columns("BK_NAME")
            Me.columnBK_DESC = MyBase.Columns("BK_DESC")
            Me.columnBK_CODE = MyBase.Columns("BK_CODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBK_KEY = New Global.System.Data.DataColumn("BK_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_KEY)
            Me.columnBK_NAME = New Global.System.Data.DataColumn("BK_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_NAME)
            Me.columnBK_DESC = New Global.System.Data.DataColumn("BK_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_DESC)
            Me.columnBK_CODE = New Global.System.Data.DataColumn("BK_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBK_CODE)
            Me.columnBK_NAME.MaxLength = 100
            Me.columnBK_DESC.MaxLength = 255
            Me.columnBK_CODE.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBANKRow() As BANKRow
            Return CType(Me.NewRow,BANKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BANKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BANKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BANKRowChangedEvent) Is Nothing) Then
                RaiseEvent BANKRowChanged(Me, New BANKRowChangeEvent(CType(e.Row,BANKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BANKRowChangingEvent) Is Nothing) Then
                RaiseEvent BANKRowChanging(Me, New BANKRowChangeEvent(CType(e.Row,BANKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BANKRowDeletedEvent) Is Nothing) Then
                RaiseEvent BANKRowDeleted(Me, New BANKRowChangeEvent(CType(e.Row,BANKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BANKRowDeletingEvent) Is Nothing) Then
                RaiseEvent BANKRowDeleting(Me, New BANKRowChangeEvent(CType(e.Row,BANKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBANKRow(ByVal row As BANKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BANKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COUNTRYDataTable
        Inherits Global.System.Data.TypedTableBase(Of COUNTRYRow)
        
        Private columnCT_CODE As Global.System.Data.DataColumn
        
        Private columnCT_DESC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COUNTRY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CT_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCT_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COUNTRYRow
            Get
                Return CType(Me.Rows(index),COUNTRYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COUNTRYRowChanging As COUNTRYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COUNTRYRowChanged As COUNTRYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COUNTRYRowDeleting As COUNTRYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COUNTRYRowDeleted As COUNTRYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOUNTRYRow(ByVal row As COUNTRYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOUNTRYRow(ByVal CT_CODE As String, ByVal CT_DESC As String) As COUNTRYRow
            Dim rowCOUNTRYRow As COUNTRYRow = CType(Me.NewRow,COUNTRYRow)
            Dim columnValuesArray() As Object = New Object() {CT_CODE, CT_DESC}
            rowCOUNTRYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOUNTRYRow)
            Return rowCOUNTRYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCT_CODE(ByVal CT_CODE As String) As COUNTRYRow
            Return CType(Me.Rows.Find(New Object() {CT_CODE}),COUNTRYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COUNTRYDataTable = CType(MyBase.Clone,COUNTRYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COUNTRYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCT_CODE = MyBase.Columns("CT_CODE")
            Me.columnCT_DESC = MyBase.Columns("CT_DESC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCT_CODE = New Global.System.Data.DataColumn("CT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCT_CODE)
            Me.columnCT_DESC = New Global.System.Data.DataColumn("CT_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCT_DESC)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCT_CODE}, true))
            Me.columnCT_CODE.AllowDBNull = false
            Me.columnCT_CODE.Unique = true
            Me.columnCT_CODE.MaxLength = 2
            Me.columnCT_DESC.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOUNTRYRow() As COUNTRYRow
            Return CType(Me.NewRow,COUNTRYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COUNTRYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COUNTRYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COUNTRYRowChangedEvent) Is Nothing) Then
                RaiseEvent COUNTRYRowChanged(Me, New COUNTRYRowChangeEvent(CType(e.Row,COUNTRYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COUNTRYRowChangingEvent) Is Nothing) Then
                RaiseEvent COUNTRYRowChanging(Me, New COUNTRYRowChangeEvent(CType(e.Row,COUNTRYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COUNTRYRowDeletedEvent) Is Nothing) Then
                RaiseEvent COUNTRYRowDeleted(Me, New COUNTRYRowChangeEvent(CType(e.Row,COUNTRYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COUNTRYRowDeletingEvent) Is Nothing) Then
                RaiseEvent COUNTRYRowDeleting(Me, New COUNTRYRowChangeEvent(CType(e.Row,COUNTRYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOUNTRYRow(ByVal row As COUNTRYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COUNTRYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STATESDataTable
        Inherits Global.System.Data.TypedTableBase(Of STATESRow)
        
        Private columnCT_CODE As Global.System.Data.DataColumn
        
        Private columnST_DESC As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STATES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CT_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCT_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ST_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnST_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STATESRow
            Get
                Return CType(Me.Rows(index),STATESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STATESRowChanging As STATESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STATESRowChanged As STATESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STATESRowDeleting As STATESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STATESRowDeleted As STATESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSTATESRow(ByVal row As STATESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSTATESRow(ByVal CT_CODE As String, ByVal ST_DESC As String) As STATESRow
            Dim rowSTATESRow As STATESRow = CType(Me.NewRow,STATESRow)
            Dim columnValuesArray() As Object = New Object() {CT_CODE, ST_DESC}
            rowSTATESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTATESRow)
            Return rowSTATESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STATESDataTable = CType(MyBase.Clone,STATESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STATESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCT_CODE = MyBase.Columns("CT_CODE")
            Me.columnST_DESC = MyBase.Columns("ST_DESC")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCT_CODE = New Global.System.Data.DataColumn("CT_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCT_CODE)
            Me.columnST_DESC = New Global.System.Data.DataColumn("ST_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnST_DESC)
            Me.columnCT_CODE.MaxLength = 2
            Me.columnST_DESC.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSTATESRow() As STATESRow
            Return CType(Me.NewRow,STATESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STATESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STATESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STATESRowChangedEvent) Is Nothing) Then
                RaiseEvent STATESRowChanged(Me, New STATESRowChangeEvent(CType(e.Row,STATESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STATESRowChangingEvent) Is Nothing) Then
                RaiseEvent STATESRowChanging(Me, New STATESRowChangeEvent(CType(e.Row,STATESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STATESRowDeletedEvent) Is Nothing) Then
                RaiseEvent STATESRowDeleted(Me, New STATESRowChangeEvent(CType(e.Row,STATESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STATESRowDeletingEvent) Is Nothing) Then
                RaiseEvent STATESRowDeleting(Me, New STATESRowChangeEvent(CType(e.Row,STATESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSTATESRow(ByVal row As STATESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STATESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BUSINESS_SOURCEDataTable
        Inherits Global.System.Data.TypedTableBase(Of BUSINESS_SOURCERow)
        
        Private columnBC_KEY As Global.System.Data.DataColumn
        
        Private columnBC_SOURCEKEY As Global.System.Data.DataColumn
        
        Private columnBC_YA As Global.System.Data.DataColumn
        
        Private columnBC_SOURCENO As Global.System.Data.DataColumn
        
        Private columnBC_CODE As Global.System.Data.DataColumn
        
        Private columnBC_TYPE As Global.System.Data.DataColumn
        
        Private columnBC_COMPANY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BUSINESS_SOURCE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_SOURCEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_SOURCEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_YAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_YA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BC_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBC_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BUSINESS_SOURCERow
            Get
                Return CType(Me.Rows(index),BUSINESS_SOURCERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESS_SOURCERowChanging As BUSINESS_SOURCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESS_SOURCERowChanged As BUSINESS_SOURCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESS_SOURCERowDeleting As BUSINESS_SOURCERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESS_SOURCERowDeleted As BUSINESS_SOURCERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBUSINESS_SOURCERow(ByVal row As BUSINESS_SOURCERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBUSINESS_SOURCERow(ByVal BC_KEY As String, ByVal BC_SOURCEKEY As Integer, ByVal BC_YA As String, ByVal BC_SOURCENO As Integer, ByVal BC_CODE As String, ByVal BC_TYPE As String, ByVal BC_COMPANY As String) As BUSINESS_SOURCERow
            Dim rowBUSINESS_SOURCERow As BUSINESS_SOURCERow = CType(Me.NewRow,BUSINESS_SOURCERow)
            Dim columnValuesArray() As Object = New Object() {BC_KEY, BC_SOURCEKEY, BC_YA, BC_SOURCENO, BC_CODE, BC_TYPE, BC_COMPANY}
            rowBUSINESS_SOURCERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBUSINESS_SOURCERow)
            Return rowBUSINESS_SOURCERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BUSINESS_SOURCEDataTable = CType(MyBase.Clone,BUSINESS_SOURCEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BUSINESS_SOURCEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBC_KEY = MyBase.Columns("BC_KEY")
            Me.columnBC_SOURCEKEY = MyBase.Columns("BC_SOURCEKEY")
            Me.columnBC_YA = MyBase.Columns("BC_YA")
            Me.columnBC_SOURCENO = MyBase.Columns("BC_SOURCENO")
            Me.columnBC_CODE = MyBase.Columns("BC_CODE")
            Me.columnBC_TYPE = MyBase.Columns("BC_TYPE")
            Me.columnBC_COMPANY = MyBase.Columns("BC_COMPANY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBC_KEY = New Global.System.Data.DataColumn("BC_KEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_KEY)
            Me.columnBC_SOURCEKEY = New Global.System.Data.DataColumn("BC_SOURCEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_SOURCEKEY)
            Me.columnBC_YA = New Global.System.Data.DataColumn("BC_YA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_YA)
            Me.columnBC_SOURCENO = New Global.System.Data.DataColumn("BC_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_SOURCENO)
            Me.columnBC_CODE = New Global.System.Data.DataColumn("BC_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_CODE)
            Me.columnBC_TYPE = New Global.System.Data.DataColumn("BC_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_TYPE)
            Me.columnBC_COMPANY = New Global.System.Data.DataColumn("BC_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBC_COMPANY)
            Me.columnBC_KEY.MaxLength = 20
            Me.columnBC_YA.MaxLength = 5
            Me.columnBC_CODE.MaxLength = 20
            Me.columnBC_TYPE.MaxLength = 255
            Me.columnBC_COMPANY.MaxLength = 8
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBUSINESS_SOURCERow() As BUSINESS_SOURCERow
            Return CType(Me.NewRow,BUSINESS_SOURCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BUSINESS_SOURCERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BUSINESS_SOURCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BUSINESS_SOURCERowChangedEvent) Is Nothing) Then
                RaiseEvent BUSINESS_SOURCERowChanged(Me, New BUSINESS_SOURCERowChangeEvent(CType(e.Row,BUSINESS_SOURCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BUSINESS_SOURCERowChangingEvent) Is Nothing) Then
                RaiseEvent BUSINESS_SOURCERowChanging(Me, New BUSINESS_SOURCERowChangeEvent(CType(e.Row,BUSINESS_SOURCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BUSINESS_SOURCERowDeletedEvent) Is Nothing) Then
                RaiseEvent BUSINESS_SOURCERowDeleted(Me, New BUSINESS_SOURCERowChangeEvent(CType(e.Row,BUSINESS_SOURCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BUSINESS_SOURCERowDeletingEvent) Is Nothing) Then
                RaiseEvent BUSINESS_SOURCERowDeleting(Me, New BUSINESS_SOURCERowChangeEvent(CType(e.Row,BUSINESS_SOURCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBUSINESS_SOURCERow(ByVal row As BUSINESS_SOURCERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BUSINESS_SOURCEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BUSINESSDataTable
        Inherits Global.System.Data.TypedTableBase(Of BUSINESSRow)
        
        Private columnBS_CODE As Global.System.Data.DataColumn
        
        Private columnBS_CATEGORY As Global.System.Data.DataColumn
        
        Private columnBS_TYPE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BUSINESS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BS_CATEGORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBS_CATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BS_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBS_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BUSINESSRow
            Get
                Return CType(Me.Rows(index),BUSINESSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESSRowChanging As BUSINESSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESSRowChanged As BUSINESSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESSRowDeleting As BUSINESSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BUSINESSRowDeleted As BUSINESSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBUSINESSRow(ByVal row As BUSINESSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBUSINESSRow(ByVal BS_CODE As String, ByVal BS_CATEGORY As String, ByVal BS_TYPE As String) As BUSINESSRow
            Dim rowBUSINESSRow As BUSINESSRow = CType(Me.NewRow,BUSINESSRow)
            Dim columnValuesArray() As Object = New Object() {BS_CODE, BS_CATEGORY, BS_TYPE}
            rowBUSINESSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBUSINESSRow)
            Return rowBUSINESSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByBS_CODE(ByVal BS_CODE As String) As BUSINESSRow
            Return CType(Me.Rows.Find(New Object() {BS_CODE}),BUSINESSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BUSINESSDataTable = CType(MyBase.Clone,BUSINESSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BUSINESSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBS_CODE = MyBase.Columns("BS_CODE")
            Me.columnBS_CATEGORY = MyBase.Columns("BS_CATEGORY")
            Me.columnBS_TYPE = MyBase.Columns("BS_TYPE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBS_CODE = New Global.System.Data.DataColumn("BS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBS_CODE)
            Me.columnBS_CATEGORY = New Global.System.Data.DataColumn("BS_CATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBS_CATEGORY)
            Me.columnBS_TYPE = New Global.System.Data.DataColumn("BS_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBS_TYPE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBS_CODE}, true))
            Me.columnBS_CODE.AllowDBNull = false
            Me.columnBS_CODE.Unique = true
            Me.columnBS_CODE.MaxLength = 20
            Me.columnBS_CATEGORY.MaxLength = 255
            Me.columnBS_TYPE.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBUSINESSRow() As BUSINESSRow
            Return CType(Me.NewRow,BUSINESSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BUSINESSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BUSINESSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BUSINESSRowChangedEvent) Is Nothing) Then
                RaiseEvent BUSINESSRowChanged(Me, New BUSINESSRowChangeEvent(CType(e.Row,BUSINESSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BUSINESSRowChangingEvent) Is Nothing) Then
                RaiseEvent BUSINESSRowChanging(Me, New BUSINESSRowChangeEvent(CType(e.Row,BUSINESSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BUSINESSRowDeletedEvent) Is Nothing) Then
                RaiseEvent BUSINESSRowDeleted(Me, New BUSINESSRowChangeEvent(CType(e.Row,BUSINESSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BUSINESSRowDeletingEvent) Is Nothing) Then
                RaiseEvent BUSINESSRowDeleting(Me, New BUSINESSRowChangeEvent(CType(e.Row,BUSINESSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBUSINESSRow(ByVal row As BUSINESSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BUSINESSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TAXP_PARTNERSHIPDataTable
        Inherits Global.System.Data.TypedTableBase(Of TAXP_PARTNERSHIPRow)
        
        Private columnPS_PREFIX As Global.System.Data.DataColumn
        
        Private columnPS_KEY As Global.System.Data.DataColumn
        
        Private columnPS_SOURCEKEY As Global.System.Data.DataColumn
        
        Private columnPS_YA As Global.System.Data.DataColumn
        
        Private columnPS_SOURCENO As Global.System.Data.DataColumn
        
        Private columnPS_FILE_NO1 As Global.System.Data.DataColumn
        
        Private columnPS_FILE_NO2 As Global.System.Data.DataColumn
        
        Private columnPS_FILE_NO3 As Global.System.Data.DataColumn
        
        Private columnPS_CODE As Global.System.Data.DataColumn
        
        Private columnPS_TYPE As Global.System.Data.DataColumn
        
        Private columnPS_COM_REG_NO As Global.System.Data.DataColumn
        
        Private columnPS_COM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TAXP_PARTNERSHIP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_PREFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_PREFIX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_SOURCEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_SOURCEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_YAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_YA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_FILE_NO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_FILE_NO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_FILE_NO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_FILE_NO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_FILE_NO3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_FILE_NO3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_COM_REG_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_COM_REG_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PS_COM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPS_COM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TAXP_PARTNERSHIPRow
            Get
                Return CType(Me.Rows(index),TAXP_PARTNERSHIPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TAXP_PARTNERSHIPRowChanging As TAXP_PARTNERSHIPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TAXP_PARTNERSHIPRowChanged As TAXP_PARTNERSHIPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TAXP_PARTNERSHIPRowDeleting As TAXP_PARTNERSHIPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TAXP_PARTNERSHIPRowDeleted As TAXP_PARTNERSHIPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTAXP_PARTNERSHIPRow(ByVal row As TAXP_PARTNERSHIPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTAXP_PARTNERSHIPRow(ByVal PS_PREFIX As String, ByVal PS_KEY As String, ByVal PS_SOURCEKEY As Integer, ByVal PS_YA As String, ByVal PS_SOURCENO As Integer, ByVal PS_FILE_NO1 As String, ByVal PS_FILE_NO2 As String, ByVal PS_FILE_NO3 As String, ByVal PS_CODE As String, ByVal PS_TYPE As String, ByVal PS_COM_REG_NO As String, ByVal PS_COM_NAME As String) As TAXP_PARTNERSHIPRow
            Dim rowTAXP_PARTNERSHIPRow As TAXP_PARTNERSHIPRow = CType(Me.NewRow,TAXP_PARTNERSHIPRow)
            Dim columnValuesArray() As Object = New Object() {PS_PREFIX, PS_KEY, PS_SOURCEKEY, PS_YA, PS_SOURCENO, PS_FILE_NO1, PS_FILE_NO2, PS_FILE_NO3, PS_CODE, PS_TYPE, PS_COM_REG_NO, PS_COM_NAME}
            rowTAXP_PARTNERSHIPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTAXP_PARTNERSHIPRow)
            Return rowTAXP_PARTNERSHIPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TAXP_PARTNERSHIPDataTable = CType(MyBase.Clone,TAXP_PARTNERSHIPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TAXP_PARTNERSHIPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPS_PREFIX = MyBase.Columns("PS_PREFIX")
            Me.columnPS_KEY = MyBase.Columns("PS_KEY")
            Me.columnPS_SOURCEKEY = MyBase.Columns("PS_SOURCEKEY")
            Me.columnPS_YA = MyBase.Columns("PS_YA")
            Me.columnPS_SOURCENO = MyBase.Columns("PS_SOURCENO")
            Me.columnPS_FILE_NO1 = MyBase.Columns("PS_FILE_NO1")
            Me.columnPS_FILE_NO2 = MyBase.Columns("PS_FILE_NO2")
            Me.columnPS_FILE_NO3 = MyBase.Columns("PS_FILE_NO3")
            Me.columnPS_CODE = MyBase.Columns("PS_CODE")
            Me.columnPS_TYPE = MyBase.Columns("PS_TYPE")
            Me.columnPS_COM_REG_NO = MyBase.Columns("PS_COM_REG_NO")
            Me.columnPS_COM_NAME = MyBase.Columns("PS_COM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPS_PREFIX = New Global.System.Data.DataColumn("PS_PREFIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_PREFIX)
            Me.columnPS_KEY = New Global.System.Data.DataColumn("PS_KEY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_KEY)
            Me.columnPS_SOURCEKEY = New Global.System.Data.DataColumn("PS_SOURCEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_SOURCEKEY)
            Me.columnPS_YA = New Global.System.Data.DataColumn("PS_YA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_YA)
            Me.columnPS_SOURCENO = New Global.System.Data.DataColumn("PS_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_SOURCENO)
            Me.columnPS_FILE_NO1 = New Global.System.Data.DataColumn("PS_FILE_NO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_FILE_NO1)
            Me.columnPS_FILE_NO2 = New Global.System.Data.DataColumn("PS_FILE_NO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_FILE_NO2)
            Me.columnPS_FILE_NO3 = New Global.System.Data.DataColumn("PS_FILE_NO3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_FILE_NO3)
            Me.columnPS_CODE = New Global.System.Data.DataColumn("PS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_CODE)
            Me.columnPS_TYPE = New Global.System.Data.DataColumn("PS_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_TYPE)
            Me.columnPS_COM_REG_NO = New Global.System.Data.DataColumn("PS_COM_REG_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_COM_REG_NO)
            Me.columnPS_COM_NAME = New Global.System.Data.DataColumn("PS_COM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPS_COM_NAME)
            Me.columnPS_PREFIX.MaxLength = 3
            Me.columnPS_KEY.MaxLength = 20
            Me.columnPS_YA.MaxLength = 5
            Me.columnPS_FILE_NO1.MaxLength = 1
            Me.columnPS_FILE_NO2.MaxLength = 20
            Me.columnPS_FILE_NO3.MaxLength = 2
            Me.columnPS_CODE.MaxLength = 20
            Me.columnPS_TYPE.MaxLength = 255
            Me.columnPS_COM_REG_NO.MaxLength = 20
            Me.columnPS_COM_NAME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTAXP_PARTNERSHIPRow() As TAXP_PARTNERSHIPRow
            Return CType(Me.NewRow,TAXP_PARTNERSHIPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TAXP_PARTNERSHIPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TAXP_PARTNERSHIPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TAXP_PARTNERSHIPRowChangedEvent) Is Nothing) Then
                RaiseEvent TAXP_PARTNERSHIPRowChanged(Me, New TAXP_PARTNERSHIPRowChangeEvent(CType(e.Row,TAXP_PARTNERSHIPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TAXP_PARTNERSHIPRowChangingEvent) Is Nothing) Then
                RaiseEvent TAXP_PARTNERSHIPRowChanging(Me, New TAXP_PARTNERSHIPRowChangeEvent(CType(e.Row,TAXP_PARTNERSHIPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TAXP_PARTNERSHIPRowDeletedEvent) Is Nothing) Then
                RaiseEvent TAXP_PARTNERSHIPRowDeleted(Me, New TAXP_PARTNERSHIPRowChangeEvent(CType(e.Row,TAXP_PARTNERSHIPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TAXP_PARTNERSHIPRowDeletingEvent) Is Nothing) Then
                RaiseEvent TAXP_PARTNERSHIPRowDeleting(Me, New TAXP_PARTNERSHIPRowChangeEvent(CType(e.Row,TAXP_PARTNERSHIPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTAXP_PARTNERSHIPRow(ByVal row As TAXP_PARTNERSHIPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TAXP_PARTNERSHIPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TAXP_PROFILEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TAXP_PROFILERow)
        
        Private columnTP_REF_NO As Global.System.Data.DataColumn
        
        Private columnTP_COM_NAME As Global.System.Data.DataColumn
        
        Private columnTP_ROC_NO As Global.System.Data.DataColumn
        
        Private columnTP_EMPLOYER_NO As Global.System.Data.DataColumn
        
        Private columnTP_FILE_NO As Global.System.Data.DataColumn
        
        Private columnTP_RESIDENCE As Global.System.Data.DataColumn
        
        Private columnTP_COUNTRY As Global.System.Data.DataColumn
        
        Private columnTP_ACC_PERIOD_FR As Global.System.Data.DataColumn
        
        Private columnTP_ACC_PERIOD_TO As Global.System.Data.DataColumn
        
        Private columnTP_EFILING As Global.System.Data.DataColumn
        
        Private columnTP_PUBLIC_ORDER As Global.System.Data.DataColumn
        
        Private columnTP_CO_STATUS As Global.System.Data.DataColumn
        
        Private columnTP_EMAIL As Global.System.Data.DataColumn
        
        Private columnTP_REG_ADD_LINE1 As Global.System.Data.DataColumn
        
        Private columnTP_REG_ADD_LINE2 As Global.System.Data.DataColumn
        
        Private columnTP_REG_ADD_LINE3 As Global.System.Data.DataColumn
        
        Private columnTP_REG_POSTCODE As Global.System.Data.DataColumn
        
        Private columnTP_REG_CITY As Global.System.Data.DataColumn
        
        Private columnTP_REG_STATE As Global.System.Data.DataColumn
        
        Private columnTP_CURR_ADD_LINE1 As Global.System.Data.DataColumn
        
        Private columnTP_CURR_ADD_LINE2 As Global.System.Data.DataColumn
        
        Private columnTP_CURR_ADD_LINE3 As Global.System.Data.DataColumn
        
        Private columnTP_CURR_POSTCODE As Global.System.Data.DataColumn
        
        Private columnTP_CURR_CITY As Global.System.Data.DataColumn
        
        Private columnTP_CURR_STATE As Global.System.Data.DataColumn
        
        Private columnTP_COM_ADD_LINE1 As Global.System.Data.DataColumn
        
        Private columnTP_COM_ADD_LINE2 As Global.System.Data.DataColumn
        
        Private columnTP_COM_ADD_LINE3 As Global.System.Data.DataColumn
        
        Private columnTP_COM_POSTCODE As Global.System.Data.DataColumn
        
        Private columnTP_COM_CITY As Global.System.Data.DataColumn
        
        Private columnTP_COM_STATE As Global.System.Data.DataColumn
        
        Private columnTP_BANK As Global.System.Data.DataColumn
        
        Private columnTP_BANK_ACC As Global.System.Data.DataColumn
        
        Private columnTP_BANK_ADD_LINE1 As Global.System.Data.DataColumn
        
        Private columnTP_BANK_ADD_LINE2 As Global.System.Data.DataColumn
        
        Private columnTP_BANK_ADD_LINE3 As Global.System.Data.DataColumn
        
        Private columnTP_BANK_POSTCODE As Global.System.Data.DataColumn
        
        Private columnTP_BANK_CITY As Global.System.Data.DataColumn
        
        Private columnTP_BANK_STATE As Global.System.Data.DataColumn
        
        Private columnTP_RECORD_KEPT As Global.System.Data.DataColumn
        
        Private columnTP_ALT_ADD_LINE1 As Global.System.Data.DataColumn
        
        Private columnTP_ALT_ADD_LINE2 As Global.System.Data.DataColumn
        
        Private columnTP_ALT_ADD_LINE3 As Global.System.Data.DataColumn
        
        Private columnTP_ALT_POSTCODE As Global.System.Data.DataColumn
        
        Private columnTP_ALT_CITY As Global.System.Data.DataColumn
        
        Private columnTP_ALT_STATE As Global.System.Data.DataColumn
        
        Private columnTP_TAX_FILE_NO As Global.System.Data.DataColumn
        
        Private columnTP_CONTACT As Global.System.Data.DataColumn
        
        Private columnTP_TEL_NO As Global.System.Data.DataColumn
        
        Private columnTP_FAX_NO As Global.System.Data.DataColumn
        
        Private columnTP_INV_ANN_DATE As Global.System.Data.DataColumn
        
        Private columnTP_INV_DETTAXFEE As Global.System.Data.DataColumn
        
        Private columnTP_INV_DISBURSEMENT As Global.System.Data.DataColumn
        
        Private columnTP_INV_SALESTAX As Global.System.Data.DataColumn
        
        Private columnTP_INV_TOTAL As Global.System.Data.DataColumn
        
        Private columnTP_PREFIX As Global.System.Data.DataColumn
        
        Private columnTP_BLOG As Global.System.Data.DataColumn
        
        Private columnTP_BASIS_PERIOD_FR As Global.System.Data.DataColumn
        
        Private columnTP_BASIS_PERIOD_TO As Global.System.Data.DataColumn
        
        Private columnTP_OPN_OPERATION As Global.System.Data.DataColumn
        
        Private columnTP_ULT_COMPANY As Global.System.Data.DataColumn
        
        Private columnTP_ULT_COUNTRY_CODE As Global.System.Data.DataColumn
        
        Private columnTP_IMD_COMPANY As Global.System.Data.DataColumn
        
        Private columnTP_IMD_COUNTRY_CODE As Global.System.Data.DataColumn
        
        Private columnTP_REG_COUNTRY As Global.System.Data.DataColumn
        
        Private columnTP_CURR_COUNTRY As Global.System.Data.DataColumn
        
        Private columnTP_COM_COUNTRY As Global.System.Data.DataColumn
        
        Private columnTP_ALT_COUNTRY As Global.System.Data.DataColumn
        
        Private columnTP_COM_STS As Global.System.Data.DataColumn
        
        Private columnTP_SECTION_127_1 As Global.System.Data.DataColumn
        
        Private columnTP_SECTION_127_2 As Global.System.Data.DataColumn
        
        Private columnTP_SECTION_127_3 As Global.System.Data.DataColumn
        
        Private columnTP_ROYALCLAIM As Global.System.Data.DataColumn
        
        Private columnTP_CARRYETRANDING As Global.System.Data.DataColumn
        
        Private columnTP_GOODSERVICETAXREGISTRAION As Global.System.Data.DataColumn
        
        Private columnTP_LABUAN_STATUS As Global.System.Data.DataColumn
        
        Private columnTP_LABUAN_NAME As Global.System.Data.DataColumn
        
        Private columnTP_LABUAN_REG As Global.System.Data.DataColumn
        
        Private columnTP_LABUAN_INCOME_TAX As Global.System.Data.DataColumn
        
        Private columnTP_BUILDINGINDUSTRY As Global.System.Data.DataColumn
        
        Private columnTP_STS_OTHER As Global.System.Data.DataColumn
        
        Private columnHandleBy As Global.System.Data.DataColumn
        
        Private columnModifiedBy As Global.System.Data.DataColumn

        Private columnModifiedDateTime As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "TAXP_PROFILE"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REF_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REF_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ROC_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ROC_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_EMPLOYER_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_EMPLOYER_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_FILE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_FILE_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_RESIDENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_RESIDENCE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COUNTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ACC_PERIOD_FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ACC_PERIOD_FR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ACC_PERIOD_TOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ACC_PERIOD_TO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_EFILINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_EFILING
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_PUBLIC_ORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_PUBLIC_ORDER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CO_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CO_STATUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_EMAIL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_ADD_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_ADD_LINE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_ADD_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_ADD_LINE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_ADD_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_ADD_LINE3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_CITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_STATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_ADD_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_ADD_LINE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_ADD_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_ADD_LINE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_ADD_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_ADD_LINE3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_CITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_STATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_ADD_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_ADD_LINE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_ADD_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_ADD_LINE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_ADD_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_ADD_LINE3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_CITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_STATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_ACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_ACC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_ADD_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_ADD_LINE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_ADD_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_ADD_LINE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_ADD_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_ADD_LINE3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_CITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BANK_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BANK_STATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_RECORD_KEPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_RECORD_KEPT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_ADD_LINE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_ADD_LINE1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_ADD_LINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_ADD_LINE2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_ADD_LINE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_ADD_LINE3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_POSTCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_POSTCODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_CITY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_STATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_TAX_FILE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_TAX_FILE_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CONTACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CONTACT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_TEL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_TEL_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_FAX_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_FAX_NO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_INV_ANN_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_INV_ANN_DATE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_INV_DETTAXFEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_INV_DETTAXFEE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_INV_DISBURSEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_INV_DISBURSEMENT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_INV_SALESTAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_INV_SALESTAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_INV_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_INV_TOTAL
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_PREFIXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_PREFIX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BLOGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BLOG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BASIS_PERIOD_FRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BASIS_PERIOD_FR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BASIS_PERIOD_TOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BASIS_PERIOD_TO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_OPN_OPERATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_OPN_OPERATION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ULT_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ULT_COMPANY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ULT_COUNTRY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ULT_COUNTRY_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_IMD_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_IMD_COMPANY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_IMD_COUNTRY_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_IMD_COUNTRY_CODE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_REG_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REG_COUNTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CURR_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CURR_COUNTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_COUNTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ALT_COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ALT_COUNTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_COM_STSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_COM_STS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_SECTION_127_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_SECTION_127_1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_SECTION_127_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_SECTION_127_2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_SECTION_127_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_SECTION_127_3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_ROYALCLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_ROYALCLAIM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_CARRYETRANDINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_CARRYETRANDING
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_GOODSERVICETAXREGISTRAIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_GOODSERVICETAXREGISTRAION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_LABUAN_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_LABUAN_STATUS
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_LABUAN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_LABUAN_NAME
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_LABUAN_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_LABUAN_REG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_LABUAN_INCOME_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_LABUAN_INCOME_TAX
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_BUILDINGINDUSTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_BUILDINGINDUSTRY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TP_STS_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_STS_OTHER
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HandleByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHandleBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ModifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ModifiedDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedDateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As TAXP_PROFILERow
            Get
                Return CType(Me.Rows(index), TAXP_PROFILERow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TAXP_PROFILERowChanging As TAXP_PROFILERowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TAXP_PROFILERowChanged As TAXP_PROFILERowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TAXP_PROFILERowDeleting As TAXP_PROFILERowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event TAXP_PROFILERowDeleted As TAXP_PROFILERowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddTAXP_PROFILERow(ByVal row As TAXP_PROFILERow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddTAXP_PROFILERow( _
                    ByVal TP_REF_NO As String, _
                    ByVal TP_COM_NAME As String, _
                    ByVal TP_ROC_NO As String, _
                    ByVal TP_EMPLOYER_NO As String, _
                    ByVal TP_FILE_NO As String, _
                    ByVal TP_RESIDENCE As String, _
                    ByVal TP_COUNTRY As String, _
                    ByVal TP_ACC_PERIOD_FR As Date, _
                    ByVal TP_ACC_PERIOD_TO As Date, _
                    ByVal TP_EFILING As String, _
                    ByVal TP_PUBLIC_ORDER As String, _
                    ByVal TP_CO_STATUS As String, _
                    ByVal TP_EMAIL As String, _
                    ByVal TP_REG_ADD_LINE1 As String, _
                    ByVal TP_REG_ADD_LINE2 As String, _
                    ByVal TP_REG_ADD_LINE3 As String, _
                    ByVal TP_REG_POSTCODE As String, _
                    ByVal TP_REG_CITY As String, _
                    ByVal TP_REG_STATE As String, _
                    ByVal TP_CURR_ADD_LINE1 As String, _
                    ByVal TP_CURR_ADD_LINE2 As String, _
                    ByVal TP_CURR_ADD_LINE3 As String, _
                    ByVal TP_CURR_POSTCODE As String, _
                    ByVal TP_CURR_CITY As String, _
                    ByVal TP_CURR_STATE As String, _
                    ByVal TP_COM_ADD_LINE1 As String, _
                    ByVal TP_COM_ADD_LINE2 As String, _
                    ByVal TP_COM_ADD_LINE3 As String, _
                    ByVal TP_COM_POSTCODE As String, _
                    ByVal TP_COM_CITY As String, _
                    ByVal TP_COM_STATE As String, _
                    ByVal TP_BANK As String, _
                    ByVal TP_BANK_ACC As String, _
                    ByVal TP_BANK_ADD_LINE1 As String, _
                    ByVal TP_BANK_ADD_LINE2 As String, _
                    ByVal TP_BANK_ADD_LINE3 As String, _
                    ByVal TP_BANK_POSTCODE As String, _
                    ByVal TP_BANK_CITY As String, _
                    ByVal TP_BANK_STATE As String, _
                    ByVal TP_RECORD_KEPT As String, _
                    ByVal TP_ALT_ADD_LINE1 As String, _
                    ByVal TP_ALT_ADD_LINE2 As String, _
                    ByVal TP_ALT_ADD_LINE3 As String, _
                    ByVal TP_ALT_POSTCODE As String, _
                    ByVal TP_ALT_CITY As String, _
                    ByVal TP_ALT_STATE As String, _
                    ByVal TP_TAX_FILE_NO As String, _
                    ByVal TP_CONTACT As String, _
                    ByVal TP_TEL_NO As String, _
                    ByVal TP_FAX_NO As String, _
                    ByVal TP_INV_ANN_DATE As Date, _
                    ByVal TP_INV_DETTAXFEE As String, _
                    ByVal TP_INV_DISBURSEMENT As String, _
                    ByVal TP_INV_SALESTAX As String, _
                    ByVal TP_INV_TOTAL As String, _
                    ByVal TP_PREFIX As String, _
                    ByVal TP_BLOG As String, _
                    ByVal TP_BASIS_PERIOD_FR As Date, _
                    ByVal TP_BASIS_PERIOD_TO As Date, _
                    ByVal TP_OPN_OPERATION As Date, _
                    ByVal TP_ULT_COMPANY As String, _
                    ByVal TP_ULT_COUNTRY_CODE As String, _
                    ByVal TP_IMD_COMPANY As String, _
                    ByVal TP_IMD_COUNTRY_CODE As String, _
                    ByVal TP_REG_COUNTRY As String, _
                    ByVal TP_CURR_COUNTRY As String, _
                    ByVal TP_COM_COUNTRY As String, _
                    ByVal TP_ALT_COUNTRY As String, _
                    ByVal TP_COM_STS As String, _
                    ByVal TP_SECTION_127_1 As String, _
                    ByVal TP_SECTION_127_2 As String, _
                    ByVal TP_SECTION_127_3 As String, _
                    ByVal TP_ROYALCLAIM As String, _
                    ByVal TP_CARRYETRANDING As String, _
                    ByVal TP_GOODSERVICETAXREGISTRAION As String, _
                    ByVal TP_LABUAN_STATUS As String, _
                    ByVal TP_LABUAN_NAME As String, _
                    ByVal TP_LABUAN_REG As String, _
                    ByVal TP_LABUAN_INCOME_TAX As String, _
                    ByVal TP_BUILDINGINDUSTRY As String, _
                    ByVal TP_STS_OTHER As String, _
                    ByVal HandleBy As String, _
                    ByVal ModifiedBy As String, _
                    ByVal ModifiedDateTime As Date) As TAXP_PROFILERow
            Dim rowTAXP_PROFILERow As TAXP_PROFILERow = CType(Me.NewRow, TAXP_PROFILERow)
            Dim columnValuesArray() As Object = New Object() {TP_REF_NO, TP_COM_NAME, TP_ROC_NO, TP_EMPLOYER_NO, TP_FILE_NO, TP_RESIDENCE, TP_COUNTRY, TP_ACC_PERIOD_FR, TP_ACC_PERIOD_TO, TP_EFILING, TP_PUBLIC_ORDER, TP_CO_STATUS, TP_EMAIL, TP_REG_ADD_LINE1, TP_REG_ADD_LINE2, TP_REG_ADD_LINE3, TP_REG_POSTCODE, TP_REG_CITY, TP_REG_STATE, TP_CURR_ADD_LINE1, TP_CURR_ADD_LINE2, TP_CURR_ADD_LINE3, TP_CURR_POSTCODE, TP_CURR_CITY, TP_CURR_STATE, TP_COM_ADD_LINE1, TP_COM_ADD_LINE2, TP_COM_ADD_LINE3, TP_COM_POSTCODE, TP_COM_CITY, TP_COM_STATE, TP_BANK, TP_BANK_ACC, TP_BANK_ADD_LINE1, TP_BANK_ADD_LINE2, TP_BANK_ADD_LINE3, TP_BANK_POSTCODE, TP_BANK_CITY, TP_BANK_STATE, TP_RECORD_KEPT, TP_ALT_ADD_LINE1, TP_ALT_ADD_LINE2, TP_ALT_ADD_LINE3, TP_ALT_POSTCODE, TP_ALT_CITY, TP_ALT_STATE, TP_TAX_FILE_NO, TP_CONTACT, TP_TEL_NO, TP_FAX_NO, TP_INV_ANN_DATE, TP_INV_DETTAXFEE, TP_INV_DISBURSEMENT, TP_INV_SALESTAX, TP_INV_TOTAL, TP_PREFIX, TP_BLOG, TP_BASIS_PERIOD_FR, TP_BASIS_PERIOD_TO, TP_OPN_OPERATION, TP_ULT_COMPANY, TP_ULT_COUNTRY_CODE, TP_IMD_COMPANY, TP_IMD_COUNTRY_CODE, TP_REG_COUNTRY, TP_CURR_COUNTRY, TP_COM_COUNTRY, TP_ALT_COUNTRY, TP_COM_STS, TP_SECTION_127_1, TP_SECTION_127_2, TP_SECTION_127_3, TP_ROYALCLAIM, TP_CARRYETRANDING, TP_GOODSERVICETAXREGISTRAION, TP_LABUAN_STATUS, TP_LABUAN_NAME, TP_LABUAN_REG, TP_LABUAN_INCOME_TAX, TP_BUILDINGINDUSTRY, TP_STS_OTHER, HandleBy, ModifiedBy, ModifiedDateTime}
            rowTAXP_PROFILERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTAXP_PROFILERow)
            Return rowTAXP_PROFILERow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByTP_REF_NO(ByVal TP_REF_NO As String) As TAXP_PROFILERow
            Return CType(Me.Rows.Find(New Object() {TP_REF_NO}), TAXP_PROFILERow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TAXP_PROFILEDataTable = CType(MyBase.Clone, TAXP_PROFILEDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TAXP_PROFILEDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTP_REF_NO = MyBase.Columns("TP_REF_NO")
            Me.columnTP_COM_NAME = MyBase.Columns("TP_COM_NAME")
            Me.columnTP_ROC_NO = MyBase.Columns("TP_ROC_NO")
            Me.columnTP_EMPLOYER_NO = MyBase.Columns("TP_EMPLOYER_NO")
            Me.columnTP_FILE_NO = MyBase.Columns("TP_FILE_NO")
            Me.columnTP_RESIDENCE = MyBase.Columns("TP_RESIDENCE")
            Me.columnTP_COUNTRY = MyBase.Columns("TP_COUNTRY")
            Me.columnTP_ACC_PERIOD_FR = MyBase.Columns("TP_ACC_PERIOD_FR")
            Me.columnTP_ACC_PERIOD_TO = MyBase.Columns("TP_ACC_PERIOD_TO")
            Me.columnTP_EFILING = MyBase.Columns("TP_EFILING")
            Me.columnTP_PUBLIC_ORDER = MyBase.Columns("TP_PUBLIC_ORDER")
            Me.columnTP_CO_STATUS = MyBase.Columns("TP_CO_STATUS")
            Me.columnTP_EMAIL = MyBase.Columns("TP_EMAIL")
            Me.columnTP_REG_ADD_LINE1 = MyBase.Columns("TP_REG_ADD_LINE1")
            Me.columnTP_REG_ADD_LINE2 = MyBase.Columns("TP_REG_ADD_LINE2")
            Me.columnTP_REG_ADD_LINE3 = MyBase.Columns("TP_REG_ADD_LINE3")
            Me.columnTP_REG_POSTCODE = MyBase.Columns("TP_REG_POSTCODE")
            Me.columnTP_REG_CITY = MyBase.Columns("TP_REG_CITY")
            Me.columnTP_REG_STATE = MyBase.Columns("TP_REG_STATE")
            Me.columnTP_CURR_ADD_LINE1 = MyBase.Columns("TP_CURR_ADD_LINE1")
            Me.columnTP_CURR_ADD_LINE2 = MyBase.Columns("TP_CURR_ADD_LINE2")
            Me.columnTP_CURR_ADD_LINE3 = MyBase.Columns("TP_CURR_ADD_LINE3")
            Me.columnTP_CURR_POSTCODE = MyBase.Columns("TP_CURR_POSTCODE")
            Me.columnTP_CURR_CITY = MyBase.Columns("TP_CURR_CITY")
            Me.columnTP_CURR_STATE = MyBase.Columns("TP_CURR_STATE")
            Me.columnTP_COM_ADD_LINE1 = MyBase.Columns("TP_COM_ADD_LINE1")
            Me.columnTP_COM_ADD_LINE2 = MyBase.Columns("TP_COM_ADD_LINE2")
            Me.columnTP_COM_ADD_LINE3 = MyBase.Columns("TP_COM_ADD_LINE3")
            Me.columnTP_COM_POSTCODE = MyBase.Columns("TP_COM_POSTCODE")
            Me.columnTP_COM_CITY = MyBase.Columns("TP_COM_CITY")
            Me.columnTP_COM_STATE = MyBase.Columns("TP_COM_STATE")
            Me.columnTP_BANK = MyBase.Columns("TP_BANK")
            Me.columnTP_BANK_ACC = MyBase.Columns("TP_BANK_ACC")
            Me.columnTP_BANK_ADD_LINE1 = MyBase.Columns("TP_BANK_ADD_LINE1")
            Me.columnTP_BANK_ADD_LINE2 = MyBase.Columns("TP_BANK_ADD_LINE2")
            Me.columnTP_BANK_ADD_LINE3 = MyBase.Columns("TP_BANK_ADD_LINE3")
            Me.columnTP_BANK_POSTCODE = MyBase.Columns("TP_BANK_POSTCODE")
            Me.columnTP_BANK_CITY = MyBase.Columns("TP_BANK_CITY")
            Me.columnTP_BANK_STATE = MyBase.Columns("TP_BANK_STATE")
            Me.columnTP_RECORD_KEPT = MyBase.Columns("TP_RECORD_KEPT")
            Me.columnTP_ALT_ADD_LINE1 = MyBase.Columns("TP_ALT_ADD_LINE1")
            Me.columnTP_ALT_ADD_LINE2 = MyBase.Columns("TP_ALT_ADD_LINE2")
            Me.columnTP_ALT_ADD_LINE3 = MyBase.Columns("TP_ALT_ADD_LINE3")
            Me.columnTP_ALT_POSTCODE = MyBase.Columns("TP_ALT_POSTCODE")
            Me.columnTP_ALT_CITY = MyBase.Columns("TP_ALT_CITY")
            Me.columnTP_ALT_STATE = MyBase.Columns("TP_ALT_STATE")
            Me.columnTP_TAX_FILE_NO = MyBase.Columns("TP_TAX_FILE_NO")
            Me.columnTP_CONTACT = MyBase.Columns("TP_CONTACT")
            Me.columnTP_TEL_NO = MyBase.Columns("TP_TEL_NO")
            Me.columnTP_FAX_NO = MyBase.Columns("TP_FAX_NO")
            Me.columnTP_INV_ANN_DATE = MyBase.Columns("TP_INV_ANN_DATE")
            Me.columnTP_INV_DETTAXFEE = MyBase.Columns("TP_INV_DETTAXFEE")
            Me.columnTP_INV_DISBURSEMENT = MyBase.Columns("TP_INV_DISBURSEMENT")
            Me.columnTP_INV_SALESTAX = MyBase.Columns("TP_INV_SALESTAX")
            Me.columnTP_INV_TOTAL = MyBase.Columns("TP_INV_TOTAL")
            Me.columnTP_PREFIX = MyBase.Columns("TP_PREFIX")
            Me.columnTP_BLOG = MyBase.Columns("TP_BLOG")
            Me.columnTP_BASIS_PERIOD_FR = MyBase.Columns("TP_BASIS_PERIOD_FR")
            Me.columnTP_BASIS_PERIOD_TO = MyBase.Columns("TP_BASIS_PERIOD_TO")
            Me.columnTP_OPN_OPERATION = MyBase.Columns("TP_OPN_OPERATION")
            Me.columnTP_ULT_COMPANY = MyBase.Columns("TP_ULT_COMPANY")
            Me.columnTP_ULT_COUNTRY_CODE = MyBase.Columns("TP_ULT_COUNTRY_CODE")
            Me.columnTP_IMD_COMPANY = MyBase.Columns("TP_IMD_COMPANY")
            Me.columnTP_IMD_COUNTRY_CODE = MyBase.Columns("TP_IMD_COUNTRY_CODE")
            Me.columnTP_REG_COUNTRY = MyBase.Columns("TP_REG_COUNTRY")
            Me.columnTP_CURR_COUNTRY = MyBase.Columns("TP_CURR_COUNTRY")
            Me.columnTP_COM_COUNTRY = MyBase.Columns("TP_COM_COUNTRY")
            Me.columnTP_ALT_COUNTRY = MyBase.Columns("TP_ALT_COUNTRY")
            Me.columnTP_COM_STS = MyBase.Columns("TP_COM_STS")
            Me.columnTP_SECTION_127_1 = MyBase.Columns("TP_SECTION_127_1")
            Me.columnTP_SECTION_127_2 = MyBase.Columns("TP_SECTION_127_2")
            Me.columnTP_SECTION_127_3 = MyBase.Columns("TP_SECTION_127_3")
            Me.columnTP_ROYALCLAIM = MyBase.Columns("TP_ROYALCLAIM")
            Me.columnTP_CARRYETRANDING = MyBase.Columns("TP_CARRYETRANDING")
            Me.columnTP_GOODSERVICETAXREGISTRAION = MyBase.Columns("TP_GOODSERVICETAXREGISTRAION")
            Me.columnTP_LABUAN_STATUS = MyBase.Columns("TP_LABUAN_STATUS")
            Me.columnTP_LABUAN_NAME = MyBase.Columns("TP_LABUAN_NAME")
            Me.columnTP_LABUAN_REG = MyBase.Columns("TP_LABUAN_REG")
            Me.columnTP_LABUAN_INCOME_TAX = MyBase.Columns("TP_LABUAN_INCOME_TAX")
            Me.columnTP_BUILDINGINDUSTRY = MyBase.Columns("TP_BUILDINGINDUSTRY")
            Me.columnTP_STS_OTHER = MyBase.Columns("TP_STS_OTHER")
            Me.columnHandleBy = MyBase.Columns("HandleBy")
            Me.columnModifiedBy = MyBase.Columns("ModifiedBy")
            Me.columnModifiedDateTime = MyBase.Columns("ModifiedDateTime")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTP_REF_NO = New Global.System.Data.DataColumn("TP_REF_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REF_NO)
            Me.columnTP_COM_NAME = New Global.System.Data.DataColumn("TP_COM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_NAME)
            Me.columnTP_ROC_NO = New Global.System.Data.DataColumn("TP_ROC_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ROC_NO)
            Me.columnTP_EMPLOYER_NO = New Global.System.Data.DataColumn("TP_EMPLOYER_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_EMPLOYER_NO)
            Me.columnTP_FILE_NO = New Global.System.Data.DataColumn("TP_FILE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_FILE_NO)
            Me.columnTP_RESIDENCE = New Global.System.Data.DataColumn("TP_RESIDENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_RESIDENCE)
            Me.columnTP_COUNTRY = New Global.System.Data.DataColumn("TP_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COUNTRY)
            Me.columnTP_ACC_PERIOD_FR = New Global.System.Data.DataColumn("TP_ACC_PERIOD_FR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ACC_PERIOD_FR)
            Me.columnTP_ACC_PERIOD_TO = New Global.System.Data.DataColumn("TP_ACC_PERIOD_TO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ACC_PERIOD_TO)
            Me.columnTP_EFILING = New Global.System.Data.DataColumn("TP_EFILING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_EFILING)
            Me.columnTP_PUBLIC_ORDER = New Global.System.Data.DataColumn("TP_PUBLIC_ORDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_PUBLIC_ORDER)
            Me.columnTP_CO_STATUS = New Global.System.Data.DataColumn("TP_CO_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CO_STATUS)
            Me.columnTP_EMAIL = New Global.System.Data.DataColumn("TP_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_EMAIL)
            Me.columnTP_REG_ADD_LINE1 = New Global.System.Data.DataColumn("TP_REG_ADD_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_ADD_LINE1)
            Me.columnTP_REG_ADD_LINE2 = New Global.System.Data.DataColumn("TP_REG_ADD_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_ADD_LINE2)
            Me.columnTP_REG_ADD_LINE3 = New Global.System.Data.DataColumn("TP_REG_ADD_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_ADD_LINE3)
            Me.columnTP_REG_POSTCODE = New Global.System.Data.DataColumn("TP_REG_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_POSTCODE)
            Me.columnTP_REG_CITY = New Global.System.Data.DataColumn("TP_REG_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_CITY)
            Me.columnTP_REG_STATE = New Global.System.Data.DataColumn("TP_REG_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_STATE)
            Me.columnTP_CURR_ADD_LINE1 = New Global.System.Data.DataColumn("TP_CURR_ADD_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_ADD_LINE1)
            Me.columnTP_CURR_ADD_LINE2 = New Global.System.Data.DataColumn("TP_CURR_ADD_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_ADD_LINE2)
            Me.columnTP_CURR_ADD_LINE3 = New Global.System.Data.DataColumn("TP_CURR_ADD_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_ADD_LINE3)
            Me.columnTP_CURR_POSTCODE = New Global.System.Data.DataColumn("TP_CURR_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_POSTCODE)
            Me.columnTP_CURR_CITY = New Global.System.Data.DataColumn("TP_CURR_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_CITY)
            Me.columnTP_CURR_STATE = New Global.System.Data.DataColumn("TP_CURR_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_STATE)
            Me.columnTP_COM_ADD_LINE1 = New Global.System.Data.DataColumn("TP_COM_ADD_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_ADD_LINE1)
            Me.columnTP_COM_ADD_LINE2 = New Global.System.Data.DataColumn("TP_COM_ADD_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_ADD_LINE2)
            Me.columnTP_COM_ADD_LINE3 = New Global.System.Data.DataColumn("TP_COM_ADD_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_ADD_LINE3)
            Me.columnTP_COM_POSTCODE = New Global.System.Data.DataColumn("TP_COM_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_POSTCODE)
            Me.columnTP_COM_CITY = New Global.System.Data.DataColumn("TP_COM_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_CITY)
            Me.columnTP_COM_STATE = New Global.System.Data.DataColumn("TP_COM_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_STATE)
            Me.columnTP_BANK = New Global.System.Data.DataColumn("TP_BANK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK)
            Me.columnTP_BANK_ACC = New Global.System.Data.DataColumn("TP_BANK_ACC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_ACC)
            Me.columnTP_BANK_ADD_LINE1 = New Global.System.Data.DataColumn("TP_BANK_ADD_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_ADD_LINE1)
            Me.columnTP_BANK_ADD_LINE2 = New Global.System.Data.DataColumn("TP_BANK_ADD_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_ADD_LINE2)
            Me.columnTP_BANK_ADD_LINE3 = New Global.System.Data.DataColumn("TP_BANK_ADD_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_ADD_LINE3)
            Me.columnTP_BANK_POSTCODE = New Global.System.Data.DataColumn("TP_BANK_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_POSTCODE)
            Me.columnTP_BANK_CITY = New Global.System.Data.DataColumn("TP_BANK_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_CITY)
            Me.columnTP_BANK_STATE = New Global.System.Data.DataColumn("TP_BANK_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BANK_STATE)
            Me.columnTP_RECORD_KEPT = New Global.System.Data.DataColumn("TP_RECORD_KEPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_RECORD_KEPT)
            Me.columnTP_ALT_ADD_LINE1 = New Global.System.Data.DataColumn("TP_ALT_ADD_LINE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_ADD_LINE1)
            Me.columnTP_ALT_ADD_LINE2 = New Global.System.Data.DataColumn("TP_ALT_ADD_LINE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_ADD_LINE2)
            Me.columnTP_ALT_ADD_LINE3 = New Global.System.Data.DataColumn("TP_ALT_ADD_LINE3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_ADD_LINE3)
            Me.columnTP_ALT_POSTCODE = New Global.System.Data.DataColumn("TP_ALT_POSTCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_POSTCODE)
            Me.columnTP_ALT_CITY = New Global.System.Data.DataColumn("TP_ALT_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_CITY)
            Me.columnTP_ALT_STATE = New Global.System.Data.DataColumn("TP_ALT_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_STATE)
            Me.columnTP_TAX_FILE_NO = New Global.System.Data.DataColumn("TP_TAX_FILE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_TAX_FILE_NO)
            Me.columnTP_CONTACT = New Global.System.Data.DataColumn("TP_CONTACT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CONTACT)
            Me.columnTP_TEL_NO = New Global.System.Data.DataColumn("TP_TEL_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_TEL_NO)
            Me.columnTP_FAX_NO = New Global.System.Data.DataColumn("TP_FAX_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_FAX_NO)
            Me.columnTP_INV_ANN_DATE = New Global.System.Data.DataColumn("TP_INV_ANN_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_INV_ANN_DATE)
            Me.columnTP_INV_DETTAXFEE = New Global.System.Data.DataColumn("TP_INV_DETTAXFEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_INV_DETTAXFEE)
            Me.columnTP_INV_DISBURSEMENT = New Global.System.Data.DataColumn("TP_INV_DISBURSEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_INV_DISBURSEMENT)
            Me.columnTP_INV_SALESTAX = New Global.System.Data.DataColumn("TP_INV_SALESTAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_INV_SALESTAX)
            Me.columnTP_INV_TOTAL = New Global.System.Data.DataColumn("TP_INV_TOTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_INV_TOTAL)
            Me.columnTP_PREFIX = New Global.System.Data.DataColumn("TP_PREFIX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_PREFIX)
            Me.columnTP_BLOG = New Global.System.Data.DataColumn("TP_BLOG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BLOG)
            Me.columnTP_BASIS_PERIOD_FR = New Global.System.Data.DataColumn("TP_BASIS_PERIOD_FR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BASIS_PERIOD_FR)
            Me.columnTP_BASIS_PERIOD_TO = New Global.System.Data.DataColumn("TP_BASIS_PERIOD_TO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BASIS_PERIOD_TO)
            Me.columnTP_OPN_OPERATION = New Global.System.Data.DataColumn("TP_OPN_OPERATION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_OPN_OPERATION)
            Me.columnTP_ULT_COMPANY = New Global.System.Data.DataColumn("TP_ULT_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ULT_COMPANY)
            Me.columnTP_ULT_COUNTRY_CODE = New Global.System.Data.DataColumn("TP_ULT_COUNTRY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ULT_COUNTRY_CODE)
            Me.columnTP_IMD_COMPANY = New Global.System.Data.DataColumn("TP_IMD_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_IMD_COMPANY)
            Me.columnTP_IMD_COUNTRY_CODE = New Global.System.Data.DataColumn("TP_IMD_COUNTRY_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_IMD_COUNTRY_CODE)
            Me.columnTP_REG_COUNTRY = New Global.System.Data.DataColumn("TP_REG_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REG_COUNTRY)
            Me.columnTP_CURR_COUNTRY = New Global.System.Data.DataColumn("TP_CURR_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CURR_COUNTRY)
            Me.columnTP_COM_COUNTRY = New Global.System.Data.DataColumn("TP_COM_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_COUNTRY)
            Me.columnTP_ALT_COUNTRY = New Global.System.Data.DataColumn("TP_ALT_COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ALT_COUNTRY)
            Me.columnTP_COM_STS = New Global.System.Data.DataColumn("TP_COM_STS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_COM_STS)
            Me.columnTP_SECTION_127_1 = New Global.System.Data.DataColumn("TP_SECTION_127_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_SECTION_127_1)
            Me.columnTP_SECTION_127_2 = New Global.System.Data.DataColumn("TP_SECTION_127_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_SECTION_127_2)
            Me.columnTP_SECTION_127_3 = New Global.System.Data.DataColumn("TP_SECTION_127_3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_SECTION_127_3)
            Me.columnTP_ROYALCLAIM = New Global.System.Data.DataColumn("TP_ROYALCLAIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_ROYALCLAIM)
            Me.columnTP_CARRYETRANDING = New Global.System.Data.DataColumn("TP_CARRYETRANDING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_CARRYETRANDING)
            Me.columnTP_GOODSERVICETAXREGISTRAION = New Global.System.Data.DataColumn("TP_GOODSERVICETAXREGISTRAION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_GOODSERVICETAXREGISTRAION)
            Me.columnTP_LABUAN_STATUS = New Global.System.Data.DataColumn("TP_LABUAN_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_LABUAN_STATUS)
            Me.columnTP_LABUAN_NAME = New Global.System.Data.DataColumn("TP_LABUAN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_LABUAN_NAME)
            Me.columnTP_LABUAN_REG = New Global.System.Data.DataColumn("TP_LABUAN_REG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_LABUAN_REG)
            Me.columnTP_LABUAN_INCOME_TAX = New Global.System.Data.DataColumn("TP_LABUAN_INCOME_TAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_LABUAN_INCOME_TAX)
            Me.columnTP_BUILDINGINDUSTRY = New Global.System.Data.DataColumn("TP_BUILDINGINDUSTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_BUILDINGINDUSTRY)
            Me.columnTP_STS_OTHER = New Global.System.Data.DataColumn("TP_STS_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_STS_OTHER)
            Me.columnHandleBy = New Global.System.Data.DataColumn("HandleBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHandleBy)
            Me.columnModifiedBy = New Global.System.Data.DataColumn("ModifiedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedBy)
            Me.columnModifiedDateTime = New Global.System.Data.DataColumn("ModifiedDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedDateTime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTP_REF_NO}, True))
            Me.columnTP_REF_NO.AllowDBNull = False
            Me.columnTP_REF_NO.Unique = True
            Me.columnTP_REF_NO.MaxLength = 20
            Me.columnTP_COM_NAME.MaxLength = 255
            Me.columnTP_ROC_NO.MaxLength = 20
            Me.columnTP_EMPLOYER_NO.MaxLength = 20
            Me.columnTP_FILE_NO.MaxLength = 1
            Me.columnTP_RESIDENCE.MaxLength = 1
            Me.columnTP_COUNTRY.MaxLength = 50
            Me.columnTP_EFILING.MaxLength = 1
            Me.columnTP_PUBLIC_ORDER.MaxLength = 1
            Me.columnTP_CO_STATUS.MaxLength = 255
            Me.columnTP_EMAIL.MaxLength = 100
            Me.columnTP_REG_ADD_LINE1.MaxLength = 40
            Me.columnTP_REG_ADD_LINE2.MaxLength = 40
            Me.columnTP_REG_ADD_LINE3.MaxLength = 40
            Me.columnTP_REG_POSTCODE.MaxLength = 10
            Me.columnTP_REG_CITY.MaxLength = 30
            Me.columnTP_REG_STATE.MaxLength = 30
            Me.columnTP_CURR_ADD_LINE1.MaxLength = 40
            Me.columnTP_CURR_ADD_LINE2.MaxLength = 40
            Me.columnTP_CURR_ADD_LINE3.MaxLength = 40
            Me.columnTP_CURR_POSTCODE.MaxLength = 10
            Me.columnTP_CURR_CITY.MaxLength = 30
            Me.columnTP_CURR_STATE.MaxLength = 30
            Me.columnTP_COM_ADD_LINE1.MaxLength = 40
            Me.columnTP_COM_ADD_LINE2.MaxLength = 40
            Me.columnTP_COM_ADD_LINE3.MaxLength = 40
            Me.columnTP_COM_POSTCODE.MaxLength = 10
            Me.columnTP_COM_CITY.MaxLength = 30
            Me.columnTP_COM_STATE.MaxLength = 30
            Me.columnTP_BANK.MaxLength = 100
            Me.columnTP_BANK_ACC.MaxLength = 20
            Me.columnTP_BANK_ADD_LINE1.MaxLength = 40
            Me.columnTP_BANK_ADD_LINE2.MaxLength = 40
            Me.columnTP_BANK_ADD_LINE3.MaxLength = 40
            Me.columnTP_BANK_POSTCODE.MaxLength = 10
            Me.columnTP_BANK_CITY.MaxLength = 30
            Me.columnTP_BANK_STATE.MaxLength = 30
            Me.columnTP_RECORD_KEPT.MaxLength = 4
            Me.columnTP_ALT_ADD_LINE1.MaxLength = 40
            Me.columnTP_ALT_ADD_LINE2.MaxLength = 40
            Me.columnTP_ALT_ADD_LINE3.MaxLength = 40
            Me.columnTP_ALT_POSTCODE.MaxLength = 10
            Me.columnTP_ALT_CITY.MaxLength = 30
            Me.columnTP_ALT_STATE.MaxLength = 30
            Me.columnTP_TAX_FILE_NO.MaxLength = 20
            Me.columnTP_CONTACT.MaxLength = 100
            Me.columnTP_TEL_NO.MaxLength = 20
            Me.columnTP_FAX_NO.MaxLength = 20
            Me.columnTP_INV_DETTAXFEE.MaxLength = 25
            Me.columnTP_INV_DISBURSEMENT.MaxLength = 25
            Me.columnTP_INV_SALESTAX.MaxLength = 25
            Me.columnTP_INV_TOTAL.MaxLength = 25
            Me.columnTP_PREFIX.MaxLength = 3
            Me.columnTP_BLOG.MaxLength = 255
            Me.columnTP_ULT_COMPANY.MaxLength = 60
            Me.columnTP_ULT_COUNTRY_CODE.MaxLength = 60
            Me.columnTP_IMD_COMPANY.MaxLength = 60
            Me.columnTP_IMD_COUNTRY_CODE.MaxLength = 60
            Me.columnTP_REG_COUNTRY.MaxLength = 5
            Me.columnTP_CURR_COUNTRY.MaxLength = 5
            Me.columnTP_COM_COUNTRY.MaxLength = 5
            Me.columnTP_ALT_COUNTRY.MaxLength = 5
            Me.columnTP_COM_STS.MaxLength = 1
            Me.columnTP_SECTION_127_1.MaxLength = 1
            Me.columnTP_SECTION_127_2.MaxLength = 1
            Me.columnTP_SECTION_127_3.MaxLength = 1
            Me.columnTP_ROYALCLAIM.MaxLength = 1
            Me.columnTP_CARRYETRANDING.MaxLength = 1
            Me.columnTP_GOODSERVICETAXREGISTRAION.MaxLength = 12
            Me.columnTP_LABUAN_STATUS.MaxLength = 1
            Me.columnTP_LABUAN_NAME.MaxLength = 255
            Me.columnTP_LABUAN_REG.MaxLength = 12
            Me.columnTP_LABUAN_INCOME_TAX.MaxLength = 10
            Me.columnTP_BUILDINGINDUSTRY.MaxLength = 1
            Me.columnTP_STS_OTHER.MaxLength = 250
            Me.columnHandleBy.MaxLength = 150
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewTAXP_PROFILERow() As TAXP_PROFILERow
            Return CType(Me.NewRow, TAXP_PROFILERow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TAXP_PROFILERow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TAXP_PROFILERow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TAXP_PROFILERowChangedEvent) Is Nothing) Then
                RaiseEvent TAXP_PROFILERowChanged(Me, New TAXP_PROFILERowChangeEvent(CType(e.Row, TAXP_PROFILERow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TAXP_PROFILERowChangingEvent) Is Nothing) Then
                RaiseEvent TAXP_PROFILERowChanging(Me, New TAXP_PROFILERowChangeEvent(CType(e.Row, TAXP_PROFILERow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TAXP_PROFILERowDeletedEvent) Is Nothing) Then
                RaiseEvent TAXP_PROFILERowDeleted(Me, New TAXP_PROFILERowChangeEvent(CType(e.Row, TAXP_PROFILERow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TAXP_PROFILERowDeletingEvent) Is Nothing) Then
                RaiseEvent TAXP_PROFILERowDeleting(Me, New TAXP_PROFILERowChangeEvent(CType(e.Row, TAXP_PROFILERow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveTAXP_PROFILERow(ByVal row As TAXP_PROFILERow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TAXP_PROFILEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class MENU_LIST_INFODataTable
        Inherits Global.System.Data.TypedTableBase(Of MENU_LIST_INFORow)

        Private columnID As Global.System.Data.DataColumn

        Private columnParentID As Global.System.Data.DataColumn

        Private columnKeyName As Global.System.Data.DataColumn

        Private columnTitle As Global.System.Data.DataColumn

        Private columnLicenseType As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "MENU_LIST_INFO"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ParentIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KeyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LicenseTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLicenseType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As MENU_LIST_INFORow
            Get
                Return CType(Me.Rows(index), MENU_LIST_INFORow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MENU_LIST_INFORowChanging As MENU_LIST_INFORowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MENU_LIST_INFORowChanged As MENU_LIST_INFORowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MENU_LIST_INFORowDeleting As MENU_LIST_INFORowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event MENU_LIST_INFORowDeleted As MENU_LIST_INFORowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddMENU_LIST_INFORow(ByVal row As MENU_LIST_INFORow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddMENU_LIST_INFORow(ByVal ParentID As Integer, ByVal KeyName As String, ByVal Title As String, ByVal LicenseType As Integer) As MENU_LIST_INFORow
            Dim rowMENU_LIST_INFORow As MENU_LIST_INFORow = CType(Me.NewRow, MENU_LIST_INFORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ParentID, KeyName, Title, LicenseType}
            rowMENU_LIST_INFORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMENU_LIST_INFORow)
            Return rowMENU_LIST_INFORow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MENU_LIST_INFODataTable = CType(MyBase.Clone, MENU_LIST_INFODataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MENU_LIST_INFODataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnParentID = MyBase.Columns("ParentID")
            Me.columnKeyName = MyBase.Columns("KeyName")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnLicenseType = MyBase.Columns("LicenseType")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnParentID = New Global.System.Data.DataColumn("ParentID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentID)
            Me.columnKeyName = New Global.System.Data.DataColumn("KeyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyName)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnLicenseType = New Global.System.Data.DataColumn("LicenseType", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLicenseType)
            Me.columnID.AutoIncrement = True
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = False
            Me.columnID.ReadOnly = True
            Me.columnParentID.AllowDBNull = False
            Me.columnKeyName.MaxLength = 50
            Me.columnTitle.MaxLength = 250
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewMENU_LIST_INFORow() As MENU_LIST_INFORow
            Return CType(Me.NewRow, MENU_LIST_INFORow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MENU_LIST_INFORow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MENU_LIST_INFORow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MENU_LIST_INFORowChangedEvent) Is Nothing) Then
                RaiseEvent MENU_LIST_INFORowChanged(Me, New MENU_LIST_INFORowChangeEvent(CType(e.Row, MENU_LIST_INFORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MENU_LIST_INFORowChangingEvent) Is Nothing) Then
                RaiseEvent MENU_LIST_INFORowChanging(Me, New MENU_LIST_INFORowChangeEvent(CType(e.Row, MENU_LIST_INFORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MENU_LIST_INFORowDeletedEvent) Is Nothing) Then
                RaiseEvent MENU_LIST_INFORowDeleted(Me, New MENU_LIST_INFORowChangeEvent(CType(e.Row, MENU_LIST_INFORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MENU_LIST_INFORowDeletingEvent) Is Nothing) Then
                RaiseEvent MENU_LIST_INFORowDeleting(Me, New MENU_LIST_INFORowChangeEvent(CType(e.Row, MENU_LIST_INFORow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveMENU_LIST_INFORow(ByVal row As MENU_LIST_INFORow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsDefault = New dsDefault()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MENU_LIST_INFODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TaxPayerFindRow
        Inherits Global.System.Data.DataRow

        Private tableTaxPayerFind As TaxPayerFindDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTaxPayerFind = CType(Me.Table, TaxPayerFindDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RefNo() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.RefNoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RefNo' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.RefNoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CompanyName() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.CompanyNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyName' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.CompanyNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CompanyNo() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.CompanyNoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyNo' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.CompanyNoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EmployerNo() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.EmployerNoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmployerNo' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.EmployerNoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FileNo() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.FileNoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FileNo' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.FileNoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Country() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.CountryColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Country' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.CountryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CompanyCode() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.CompanyCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompanyCode' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.CompanyCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HandleBy() As String
            Get
                Try
                    Return CType(Me(Me.tableTaxPayerFind.HandleByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HandleBy' in table 'TaxPayerFind' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTaxPayerFind.HandleByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRefNoNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.RefNoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRefNoNull()
            Me(Me.tableTaxPayerFind.RefNoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCompanyNameNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.CompanyNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCompanyNameNull()
            Me(Me.tableTaxPayerFind.CompanyNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCompanyNoNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.CompanyNoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCompanyNoNull()
            Me(Me.tableTaxPayerFind.CompanyNoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmployerNoNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.EmployerNoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmployerNoNull()
            Me(Me.tableTaxPayerFind.EmployerNoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFileNoNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.FileNoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFileNoNull()
            Me(Me.tableTaxPayerFind.FileNoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCountryNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.CountryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCountryNull()
            Me(Me.tableTaxPayerFind.CountryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCompanyCodeNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.CompanyCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCompanyCodeNull()
            Me(Me.tableTaxPayerFind.CompanyCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHandleByNull() As Boolean
            Return Me.IsNull(Me.tableTaxPayerFind.HandleByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHandleByNull()
            Me(Me.tableTaxPayerFind.HandleByColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtErrorLogRow
        Inherits Global.System.Data.DataRow

        Private tabledtErrorLog As dtErrorLogDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtErrorLog = CType(Me.Table, dtErrorLogDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property No() As Long
            Get
                Try
                    Return CType(Me(Me.tabledtErrorLog.NoColumn), Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No' in table 'dtErrorLog' is DBNull.", e)
                End Try
            End Get
            Set(value As Long)
                Me(Me.tabledtErrorLog.NoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ErrorDateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tabledtErrorLog.ErrorDateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ErrorDateTime' in table 'dtErrorLog' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tabledtErrorLog.ErrorDateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ErrorCode() As String
            Get
                Try
                    Return CType(Me(Me.tabledtErrorLog.ErrorCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ErrorCode' in table 'dtErrorLog' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtErrorLog.ErrorCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ErrorName() As String
            Get
                Try
                    Return CType(Me(Me.tabledtErrorLog.ErrorNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ErrorName' in table 'dtErrorLog' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtErrorLog.ErrorNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ErrorMessage() As String
            Get
                Try
                    Return CType(Me(Me.tabledtErrorLog.ErrorMessageColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ErrorMessage' in table 'dtErrorLog' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtErrorLog.ErrorMessageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNoNull() As Boolean
            Return Me.IsNull(Me.tabledtErrorLog.NoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNoNull()
            Me(Me.tabledtErrorLog.NoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsErrorDateTimeNull() As Boolean
            Return Me.IsNull(Me.tabledtErrorLog.ErrorDateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetErrorDateTimeNull()
            Me(Me.tabledtErrorLog.ErrorDateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsErrorCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtErrorLog.ErrorCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetErrorCodeNull()
            Me(Me.tabledtErrorLog.ErrorCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsErrorNameNull() As Boolean
            Return Me.IsNull(Me.tabledtErrorLog.ErrorNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetErrorNameNull()
            Me(Me.tabledtErrorLog.ErrorNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsErrorMessageNull() As Boolean
            Return Me.IsNull(Me.tabledtErrorLog.ErrorMessageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetErrorMessageNull()
            Me(Me.tabledtErrorLog.ErrorMessageColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class YEAR_ASSESSMENTRow
        Inherits Global.System.Data.DataRow

        Private tableYEAR_ASSESSMENT As YEAR_ASSESSMENTDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableYEAR_ASSESSMENT = CType(Me.Table, YEAR_ASSESSMENTDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property YA() As String
            Get
                Try
                    Return CType(Me(Me.tableYEAR_ASSESSMENT.YAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YA' in table 'YEAR_ASSESSMENT' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableYEAR_ASSESSMENT.YAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsYANull() As Boolean
            Return Me.IsNull(Me.tableYEAR_ASSESSMENT.YAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetYANull()
            Me(Me.tableYEAR_ASSESSMENT.YAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtDatabaseColumnListRow
        Inherits Global.System.Data.DataRow

        Private tabledtDatabaseColumnList As dtDatabaseColumnListDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtDatabaseColumnList = CType(Me.Table, dtDatabaseColumnListDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TABLE_CATALOG() As String
            Get
                Try
                    Return CType(Me(Me.tabledtDatabaseColumnList.TABLE_CATALOGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TABLE_CATALOG' in table 'dtDatabaseColumnList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtDatabaseColumnList.TABLE_CATALOGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TABLE_SCHEMA() As String
            Get
                Try
                    Return CType(Me(Me.tabledtDatabaseColumnList.TABLE_SCHEMAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TABLE_SCHEMA' in table 'dtDatabaseColumnList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtDatabaseColumnList.TABLE_SCHEMAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TABLE_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tabledtDatabaseColumnList.TABLE_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TABLE_NAME' in table 'dtDatabaseColumnList' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtDatabaseColumnList.TABLE_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTABLE_CATALOGNull() As Boolean
            Return Me.IsNull(Me.tabledtDatabaseColumnList.TABLE_CATALOGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTABLE_CATALOGNull()
            Me(Me.tabledtDatabaseColumnList.TABLE_CATALOGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTABLE_SCHEMANull() As Boolean
            Return Me.IsNull(Me.tabledtDatabaseColumnList.TABLE_SCHEMAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTABLE_SCHEMANull()
            Me(Me.tabledtDatabaseColumnList.TABLE_SCHEMAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTABLE_NAMENull() As Boolean
            Return Me.IsNull(Me.tabledtDatabaseColumnList.TABLE_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTABLE_NAMENull()
            Me(Me.tabledtDatabaseColumnList.TABLE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BANK_CODERow
        Inherits Global.System.Data.DataRow

        Private tableBANK_CODE As BANK_CODEDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBANK_CODE = CType(Me.Table, BANK_CODEDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BKC_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableBANK_CODE.BKC_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BKC_DESC' in table 'BANK_CODE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBANK_CODE.BKC_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BKC_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableBANK_CODE.BKC_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BKC_CODE' in table 'BANK_CODE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBANK_CODE.BKC_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBKC_DESCNull() As Boolean
            Return Me.IsNull(Me.tableBANK_CODE.BKC_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBKC_DESCNull()
            Me(Me.tableBANK_CODE.BKC_DESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBKC_CODENull() As Boolean
            Return Me.IsNull(Me.tableBANK_CODE.BKC_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBKC_CODENull()
            Me(Me.tableBANK_CODE.BKC_CODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BANKRow
        Inherits Global.System.Data.DataRow

        Private tableBANK As BANKDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBANK = CType(Me.Table, BANKDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BK_KEY() As Integer
            Get
                Try
                    Return CType(Me(Me.tableBANK.BK_KEYColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BK_KEY' in table 'BANK' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableBANK.BK_KEYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BK_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableBANK.BK_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BK_NAME' in table 'BANK' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBANK.BK_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BK_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableBANK.BK_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BK_DESC' in table 'BANK' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBANK.BK_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BK_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableBANK.BK_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BK_CODE' in table 'BANK' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBANK.BK_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBK_KEYNull() As Boolean
            Return Me.IsNull(Me.tableBANK.BK_KEYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBK_KEYNull()
            Me(Me.tableBANK.BK_KEYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBK_NAMENull() As Boolean
            Return Me.IsNull(Me.tableBANK.BK_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBK_NAMENull()
            Me(Me.tableBANK.BK_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBK_DESCNull() As Boolean
            Return Me.IsNull(Me.tableBANK.BK_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBK_DESCNull()
            Me(Me.tableBANK.BK_DESCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBK_CODENull() As Boolean
            Return Me.IsNull(Me.tableBANK.BK_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBK_CODENull()
            Me(Me.tableBANK.BK_CODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COUNTRYRow
        Inherits Global.System.Data.DataRow

        Private tableCOUNTRY As COUNTRYDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOUNTRY = CType(Me.Table, COUNTRYDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CT_CODE() As String
            Get
                Return CType(Me(Me.tableCOUNTRY.CT_CODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableCOUNTRY.CT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CT_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableCOUNTRY.CT_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CT_DESC' in table 'COUNTRY' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableCOUNTRY.CT_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCT_DESCNull() As Boolean
            Return Me.IsNull(Me.tableCOUNTRY.CT_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCT_DESCNull()
            Me(Me.tableCOUNTRY.CT_DESCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STATESRow
        Inherits Global.System.Data.DataRow

        Private tableSTATES As STATESDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTATES = CType(Me.Table, STATESDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CT_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableSTATES.CT_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CT_CODE' in table 'STATES' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSTATES.CT_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ST_DESC() As String
            Get
                Try
                    Return CType(Me(Me.tableSTATES.ST_DESCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ST_DESC' in table 'STATES' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSTATES.ST_DESCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCT_CODENull() As Boolean
            Return Me.IsNull(Me.tableSTATES.CT_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCT_CODENull()
            Me(Me.tableSTATES.CT_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsST_DESCNull() As Boolean
            Return Me.IsNull(Me.tableSTATES.ST_DESCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetST_DESCNull()
            Me(Me.tableSTATES.ST_DESCColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BUSINESS_SOURCERow
        Inherits Global.System.Data.DataRow

        Private tableBUSINESS_SOURCE As BUSINESS_SOURCEDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBUSINESS_SOURCE = CType(Me.Table, BUSINESS_SOURCEDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_KEY() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_KEYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_KEY' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS_SOURCE.BC_KEYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_SOURCEKEY() As Integer
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_SOURCEKEYColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_SOURCEKEY' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableBUSINESS_SOURCE.BC_SOURCEKEYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_YA() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_YAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_YA' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS_SOURCE.BC_YAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_SOURCENO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_SOURCENOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_SOURCENO' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableBUSINESS_SOURCE.BC_SOURCENOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_CODE' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS_SOURCE.BC_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_TYPE' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS_SOURCE.BC_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BC_COMPANY() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS_SOURCE.BC_COMPANYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BC_COMPANY' in table 'BUSINESS_SOURCE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS_SOURCE.BC_COMPANYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_KEYNull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_KEYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_KEYNull()
            Me(Me.tableBUSINESS_SOURCE.BC_KEYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_SOURCEKEYNull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_SOURCEKEYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_SOURCEKEYNull()
            Me(Me.tableBUSINESS_SOURCE.BC_SOURCEKEYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_YANull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_YAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_YANull()
            Me(Me.tableBUSINESS_SOURCE.BC_YAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_SOURCENOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_SOURCENONull()
            Me(Me.tableBUSINESS_SOURCE.BC_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_CODENull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_CODENull()
            Me(Me.tableBUSINESS_SOURCE.BC_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_TYPENull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_TYPENull()
            Me(Me.tableBUSINESS_SOURCE.BC_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBC_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS_SOURCE.BC_COMPANYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBC_COMPANYNull()
            Me(Me.tableBUSINESS_SOURCE.BC_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BUSINESSRow
        Inherits Global.System.Data.DataRow

        Private tableBUSINESS As BUSINESSDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBUSINESS = CType(Me.Table, BUSINESSDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BS_CODE() As String
            Get
                Return CType(Me(Me.tableBUSINESS.BS_CODEColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS.BS_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BS_CATEGORY() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS.BS_CATEGORYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BS_CATEGORY' in table 'BUSINESS' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS.BS_CATEGORYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BS_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableBUSINESS.BS_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BS_TYPE' in table 'BUSINESS' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableBUSINESS.BS_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBS_CATEGORYNull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS.BS_CATEGORYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBS_CATEGORYNull()
            Me(Me.tableBUSINESS.BS_CATEGORYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBS_TYPENull() As Boolean
            Return Me.IsNull(Me.tableBUSINESS.BS_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBS_TYPENull()
            Me(Me.tableBUSINESS.BS_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TAXP_PARTNERSHIPRow
        Inherits Global.System.Data.DataRow

        Private tableTAXP_PARTNERSHIP As TAXP_PARTNERSHIPDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTAXP_PARTNERSHIP = CType(Me.Table, TAXP_PARTNERSHIPDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_PREFIX() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_PREFIXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_PREFIX' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_PREFIXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_KEY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_KEYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_KEY' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_KEYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_SOURCEKEY() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCEKEYColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_SOURCEKEY' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCEKEYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_YA() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_YAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_YA' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_YAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_SOURCENO() As Integer
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCENOColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_SOURCENO' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCENOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_FILE_NO1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_FILE_NO1' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_FILE_NO2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_FILE_NO2' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_FILE_NO3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_FILE_NO3' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_CODE' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_TYPE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_TYPEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_TYPE' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_TYPEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_COM_REG_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_COM_REG_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_COM_REG_NO' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_COM_REG_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PS_COM_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PARTNERSHIP.PS_COM_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PS_COM_NAME' in table 'TAXP_PARTNERSHIP' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PARTNERSHIP.PS_COM_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_PREFIXNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_PREFIXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_PREFIXNull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_PREFIXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_KEYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_KEYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_KEYNull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_KEYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_SOURCEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_SOURCEKEYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_SOURCEKEYNull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCEKEYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_YANull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_YAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_YANull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_YAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_SOURCENOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_SOURCENONull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_FILE_NO1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_FILE_NO1Null()
            Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_FILE_NO2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_FILE_NO2Null()
            Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_FILE_NO3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_FILE_NO3Null()
            Me(Me.tableTAXP_PARTNERSHIP.PS_FILE_NO3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_CODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_CODENull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_TYPENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_TYPEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_TYPENull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_TYPEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_COM_REG_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_COM_REG_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_COM_REG_NONull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_COM_REG_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPS_COM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PARTNERSHIP.PS_COM_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPS_COM_NAMENull()
            Me(Me.tableTAXP_PARTNERSHIP.PS_COM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TAXP_PROFILERow
        Inherits Global.System.Data.DataRow

        Private tableTAXP_PROFILE As TAXP_PROFILEDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTAXP_PROFILE = CType(Me.Table, TAXP_PROFILEDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REF_NO() As String
            Get
                Return CType(Me(Me.tableTAXP_PROFILE.TP_REF_NOColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REF_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_NAME' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ROC_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ROC_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ROC_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ROC_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_EMPLOYER_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_EMPLOYER_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_EMPLOYER_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_EMPLOYER_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_FILE_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_FILE_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_FILE_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_FILE_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_RESIDENCE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_RESIDENCEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_RESIDENCE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_RESIDENCEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COUNTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COUNTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COUNTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COUNTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ACC_PERIOD_FR() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_FRColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ACC_PERIOD_FR' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_FRColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ACC_PERIOD_TO() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_TOColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ACC_PERIOD_TO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_TOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_EFILING() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_EFILINGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_EFILING' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_EFILINGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_PUBLIC_ORDER() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_PUBLIC_ORDERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_PUBLIC_ORDER' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_PUBLIC_ORDERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CO_STATUS() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CO_STATUSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CO_STATUS' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CO_STATUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_EMAIL() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_EMAILColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_EMAIL' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_EMAILColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_ADD_LINE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_ADD_LINE1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_ADD_LINE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_ADD_LINE2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_ADD_LINE3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_ADD_LINE3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_POSTCODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_CITYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_CITY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_STATE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_STATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_STATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_STATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_ADD_LINE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_ADD_LINE1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_ADD_LINE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_ADD_LINE2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_ADD_LINE3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_ADD_LINE3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_POSTCODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_CITYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_CITY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_STATE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_STATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_STATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_STATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_ADD_LINE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_ADD_LINE1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_ADD_LINE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_ADD_LINE2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_ADD_LINE3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_ADD_LINE3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_POSTCODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_CITYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_CITY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_STATE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_STATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_STATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_STATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANKColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANKColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_ACC() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_ACCColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_ACC' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_ACCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_ADD_LINE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_ADD_LINE1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_ADD_LINE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_ADD_LINE2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_ADD_LINE3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_ADD_LINE3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_POSTCODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_CITYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_CITY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BANK_STATE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BANK_STATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BANK_STATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BANK_STATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_RECORD_KEPT() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_RECORD_KEPTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_RECORD_KEPT' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_RECORD_KEPTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_ADD_LINE1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_ADD_LINE1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_ADD_LINE2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_ADD_LINE2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_ADD_LINE3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_ADD_LINE3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_POSTCODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_POSTCODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_POSTCODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_POSTCODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_CITY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_CITYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_CITY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_CITYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_STATE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_STATEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_STATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_STATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_TAX_FILE_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_TAX_FILE_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_TAX_FILE_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_TAX_FILE_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CONTACT() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CONTACTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CONTACT' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CONTACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_TEL_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_TEL_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_TEL_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_TEL_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_FAX_NO() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_FAX_NOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_FAX_NO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_FAX_NOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_INV_ANN_DATE() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_INV_ANN_DATEColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_INV_ANN_DATE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_INV_ANN_DATEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_INV_DETTAXFEE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_INV_DETTAXFEEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_INV_DETTAXFEE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_INV_DETTAXFEEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_INV_DISBURSEMENT() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_INV_DISBURSEMENTColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_INV_DISBURSEMENT' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_INV_DISBURSEMENTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_INV_SALESTAX() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_INV_SALESTAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_INV_SALESTAX' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_INV_SALESTAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_INV_TOTAL() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_INV_TOTALColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_INV_TOTAL' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_INV_TOTALColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_PREFIX() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_PREFIXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_PREFIX' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_PREFIXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BLOG() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BLOGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BLOG' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BLOGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BASIS_PERIOD_FR() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_FRColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BASIS_PERIOD_FR' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_FRColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BASIS_PERIOD_TO() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_TOColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BASIS_PERIOD_TO' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_TOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_OPN_OPERATION() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_OPN_OPERATIONColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_OPN_OPERATION' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.TP_OPN_OPERATIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ULT_COMPANY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ULT_COMPANYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ULT_COMPANY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ULT_COMPANYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ULT_COUNTRY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ULT_COUNTRY_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ULT_COUNTRY_CODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ULT_COUNTRY_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_IMD_COMPANY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_IMD_COMPANYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_IMD_COMPANY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_IMD_COMPANYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_IMD_COUNTRY_CODE() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_IMD_COUNTRY_CODEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_IMD_COUNTRY_CODE' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_IMD_COUNTRY_CODEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_REG_COUNTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_REG_COUNTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REG_COUNTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_REG_COUNTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CURR_COUNTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CURR_COUNTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CURR_COUNTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CURR_COUNTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_COUNTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_COUNTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_COUNTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_COUNTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ALT_COUNTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ALT_COUNTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ALT_COUNTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ALT_COUNTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_COM_STS() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_COM_STSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_COM_STS' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_COM_STSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_SECTION_127_1() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_SECTION_127_1Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_SECTION_127_1' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_SECTION_127_1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_SECTION_127_2() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_SECTION_127_2Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_SECTION_127_2' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_SECTION_127_2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_SECTION_127_3() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_SECTION_127_3Column), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_SECTION_127_3' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_SECTION_127_3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_ROYALCLAIM() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_ROYALCLAIMColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_ROYALCLAIM' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_ROYALCLAIMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_CARRYETRANDING() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_CARRYETRANDINGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_CARRYETRANDING' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_CARRYETRANDINGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_GOODSERVICETAXREGISTRAION() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_GOODSERVICETAXREGISTRAIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_GOODSERVICETAXREGISTRAION' in table 'TAXP_PROFILE' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_GOODSERVICETAXREGISTRAIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_LABUAN_STATUS() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_LABUAN_STATUSColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_LABUAN_STATUS' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_LABUAN_STATUSColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_LABUAN_NAME() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_LABUAN_NAMEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_LABUAN_NAME' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_LABUAN_NAMEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_LABUAN_REG() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_LABUAN_REGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_LABUAN_REG' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_LABUAN_REGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_LABUAN_INCOME_TAX() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_LABUAN_INCOME_TAXColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_LABUAN_INCOME_TAX' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_LABUAN_INCOME_TAXColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_BUILDINGINDUSTRY() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_BUILDINGINDUSTRYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_BUILDINGINDUSTRY' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_BUILDINGINDUSTRYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TP_STS_OTHER() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.TP_STS_OTHERColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_STS_OTHER' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.TP_STS_OTHERColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HandleBy() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.HandleByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HandleBy' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.HandleByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ModifiedBy() As String
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.ModifiedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedBy' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableTAXP_PROFILE.ModifiedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ModifiedDateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tableTAXP_PROFILE.ModifiedDateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedDateTime' in table 'TAXP_PROFILE' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableTAXP_PROFILE.ModifiedDateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_NAMENull()
            Me(Me.tableTAXP_PROFILE.TP_COM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ROC_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ROC_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ROC_NONull()
            Me(Me.tableTAXP_PROFILE.TP_ROC_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_EMPLOYER_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_EMPLOYER_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_EMPLOYER_NONull()
            Me(Me.tableTAXP_PROFILE.TP_EMPLOYER_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_FILE_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_FILE_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_FILE_NONull()
            Me(Me.tableTAXP_PROFILE.TP_FILE_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_RESIDENCENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_RESIDENCEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_RESIDENCENull()
            Me(Me.tableTAXP_PROFILE.TP_RESIDENCEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COUNTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COUNTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ACC_PERIOD_FRNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_FRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ACC_PERIOD_FRNull()
            Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_FRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ACC_PERIOD_TONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_TOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ACC_PERIOD_TONull()
            Me(Me.tableTAXP_PROFILE.TP_ACC_PERIOD_TOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_EFILINGNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_EFILINGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_EFILINGNull()
            Me(Me.tableTAXP_PROFILE.TP_EFILINGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_PUBLIC_ORDERNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_PUBLIC_ORDERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_PUBLIC_ORDERNull()
            Me(Me.tableTAXP_PROFILE.TP_PUBLIC_ORDERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CO_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CO_STATUSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CO_STATUSNull()
            Me(Me.tableTAXP_PROFILE.TP_CO_STATUSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_EMAILColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_EMAILNull()
            Me(Me.tableTAXP_PROFILE.TP_EMAILColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_ADD_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_ADD_LINE1Null()
            Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_ADD_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_ADD_LINE2Null()
            Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_ADD_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_ADD_LINE3Null()
            Me(Me.tableTAXP_PROFILE.TP_REG_ADD_LINE3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_POSTCODENull()
            Me(Me.tableTAXP_PROFILE.TP_REG_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_CITYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_CITYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_CITYNull()
            Me(Me.tableTAXP_PROFILE.TP_REG_CITYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_STATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_STATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_STATENull()
            Me(Me.tableTAXP_PROFILE.TP_REG_STATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_ADD_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_ADD_LINE1Null()
            Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_ADD_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_ADD_LINE2Null()
            Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_ADD_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_ADD_LINE3Null()
            Me(Me.tableTAXP_PROFILE.TP_CURR_ADD_LINE3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_POSTCODENull()
            Me(Me.tableTAXP_PROFILE.TP_CURR_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_CITYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_CITYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_CITYNull()
            Me(Me.tableTAXP_PROFILE.TP_CURR_CITYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_STATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_STATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_STATENull()
            Me(Me.tableTAXP_PROFILE.TP_CURR_STATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_ADD_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_ADD_LINE1Null()
            Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_ADD_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_ADD_LINE2Null()
            Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_ADD_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_ADD_LINE3Null()
            Me(Me.tableTAXP_PROFILE.TP_COM_ADD_LINE3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_POSTCODENull()
            Me(Me.tableTAXP_PROFILE.TP_COM_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_CITYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_CITYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_CITYNull()
            Me(Me.tableTAXP_PROFILE.TP_COM_CITYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_STATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_STATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_STATENull()
            Me(Me.tableTAXP_PROFILE.TP_COM_STATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANKNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANKColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANKNull()
            Me(Me.tableTAXP_PROFILE.TP_BANKColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_ACCNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_ACCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_ACCNull()
            Me(Me.tableTAXP_PROFILE.TP_BANK_ACCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_ADD_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_ADD_LINE1Null()
            Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_ADD_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_ADD_LINE2Null()
            Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_ADD_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_ADD_LINE3Null()
            Me(Me.tableTAXP_PROFILE.TP_BANK_ADD_LINE3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_POSTCODENull()
            Me(Me.tableTAXP_PROFILE.TP_BANK_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_CITYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_CITYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_CITYNull()
            Me(Me.tableTAXP_PROFILE.TP_BANK_CITYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BANK_STATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BANK_STATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BANK_STATENull()
            Me(Me.tableTAXP_PROFILE.TP_BANK_STATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_RECORD_KEPTNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_RECORD_KEPTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_RECORD_KEPTNull()
            Me(Me.tableTAXP_PROFILE.TP_RECORD_KEPTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_ADD_LINE1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_ADD_LINE1Null()
            Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_ADD_LINE2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_ADD_LINE2Null()
            Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_ADD_LINE3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_ADD_LINE3Null()
            Me(Me.tableTAXP_PROFILE.TP_ALT_ADD_LINE3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_POSTCODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_POSTCODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_POSTCODENull()
            Me(Me.tableTAXP_PROFILE.TP_ALT_POSTCODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_CITYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_CITYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_CITYNull()
            Me(Me.tableTAXP_PROFILE.TP_ALT_CITYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_STATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_STATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_STATENull()
            Me(Me.tableTAXP_PROFILE.TP_ALT_STATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_TAX_FILE_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_TAX_FILE_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_TAX_FILE_NONull()
            Me(Me.tableTAXP_PROFILE.TP_TAX_FILE_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CONTACTNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CONTACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CONTACTNull()
            Me(Me.tableTAXP_PROFILE.TP_CONTACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_TEL_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_TEL_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_TEL_NONull()
            Me(Me.tableTAXP_PROFILE.TP_TEL_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_FAX_NONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_FAX_NOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_FAX_NONull()
            Me(Me.tableTAXP_PROFILE.TP_FAX_NOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_INV_ANN_DATENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_INV_ANN_DATEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_INV_ANN_DATENull()
            Me(Me.tableTAXP_PROFILE.TP_INV_ANN_DATEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_INV_DETTAXFEENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_INV_DETTAXFEEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_INV_DETTAXFEENull()
            Me(Me.tableTAXP_PROFILE.TP_INV_DETTAXFEEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_INV_DISBURSEMENTNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_INV_DISBURSEMENTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_INV_DISBURSEMENTNull()
            Me(Me.tableTAXP_PROFILE.TP_INV_DISBURSEMENTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_INV_SALESTAXNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_INV_SALESTAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_INV_SALESTAXNull()
            Me(Me.tableTAXP_PROFILE.TP_INV_SALESTAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_INV_TOTALNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_INV_TOTALColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_INV_TOTALNull()
            Me(Me.tableTAXP_PROFILE.TP_INV_TOTALColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_PREFIXNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_PREFIXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_PREFIXNull()
            Me(Me.tableTAXP_PROFILE.TP_PREFIXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BLOGNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BLOGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BLOGNull()
            Me(Me.tableTAXP_PROFILE.TP_BLOGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BASIS_PERIOD_FRNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_FRColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BASIS_PERIOD_FRNull()
            Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_FRColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BASIS_PERIOD_TONull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_TOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BASIS_PERIOD_TONull()
            Me(Me.tableTAXP_PROFILE.TP_BASIS_PERIOD_TOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_OPN_OPERATIONNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_OPN_OPERATIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_OPN_OPERATIONNull()
            Me(Me.tableTAXP_PROFILE.TP_OPN_OPERATIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ULT_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ULT_COMPANYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ULT_COMPANYNull()
            Me(Me.tableTAXP_PROFILE.TP_ULT_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ULT_COUNTRY_CODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ULT_COUNTRY_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ULT_COUNTRY_CODENull()
            Me(Me.tableTAXP_PROFILE.TP_ULT_COUNTRY_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_IMD_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_IMD_COMPANYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_IMD_COMPANYNull()
            Me(Me.tableTAXP_PROFILE.TP_IMD_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_IMD_COUNTRY_CODENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_IMD_COUNTRY_CODEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_IMD_COUNTRY_CODENull()
            Me(Me.tableTAXP_PROFILE.TP_IMD_COUNTRY_CODEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_REG_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_REG_COUNTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_REG_COUNTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_REG_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CURR_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CURR_COUNTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CURR_COUNTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_CURR_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_COUNTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_COUNTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_COM_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ALT_COUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ALT_COUNTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ALT_COUNTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_ALT_COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_COM_STSNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_COM_STSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_COM_STSNull()
            Me(Me.tableTAXP_PROFILE.TP_COM_STSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_SECTION_127_1Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_SECTION_127_1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_SECTION_127_1Null()
            Me(Me.tableTAXP_PROFILE.TP_SECTION_127_1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_SECTION_127_2Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_SECTION_127_2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_SECTION_127_2Null()
            Me(Me.tableTAXP_PROFILE.TP_SECTION_127_2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_SECTION_127_3Null() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_SECTION_127_3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_SECTION_127_3Null()
            Me(Me.tableTAXP_PROFILE.TP_SECTION_127_3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_ROYALCLAIMNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_ROYALCLAIMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_ROYALCLAIMNull()
            Me(Me.tableTAXP_PROFILE.TP_ROYALCLAIMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_CARRYETRANDINGNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_CARRYETRANDINGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_CARRYETRANDINGNull()
            Me(Me.tableTAXP_PROFILE.TP_CARRYETRANDINGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_GOODSERVICETAXREGISTRAIONNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_GOODSERVICETAXREGISTRAIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_GOODSERVICETAXREGISTRAIONNull()
            Me(Me.tableTAXP_PROFILE.TP_GOODSERVICETAXREGISTRAIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_LABUAN_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_LABUAN_STATUSColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_LABUAN_STATUSNull()
            Me(Me.tableTAXP_PROFILE.TP_LABUAN_STATUSColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_LABUAN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_LABUAN_NAMEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_LABUAN_NAMENull()
            Me(Me.tableTAXP_PROFILE.TP_LABUAN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_LABUAN_REGNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_LABUAN_REGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_LABUAN_REGNull()
            Me(Me.tableTAXP_PROFILE.TP_LABUAN_REGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_LABUAN_INCOME_TAXNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_LABUAN_INCOME_TAXColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_LABUAN_INCOME_TAXNull()
            Me(Me.tableTAXP_PROFILE.TP_LABUAN_INCOME_TAXColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_BUILDINGINDUSTRYNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_BUILDINGINDUSTRYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_BUILDINGINDUSTRYNull()
            Me(Me.tableTAXP_PROFILE.TP_BUILDINGINDUSTRYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTP_STS_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.TP_STS_OTHERColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTP_STS_OTHERNull()
            Me(Me.tableTAXP_PROFILE.TP_STS_OTHERColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHandleByNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.HandleByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHandleByNull()
            Me(Me.tableTAXP_PROFILE.HandleByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsModifiedByNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.ModifiedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetModifiedByNull()
            Me(Me.tableTAXP_PROFILE.ModifiedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsModifiedDateTimeNull() As Boolean
            Return Me.IsNull(Me.tableTAXP_PROFILE.ModifiedDateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetModifiedDateTimeNull()
            Me(Me.tableTAXP_PROFILE.ModifiedDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MENU_LIST_INFORow
        Inherits Global.System.Data.DataRow
        
        Private tableMENU_LIST_INFO As MENU_LIST_INFODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMENU_LIST_INFO = CType(Me.Table,MENU_LIST_INFODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMENU_LIST_INFO.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMENU_LIST_INFO.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentID() As Integer
            Get
                Return CType(Me(Me.tableMENU_LIST_INFO.ParentIDColumn),Integer)
            End Get
            Set
                Me(Me.tableMENU_LIST_INFO.ParentIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyName() As String
            Get
                Try 
                    Return CType(Me(Me.tableMENU_LIST_INFO.KeyNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyName' in table 'MENU_LIST_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMENU_LIST_INFO.KeyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableMENU_LIST_INFO.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'MENU_LIST_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMENU_LIST_INFO.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LicenseType() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMENU_LIST_INFO.LicenseTypeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LicenseType' in table 'MENU_LIST_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMENU_LIST_INFO.LicenseTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyNameNull() As Boolean
            Return Me.IsNull(Me.tableMENU_LIST_INFO.KeyNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyNameNull()
            Me(Me.tableMENU_LIST_INFO.KeyNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableMENU_LIST_INFO.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableMENU_LIST_INFO.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLicenseTypeNull() As Boolean
            Return Me.IsNull(Me.tableMENU_LIST_INFO.LicenseTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLicenseTypeNull()
            Me(Me.tableMENU_LIST_INFO.LicenseTypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TaxPayerFindRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TaxPayerFindRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TaxPayerFindRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TaxPayerFindRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtErrorLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtErrorLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtErrorLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtErrorLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class YEAR_ASSESSMENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As YEAR_ASSESSMENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As YEAR_ASSESSMENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As YEAR_ASSESSMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtDatabaseColumnListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtDatabaseColumnListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtDatabaseColumnListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtDatabaseColumnListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BANK_CODERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BANK_CODERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BANK_CODERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BANK_CODERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BANKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BANKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BANKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BANKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COUNTRYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COUNTRYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COUNTRYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COUNTRYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class STATESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STATESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As STATESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As STATESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BUSINESS_SOURCERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BUSINESS_SOURCERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BUSINESS_SOURCERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BUSINESS_SOURCERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BUSINESSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BUSINESSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BUSINESSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BUSINESSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TAXP_PARTNERSHIPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TAXP_PARTNERSHIPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TAXP_PARTNERSHIPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TAXP_PARTNERSHIPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TAXP_PROFILERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TAXP_PROFILERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TAXP_PROFILERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TAXP_PROFILERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MENU_LIST_INFORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MENU_LIST_INFORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MENU_LIST_INFORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MENU_LIST_INFORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
