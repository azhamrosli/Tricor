'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsPNL_Report"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsPNL_Report
    Inherits Global.System.Data.DataSet
    
    Private tablePNL_QUICK_DETAIL As PNL_QUICK_DETAILDataTable
    
    Private tablePNL_QUICK_DETAIL_SUB As PNL_QUICK_DETAIL_SUBDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_REPORT As PROFIT_LOSS_ACCOUNT_REPORTDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_REPORT_SCH As PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_NOTE As PROFIT_LOSS_ACCOUNT_NOTEDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable
    
    Private tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable
    
    Private tableDIVIDEND_INCOME As DIVIDEND_INCOMEDataTable
    
    Private tableRENTAL_INCOME As RENTAL_INCOMEDataTable
    
    Private tableEXEMPT_DIVIDEND As EXEMPT_DIVIDENDDataTable
    
    Private tableEXPENSES_RENTAL As EXPENSES_RENTALDataTable
    
    Private tableEXPENSES_RENTAL_DETAIL As EXPENSES_RENTAL_DETAILDataTable
    
    Private tableEXPENSES_INTERESTRESTRICT As EXPENSES_INTERESTRESTRICTDataTable
    
    Private tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY As REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable
    
    Private tableREF_INTEREST_RESTRIC_DETAIL As REF_INTEREST_RESTRIC_DETAILDataTable
    
    Private tableINTEREST_RESTRIC_MONTLY_REPORT As INTEREST_RESTRIC_MONTLY_REPORTDataTable
    
    Private tableREF_INTEREST_RESTRIC_TMP As REF_INTEREST_RESTRIC_TMPDataTable
    
    Private tableREF_INTEREST_RESTRIC As REF_INTEREST_RESTRICDataTable
    
    Private tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable
    
    Private tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor As INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable
    
    Private tablePNL_SOURCENO_COUNT As PNL_SOURCENO_COUNTDataTable
    
    Private tablePNL_TABLE_INFO As PNL_TABLE_INFODataTable
    
    Private relationFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL As Global.System.Data.DataRelation
    
    Private relationFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB As Global.System.Data.DataRelation
    
    Private relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH As Global.System.Data.DataRelation
    
    Private relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT As Global.System.Data.DataRelation
    
    Private relationFK_NOTE As Global.System.Data.DataRelation
    
    Private relationFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN As Global.System.Data.DataRelation
    
    Private relationFK_DIVIDEND_INCOME As Global.System.Data.DataRelation
    
    Private relationFK_RENTAL_INCOME As Global.System.Data.DataRelation
    
    Private relationFK_EXEMPT_DIVIDEND As Global.System.Data.DataRelation
    
    Private relationFK_EXPENSES_RENTAL As Global.System.Data.DataRelation
    
    Private relationFK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("PNL_QUICK_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_QUICK_DETAILDataTable(ds.Tables("PNL_QUICK_DETAIL")))
            End If
            If (Not (ds.Tables("PNL_QUICK_DETAIL_SUB")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_QUICK_DETAIL_SUBDataTable(ds.Tables("PNL_QUICK_DETAIL_SUB")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_SCH")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_SCH")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTEDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME")))
            End If
            If (Not (ds.Tables("DIVIDEND_INCOME")) Is Nothing) Then
                MyBase.Tables.Add(New DIVIDEND_INCOMEDataTable(ds.Tables("DIVIDEND_INCOME")))
            End If
            If (Not (ds.Tables("RENTAL_INCOME")) Is Nothing) Then
                MyBase.Tables.Add(New RENTAL_INCOMEDataTable(ds.Tables("RENTAL_INCOME")))
            End If
            If (Not (ds.Tables("EXEMPT_DIVIDEND")) Is Nothing) Then
                MyBase.Tables.Add(New EXEMPT_DIVIDENDDataTable(ds.Tables("EXEMPT_DIVIDEND")))
            End If
            If (Not (ds.Tables("EXPENSES_RENTAL")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_RENTALDataTable(ds.Tables("EXPENSES_RENTAL")))
            End If
            If (Not (ds.Tables("EXPENSES_RENTAL_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_RENTAL_DETAILDataTable(ds.Tables("EXPENSES_RENTAL_DETAIL")))
            End If
            If (Not (ds.Tables("EXPENSES_INTERESTRESTRICT")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_INTERESTRESTRICTDataTable(ds.Tables("EXPENSES_INTERESTRESTRICT")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL_MONTHLY")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL_MONTHLY")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAILDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL")))
            End If
            If (Not (ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New INTEREST_RESTRIC_MONTLY_REPORTDataTable(ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_TMP")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_TMPDataTable(ds.Tables("REF_INTEREST_RESTRIC_TMP")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRICDataTable(ds.Tables("REF_INTEREST_RESTRIC")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP")))
            End If
            If (Not (ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT_Tricor")) Is Nothing) Then
                MyBase.Tables.Add(New INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable(ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT_Tricor")))
            End If
            If (Not (ds.Tables("PNL_SOURCENO_COUNT")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_SOURCENO_COUNTDataTable(ds.Tables("PNL_SOURCENO_COUNT")))
            End If
            If (Not (ds.Tables("PNL_TABLE_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_TABLE_INFODataTable(ds.Tables("PNL_TABLE_INFO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PNL_QUICK_DETAIL() As PNL_QUICK_DETAILDataTable
        Get
            Return Me.tablePNL_QUICK_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PNL_QUICK_DETAIL_SUB() As PNL_QUICK_DETAIL_SUBDataTable
        Get
            Return Me.tablePNL_QUICK_DETAIL_SUB
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_REPORT() As PROFIT_LOSS_ACCOUNT_REPORTDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_REPORT_SCH() As PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT() As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_NOTE() As PROFIT_LOSS_ACCOUNT_NOTEDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_NOTE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_NOTE_COLUMN() As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT() As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME() As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable
        Get
            Return Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DIVIDEND_INCOME() As DIVIDEND_INCOMEDataTable
        Get
            Return Me.tableDIVIDEND_INCOME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RENTAL_INCOME() As RENTAL_INCOMEDataTable
        Get
            Return Me.tableRENTAL_INCOME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXEMPT_DIVIDEND() As EXEMPT_DIVIDENDDataTable
        Get
            Return Me.tableEXEMPT_DIVIDEND
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXPENSES_RENTAL() As EXPENSES_RENTALDataTable
        Get
            Return Me.tableEXPENSES_RENTAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXPENSES_RENTAL_DETAIL() As EXPENSES_RENTAL_DETAILDataTable
        Get
            Return Me.tableEXPENSES_RENTAL_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXPENSES_INTERESTRESTRICT() As EXPENSES_INTERESTRESTRICTDataTable
        Get
            Return Me.tableEXPENSES_INTERESTRESTRICT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REF_INTEREST_RESTRIC_DETAIL_MONTHLY() As REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable
        Get
            Return Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REF_INTEREST_RESTRIC_DETAIL() As REF_INTEREST_RESTRIC_DETAILDataTable
        Get
            Return Me.tableREF_INTEREST_RESTRIC_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INTEREST_RESTRIC_MONTLY_REPORT() As INTEREST_RESTRIC_MONTLY_REPORTDataTable
        Get
            Return Me.tableINTEREST_RESTRIC_MONTLY_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REF_INTEREST_RESTRIC_TMP() As REF_INTEREST_RESTRIC_TMPDataTable
        Get
            Return Me.tableREF_INTEREST_RESTRIC_TMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REF_INTEREST_RESTRIC() As REF_INTEREST_RESTRICDataTable
        Get
            Return Me.tableREF_INTEREST_RESTRIC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP() As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable
        Get
            Return Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INTEREST_RESTRIC_MONTLY_REPORT_Tricor() As INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable
        Get
            Return Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PNL_SOURCENO_COUNT() As PNL_SOURCENO_COUNTDataTable
        Get
            Return Me.tablePNL_SOURCENO_COUNT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PNL_TABLE_INFO() As PNL_TABLE_INFODataTable
        Get
            Return Me.tablePNL_TABLE_INFO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsPNL_Report = CType(MyBase.Clone,dsPNL_Report)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("PNL_QUICK_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_QUICK_DETAILDataTable(ds.Tables("PNL_QUICK_DETAIL")))
            End If
            If (Not (ds.Tables("PNL_QUICK_DETAIL_SUB")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_QUICK_DETAIL_SUBDataTable(ds.Tables("PNL_QUICK_DETAIL_SUB")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_SCH")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_SCH")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTEDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT")))
            End If
            If (Not (ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME")) Is Nothing) Then
                MyBase.Tables.Add(New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable(ds.Tables("PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME")))
            End If
            If (Not (ds.Tables("DIVIDEND_INCOME")) Is Nothing) Then
                MyBase.Tables.Add(New DIVIDEND_INCOMEDataTable(ds.Tables("DIVIDEND_INCOME")))
            End If
            If (Not (ds.Tables("RENTAL_INCOME")) Is Nothing) Then
                MyBase.Tables.Add(New RENTAL_INCOMEDataTable(ds.Tables("RENTAL_INCOME")))
            End If
            If (Not (ds.Tables("EXEMPT_DIVIDEND")) Is Nothing) Then
                MyBase.Tables.Add(New EXEMPT_DIVIDENDDataTable(ds.Tables("EXEMPT_DIVIDEND")))
            End If
            If (Not (ds.Tables("EXPENSES_RENTAL")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_RENTALDataTable(ds.Tables("EXPENSES_RENTAL")))
            End If
            If (Not (ds.Tables("EXPENSES_RENTAL_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_RENTAL_DETAILDataTable(ds.Tables("EXPENSES_RENTAL_DETAIL")))
            End If
            If (Not (ds.Tables("EXPENSES_INTERESTRESTRICT")) Is Nothing) Then
                MyBase.Tables.Add(New EXPENSES_INTERESTRESTRICTDataTable(ds.Tables("EXPENSES_INTERESTRESTRICT")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL_MONTHLY")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL_MONTHLY")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAILDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL")))
            End If
            If (Not (ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New INTEREST_RESTRIC_MONTLY_REPORTDataTable(ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_TMP")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_TMPDataTable(ds.Tables("REF_INTEREST_RESTRIC_TMP")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRICDataTable(ds.Tables("REF_INTEREST_RESTRIC")))
            End If
            If (Not (ds.Tables("REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP")) Is Nothing) Then
                MyBase.Tables.Add(New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable(ds.Tables("REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP")))
            End If
            If (Not (ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT_Tricor")) Is Nothing) Then
                MyBase.Tables.Add(New INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable(ds.Tables("INTEREST_RESTRIC_MONTLY_REPORT_Tricor")))
            End If
            If (Not (ds.Tables("PNL_SOURCENO_COUNT")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_SOURCENO_COUNTDataTable(ds.Tables("PNL_SOURCENO_COUNT")))
            End If
            If (Not (ds.Tables("PNL_TABLE_INFO")) Is Nothing) Then
                MyBase.Tables.Add(New PNL_TABLE_INFODataTable(ds.Tables("PNL_TABLE_INFO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablePNL_QUICK_DETAIL = CType(MyBase.Tables("PNL_QUICK_DETAIL"),PNL_QUICK_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePNL_QUICK_DETAIL) Is Nothing) Then
                Me.tablePNL_QUICK_DETAIL.InitVars
            End If
        End If
        Me.tablePNL_QUICK_DETAIL_SUB = CType(MyBase.Tables("PNL_QUICK_DETAIL_SUB"),PNL_QUICK_DETAIL_SUBDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePNL_QUICK_DETAIL_SUB) Is Nothing) Then
                Me.tablePNL_QUICK_DETAIL_SUB.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_REPORT"),PROFIT_LOSS_ACCOUNT_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_REPORT) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_REPORT.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_REPORT_SCH"),PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT"),PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_NOTE"),PROFIT_LOSS_ACCOUNT_NOTEDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_NOTE) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_NOTE.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_NOTE_COLUMN"),PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT"),PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.InitVars
            End If
        End If
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME = CType(MyBase.Tables("PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME"),PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME) Is Nothing) Then
                Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.InitVars
            End If
        End If
        Me.tableDIVIDEND_INCOME = CType(MyBase.Tables("DIVIDEND_INCOME"),DIVIDEND_INCOMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDIVIDEND_INCOME) Is Nothing) Then
                Me.tableDIVIDEND_INCOME.InitVars
            End If
        End If
        Me.tableRENTAL_INCOME = CType(MyBase.Tables("RENTAL_INCOME"),RENTAL_INCOMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRENTAL_INCOME) Is Nothing) Then
                Me.tableRENTAL_INCOME.InitVars
            End If
        End If
        Me.tableEXEMPT_DIVIDEND = CType(MyBase.Tables("EXEMPT_DIVIDEND"),EXEMPT_DIVIDENDDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXEMPT_DIVIDEND) Is Nothing) Then
                Me.tableEXEMPT_DIVIDEND.InitVars
            End If
        End If
        Me.tableEXPENSES_RENTAL = CType(MyBase.Tables("EXPENSES_RENTAL"),EXPENSES_RENTALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXPENSES_RENTAL) Is Nothing) Then
                Me.tableEXPENSES_RENTAL.InitVars
            End If
        End If
        Me.tableEXPENSES_RENTAL_DETAIL = CType(MyBase.Tables("EXPENSES_RENTAL_DETAIL"),EXPENSES_RENTAL_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXPENSES_RENTAL_DETAIL) Is Nothing) Then
                Me.tableEXPENSES_RENTAL_DETAIL.InitVars
            End If
        End If
        Me.tableEXPENSES_INTERESTRESTRICT = CType(MyBase.Tables("EXPENSES_INTERESTRESTRICT"),EXPENSES_INTERESTRESTRICTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXPENSES_INTERESTRESTRICT) Is Nothing) Then
                Me.tableEXPENSES_INTERESTRESTRICT.InitVars
            End If
        End If
        Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY = CType(MyBase.Tables("REF_INTEREST_RESTRIC_DETAIL_MONTHLY"),REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY) Is Nothing) Then
                Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.InitVars
            End If
        End If
        Me.tableREF_INTEREST_RESTRIC_DETAIL = CType(MyBase.Tables("REF_INTEREST_RESTRIC_DETAIL"),REF_INTEREST_RESTRIC_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREF_INTEREST_RESTRIC_DETAIL) Is Nothing) Then
                Me.tableREF_INTEREST_RESTRIC_DETAIL.InitVars
            End If
        End If
        Me.tableINTEREST_RESTRIC_MONTLY_REPORT = CType(MyBase.Tables("INTEREST_RESTRIC_MONTLY_REPORT"),INTEREST_RESTRIC_MONTLY_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINTEREST_RESTRIC_MONTLY_REPORT) Is Nothing) Then
                Me.tableINTEREST_RESTRIC_MONTLY_REPORT.InitVars
            End If
        End If
        Me.tableREF_INTEREST_RESTRIC_TMP = CType(MyBase.Tables("REF_INTEREST_RESTRIC_TMP"),REF_INTEREST_RESTRIC_TMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREF_INTEREST_RESTRIC_TMP) Is Nothing) Then
                Me.tableREF_INTEREST_RESTRIC_TMP.InitVars
            End If
        End If
        Me.tableREF_INTEREST_RESTRIC = CType(MyBase.Tables("REF_INTEREST_RESTRIC"),REF_INTEREST_RESTRICDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREF_INTEREST_RESTRIC) Is Nothing) Then
                Me.tableREF_INTEREST_RESTRIC.InitVars
            End If
        End If
        Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP = CType(MyBase.Tables("REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP"),REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP) Is Nothing) Then
                Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP.InitVars
            End If
        End If
        Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor = CType(MyBase.Tables("INTEREST_RESTRIC_MONTLY_REPORT_Tricor"),INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable)
        If (initTable = true) Then
            If (Not (Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor) Is Nothing) Then
                Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.InitVars
            End If
        End If
        Me.tablePNL_SOURCENO_COUNT = CType(MyBase.Tables("PNL_SOURCENO_COUNT"),PNL_SOURCENO_COUNTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePNL_SOURCENO_COUNT) Is Nothing) Then
                Me.tablePNL_SOURCENO_COUNT.InitVars
            End If
        End If
        Me.tablePNL_TABLE_INFO = CType(MyBase.Tables("PNL_TABLE_INFO"),PNL_TABLE_INFODataTable)
        If (initTable = true) Then
            If (Not (Me.tablePNL_TABLE_INFO) Is Nothing) Then
                Me.tablePNL_TABLE_INFO.InitVars
            End If
        End If
        Me.relationFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL = Me.Relations("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL")
        Me.relationFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB = Me.Relations("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB")
        Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH = Me.Relations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH")
        Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT = Me.Relations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")
        Me.relationFK_NOTE = Me.Relations("FK_NOTE")
        Me.relationFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN = Me.Relations("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")
        Me.relationFK_DIVIDEND_INCOME = Me.Relations("FK_DIVIDEND_INCOME")
        Me.relationFK_RENTAL_INCOME = Me.Relations("FK_RENTAL_INCOME")
        Me.relationFK_EXEMPT_DIVIDEND = Me.Relations("FK_EXEMPT_DIVIDEND")
        Me.relationFK_EXPENSES_RENTAL = Me.Relations("FK_EXPENSES_RENTAL")
        Me.relationFK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL = Me.Relations("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsPNL_Report"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsPNL_Report.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablePNL_QUICK_DETAIL = New PNL_QUICK_DETAILDataTable()
        MyBase.Tables.Add(Me.tablePNL_QUICK_DETAIL)
        Me.tablePNL_QUICK_DETAIL_SUB = New PNL_QUICK_DETAIL_SUBDataTable()
        MyBase.Tables.Add(Me.tablePNL_QUICK_DETAIL_SUB)
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT = New PROFIT_LOSS_ACCOUNT_REPORTDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_REPORT)
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH = New PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH)
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT = New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT)
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE = New PROFIT_LOSS_ACCOUNT_NOTEDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_NOTE)
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN = New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN)
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT = New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT)
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME = New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable()
        MyBase.Tables.Add(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME)
        Me.tableDIVIDEND_INCOME = New DIVIDEND_INCOMEDataTable()
        MyBase.Tables.Add(Me.tableDIVIDEND_INCOME)
        Me.tableRENTAL_INCOME = New RENTAL_INCOMEDataTable()
        MyBase.Tables.Add(Me.tableRENTAL_INCOME)
        Me.tableEXEMPT_DIVIDEND = New EXEMPT_DIVIDENDDataTable()
        MyBase.Tables.Add(Me.tableEXEMPT_DIVIDEND)
        Me.tableEXPENSES_RENTAL = New EXPENSES_RENTALDataTable()
        MyBase.Tables.Add(Me.tableEXPENSES_RENTAL)
        Me.tableEXPENSES_RENTAL_DETAIL = New EXPENSES_RENTAL_DETAILDataTable()
        MyBase.Tables.Add(Me.tableEXPENSES_RENTAL_DETAIL)
        Me.tableEXPENSES_INTERESTRESTRICT = New EXPENSES_INTERESTRESTRICTDataTable()
        MyBase.Tables.Add(Me.tableEXPENSES_INTERESTRESTRICT)
        Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY = New REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable()
        MyBase.Tables.Add(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY)
        Me.tableREF_INTEREST_RESTRIC_DETAIL = New REF_INTEREST_RESTRIC_DETAILDataTable()
        MyBase.Tables.Add(Me.tableREF_INTEREST_RESTRIC_DETAIL)
        Me.tableINTEREST_RESTRIC_MONTLY_REPORT = New INTEREST_RESTRIC_MONTLY_REPORTDataTable()
        MyBase.Tables.Add(Me.tableINTEREST_RESTRIC_MONTLY_REPORT)
        Me.tableREF_INTEREST_RESTRIC_TMP = New REF_INTEREST_RESTRIC_TMPDataTable()
        MyBase.Tables.Add(Me.tableREF_INTEREST_RESTRIC_TMP)
        Me.tableREF_INTEREST_RESTRIC = New REF_INTEREST_RESTRICDataTable()
        MyBase.Tables.Add(Me.tableREF_INTEREST_RESTRIC)
        Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP = New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable()
        MyBase.Tables.Add(Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP)
        Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor = New INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable()
        MyBase.Tables.Add(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor)
        Me.tablePNL_SOURCENO_COUNT = New PNL_SOURCENO_COUNTDataTable()
        MyBase.Tables.Add(Me.tablePNL_SOURCENO_COUNT)
        Me.tablePNL_TABLE_INFO = New PNL_TABLE_INFODataTable()
        MyBase.Tables.Add(Me.tablePNL_TABLE_INFO)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn})
        Me.tablePNL_QUICK_DETAIL.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB", New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL.IDColumn}, New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn})
        Me.tablePNL_QUICK_DETAIL_SUB.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_KEYColumn})
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_KEYColumn})
        Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_NOTE", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn})
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE.IDColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.ParentIDColumn})
        Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_DIVIDEND_INCOME", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableDIVIDEND_INCOME.KEYNAMEColumn})
        Me.tableDIVIDEND_INCOME.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_RENTAL_INCOME", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableRENTAL_INCOME.KEYNAMEColumn})
        Me.tableRENTAL_INCOME.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_EXEMPT_DIVIDEND", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn})
        Me.tableEXEMPT_DIVIDEND.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_EXPENSES_RENTAL", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL.KEYNAMEColumn})
        Me.tableEXPENSES_RENTAL.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL", New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL.EXRENT_EXRENTKEYColumn}, New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTKEYColumn})
        Me.tableEXPENSES_RENTAL_DETAIL.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.None
        Me.relationFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL = New Global.System.Data.DataRelation("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn}, false)
        Me.Relations.Add(Me.relationFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL)
        Me.relationFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB = New Global.System.Data.DataRelation("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB", New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL.IDColumn}, New Global.System.Data.DataColumn() {Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn}, false)
        Me.Relations.Add(Me.relationFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB)
        Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH = New Global.System.Data.DataRelation("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_KEYColumn}, false)
        Me.Relations.Add(Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH)
        Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT = New Global.System.Data.DataRelation("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_KEYColumn}, false)
        Me.Relations.Add(Me.relationFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT)
        Me.relationFK_NOTE = New Global.System.Data.DataRelation("FK_NOTE", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn}, false)
        Me.Relations.Add(Me.relationFK_NOTE)
        Me.relationFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN = New Global.System.Data.DataRelation("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN", New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE.IDColumn}, New Global.System.Data.DataColumn() {Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.ParentIDColumn}, false)
        Me.Relations.Add(Me.relationFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN)
        Me.relationFK_DIVIDEND_INCOME = New Global.System.Data.DataRelation("FK_DIVIDEND_INCOME", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableDIVIDEND_INCOME.KEYNAMEColumn}, false)
        Me.Relations.Add(Me.relationFK_DIVIDEND_INCOME)
        Me.relationFK_RENTAL_INCOME = New Global.System.Data.DataRelation("FK_RENTAL_INCOME", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableRENTAL_INCOME.KEYNAMEColumn}, false)
        Me.Relations.Add(Me.relationFK_RENTAL_INCOME)
        Me.relationFK_EXEMPT_DIVIDEND = New Global.System.Data.DataRelation("FK_EXEMPT_DIVIDEND", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn}, false)
        Me.Relations.Add(Me.relationFK_EXEMPT_DIVIDEND)
        Me.relationFK_EXPENSES_RENTAL = New Global.System.Data.DataRelation("FK_EXPENSES_RENTAL", New Global.System.Data.DataColumn() {Me.tablePNL_TABLE_INFO.KeyNameColumn}, New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL.KEYNAMEColumn}, false)
        Me.Relations.Add(Me.relationFK_EXPENSES_RENTAL)
        Me.relationFK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL = New Global.System.Data.DataRelation("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL", New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL.EXRENT_EXRENTKEYColumn}, New Global.System.Data.DataColumn() {Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTKEYColumn}, false)
        Me.Relations.Add(Me.relationFK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePNL_QUICK_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePNL_QUICK_DETAIL_SUB() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_REPORT_SCH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_NOTE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_NOTE_COLUMN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDIVIDEND_INCOME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRENTAL_INCOME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEXEMPT_DIVIDEND() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEXPENSES_RENTAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEXPENSES_RENTAL_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeEXPENSES_INTERESTRESTRICT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREF_INTEREST_RESTRIC_DETAIL_MONTHLY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREF_INTEREST_RESTRIC_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINTEREST_RESTRIC_MONTLY_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREF_INTEREST_RESTRIC_TMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREF_INTEREST_RESTRIC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeINTEREST_RESTRIC_MONTLY_REPORT_Tricor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePNL_SOURCENO_COUNT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePNL_TABLE_INFO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsPNL_Report = New dsPNL_Report()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PNL_QUICK_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As PNL_QUICK_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PNL_QUICK_DETAIL_SUBRowChangeEventHandler(ByVal sender As Object, ByVal e As PNL_QUICK_DETAIL_SUBRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_NOTERowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEventHandler(ByVal sender As Object, ByVal e As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DIVIDEND_INCOMERowChangeEventHandler(ByVal sender As Object, ByVal e As DIVIDEND_INCOMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RENTAL_INCOMERowChangeEventHandler(ByVal sender As Object, ByVal e As RENTAL_INCOMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EXEMPT_DIVIDENDRowChangeEventHandler(ByVal sender As Object, ByVal e As EXEMPT_DIVIDENDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EXPENSES_RENTALRowChangeEventHandler(ByVal sender As Object, ByVal e As EXPENSES_RENTALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EXPENSES_RENTAL_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As EXPENSES_RENTAL_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub EXPENSES_INTERESTRESTRICTRowChangeEventHandler(ByVal sender As Object, ByVal e As EXPENSES_INTERESTRESTRICTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEventHandler(ByVal sender As Object, ByVal e As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REF_INTEREST_RESTRIC_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As REF_INTEREST_RESTRIC_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INTEREST_RESTRIC_MONTLY_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REF_INTEREST_RESTRIC_TMPRowChangeEventHandler(ByVal sender As Object, ByVal e As REF_INTEREST_RESTRIC_TMPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REF_INTEREST_RESTRICRowChangeEventHandler(ByVal sender As Object, ByVal e As REF_INTEREST_RESTRICRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEventHandler(ByVal sender As Object, ByVal e As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEventHandler(ByVal sender As Object, ByVal e As INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PNL_SOURCENO_COUNTRowChangeEventHandler(ByVal sender As Object, ByVal e As PNL_SOURCENO_COUNTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PNL_TABLE_INFORowChangeEventHandler(ByVal sender As Object, ByVal e As PNL_TABLE_INFORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PNL_QUICK_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of PNL_QUICK_DETAILRow)
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnSOURCE_NO As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnNOTE As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnDEDUCTIBLE As Global.System.Data.DataColumn
        
        Private columnDEDUCTIBLE_ADD As Global.System.Data.DataColumn
        
        Private columnPECENTAGE As Global.System.Data.DataColumn
        
        Private columnPECENTAGE_AMOUNT As Global.System.Data.DataColumn
        
        Private columnTITLE As Global.System.Data.DataColumn
        
        Private columnSCH As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        Private columnTOTAL_PECENTAGE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PNL_QUICK_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOURCE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEDUCTIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEDUCTIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEDUCTIBLE_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEDUCTIBLE_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PECENTAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPECENTAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PECENTAGE_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPECENTAGE_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_PECENTAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_PECENTAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PNL_QUICK_DETAILRow
            Get
                Return CType(Me.Rows(index),PNL_QUICK_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAILRowChanging As PNL_QUICK_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAILRowChanged As PNL_QUICK_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAILRowDeleting As PNL_QUICK_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAILRowDeleted As PNL_QUICK_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPNL_QUICK_DETAILRow(ByVal row As PNL_QUICK_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPNL_QUICK_DETAILRow(ByVal parentPNL_TABLE_INFORowByFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL As PNL_TABLE_INFORow, ByVal SOURCE_NO As Integer, ByVal DESCRIPTION As String, ByVal AMOUNT As Decimal, ByVal NOTE As String, ByVal DEDUCTIBLE As Boolean, ByVal DEDUCTIBLE_ADD As Boolean, ByVal PECENTAGE As Integer, ByVal PECENTAGE_AMOUNT As Decimal, ByVal TITLE As String, ByVal SCH As String, ByVal TOTAL_AMOUNT As Decimal, ByVal TOTAL_PECENTAGE As Decimal) As PNL_QUICK_DETAILRow
            Dim rowPNL_QUICK_DETAILRow As PNL_QUICK_DETAILRow = CType(Me.NewRow,PNL_QUICK_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SOURCE_NO, DESCRIPTION, AMOUNT, NOTE, Nothing, DEDUCTIBLE, DEDUCTIBLE_ADD, PECENTAGE, PECENTAGE_AMOUNT, TITLE, SCH, TOTAL_AMOUNT, TOTAL_PECENTAGE}
            If (Not (parentPNL_TABLE_INFORowByFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL) Is Nothing) Then
                columnValuesArray(0) = parentPNL_TABLE_INFORowByFK_PNL_TABLE_INFO_PNL_QUICK_DETAIL(1)
            End If
            rowPNL_QUICK_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPNL_QUICK_DETAILRow)
            Return rowPNL_QUICK_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As PNL_QUICK_DETAILRow
            Return CType(Me.Rows.Find(New Object() {ID}),PNL_QUICK_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PNL_QUICK_DETAILDataTable = CType(MyBase.Clone,PNL_QUICK_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PNL_QUICK_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnSOURCE_NO = MyBase.Columns("SOURCE_NO")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnNOTE = MyBase.Columns("NOTE")
            Me.columnID = MyBase.Columns("ID")
            Me.columnDEDUCTIBLE = MyBase.Columns("DEDUCTIBLE")
            Me.columnDEDUCTIBLE_ADD = MyBase.Columns("DEDUCTIBLE_ADD")
            Me.columnPECENTAGE = MyBase.Columns("PECENTAGE")
            Me.columnPECENTAGE_AMOUNT = MyBase.Columns("PECENTAGE_AMOUNT")
            Me.columnTITLE = MyBase.Columns("TITLE")
            Me.columnSCH = MyBase.Columns("SCH")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
            Me.columnTOTAL_PECENTAGE = MyBase.Columns("TOTAL_PECENTAGE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnSOURCE_NO = New Global.System.Data.DataColumn("SOURCE_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCE_NO)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnNOTE = New Global.System.Data.DataColumn("NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnDEDUCTIBLE = New Global.System.Data.DataColumn("DEDUCTIBLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEDUCTIBLE)
            Me.columnDEDUCTIBLE_ADD = New Global.System.Data.DataColumn("DEDUCTIBLE_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEDUCTIBLE_ADD)
            Me.columnPECENTAGE = New Global.System.Data.DataColumn("PECENTAGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPECENTAGE)
            Me.columnPECENTAGE_AMOUNT = New Global.System.Data.DataColumn("PECENTAGE_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPECENTAGE_AMOUNT)
            Me.columnTITLE = New Global.System.Data.DataColumn("TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITLE)
            Me.columnSCH = New Global.System.Data.DataColumn("SCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCH)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.columnTOTAL_PECENTAGE = New Global.System.Data.DataColumn("TOTAL_PECENTAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_PECENTAGE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnKEYNAME.MaxLength = 300
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPNL_QUICK_DETAILRow() As PNL_QUICK_DETAILRow
            Return CType(Me.NewRow,PNL_QUICK_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PNL_QUICK_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PNL_QUICK_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PNL_QUICK_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAILRowChanged(Me, New PNL_QUICK_DETAILRowChangeEvent(CType(e.Row,PNL_QUICK_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PNL_QUICK_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAILRowChanging(Me, New PNL_QUICK_DETAILRowChangeEvent(CType(e.Row,PNL_QUICK_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PNL_QUICK_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAILRowDeleted(Me, New PNL_QUICK_DETAILRowChangeEvent(CType(e.Row,PNL_QUICK_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PNL_QUICK_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAILRowDeleting(Me, New PNL_QUICK_DETAILRowChangeEvent(CType(e.Row,PNL_QUICK_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePNL_QUICK_DETAILRow(ByVal row As PNL_QUICK_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PNL_QUICK_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PNL_QUICK_DETAIL_SUBDataTable
        Inherits Global.System.Data.TypedTableBase(Of PNL_QUICK_DETAIL_SUBRow)
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnSOURCE_NO As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnNOTE As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnPARENT_ID As Global.System.Data.DataColumn
        
        Private columnDEDUCTIBLE As Global.System.Data.DataColumn
        
        Private columnDEDUCTIBLE_ADD As Global.System.Data.DataColumn
        
        Private columnPECENTAGE As Global.System.Data.DataColumn
        
        Private columnPECENTAGE_AMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PNL_QUICK_DETAIL_SUB"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOURCE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARENT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEDUCTIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEDUCTIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEDUCTIBLE_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEDUCTIBLE_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PECENTAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPECENTAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PECENTAGE_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPECENTAGE_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PNL_QUICK_DETAIL_SUBRow
            Get
                Return CType(Me.Rows(index),PNL_QUICK_DETAIL_SUBRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAIL_SUBRowChanging As PNL_QUICK_DETAIL_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAIL_SUBRowChanged As PNL_QUICK_DETAIL_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAIL_SUBRowDeleting As PNL_QUICK_DETAIL_SUBRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_QUICK_DETAIL_SUBRowDeleted As PNL_QUICK_DETAIL_SUBRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPNL_QUICK_DETAIL_SUBRow(ByVal row As PNL_QUICK_DETAIL_SUBRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPNL_QUICK_DETAIL_SUBRow(ByVal KEYNAME As String, ByVal SOURCE_NO As Integer, ByVal DESCRIPTION As String, ByVal AMOUNT As Decimal, ByVal NOTE As String, ByVal parentPNL_QUICK_DETAILRowByFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB As PNL_QUICK_DETAILRow, ByVal DEDUCTIBLE As Boolean, ByVal DEDUCTIBLE_ADD As Boolean, ByVal PECENTAGE As Integer, ByVal PECENTAGE_AMOUNT As Decimal) As PNL_QUICK_DETAIL_SUBRow
            Dim rowPNL_QUICK_DETAIL_SUBRow As PNL_QUICK_DETAIL_SUBRow = CType(Me.NewRow,PNL_QUICK_DETAIL_SUBRow)
            Dim columnValuesArray() As Object = New Object() {KEYNAME, SOURCE_NO, DESCRIPTION, AMOUNT, NOTE, Nothing, Nothing, DEDUCTIBLE, DEDUCTIBLE_ADD, PECENTAGE, PECENTAGE_AMOUNT}
            If (Not (parentPNL_QUICK_DETAILRowByFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB) Is Nothing) Then
                columnValuesArray(6) = parentPNL_QUICK_DETAILRowByFK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB(5)
            End If
            rowPNL_QUICK_DETAIL_SUBRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPNL_QUICK_DETAIL_SUBRow)
            Return rowPNL_QUICK_DETAIL_SUBRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PNL_QUICK_DETAIL_SUBDataTable = CType(MyBase.Clone,PNL_QUICK_DETAIL_SUBDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PNL_QUICK_DETAIL_SUBDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnSOURCE_NO = MyBase.Columns("SOURCE_NO")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnNOTE = MyBase.Columns("NOTE")
            Me.columnID = MyBase.Columns("ID")
            Me.columnPARENT_ID = MyBase.Columns("PARENT_ID")
            Me.columnDEDUCTIBLE = MyBase.Columns("DEDUCTIBLE")
            Me.columnDEDUCTIBLE_ADD = MyBase.Columns("DEDUCTIBLE_ADD")
            Me.columnPECENTAGE = MyBase.Columns("PECENTAGE")
            Me.columnPECENTAGE_AMOUNT = MyBase.Columns("PECENTAGE_AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnSOURCE_NO = New Global.System.Data.DataColumn("SOURCE_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCE_NO)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnNOTE = New Global.System.Data.DataColumn("NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnPARENT_ID = New Global.System.Data.DataColumn("PARENT_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ID)
            Me.columnDEDUCTIBLE = New Global.System.Data.DataColumn("DEDUCTIBLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEDUCTIBLE)
            Me.columnDEDUCTIBLE_ADD = New Global.System.Data.DataColumn("DEDUCTIBLE_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEDUCTIBLE_ADD)
            Me.columnPECENTAGE = New Global.System.Data.DataColumn("PECENTAGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPECENTAGE)
            Me.columnPECENTAGE_AMOUNT = New Global.System.Data.DataColumn("PECENTAGE_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPECENTAGE_AMOUNT)
            Me.columnID.AutoIncrement = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPNL_QUICK_DETAIL_SUBRow() As PNL_QUICK_DETAIL_SUBRow
            Return CType(Me.NewRow,PNL_QUICK_DETAIL_SUBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PNL_QUICK_DETAIL_SUBRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PNL_QUICK_DETAIL_SUBRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PNL_QUICK_DETAIL_SUBRowChangedEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAIL_SUBRowChanged(Me, New PNL_QUICK_DETAIL_SUBRowChangeEvent(CType(e.Row,PNL_QUICK_DETAIL_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PNL_QUICK_DETAIL_SUBRowChangingEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAIL_SUBRowChanging(Me, New PNL_QUICK_DETAIL_SUBRowChangeEvent(CType(e.Row,PNL_QUICK_DETAIL_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PNL_QUICK_DETAIL_SUBRowDeletedEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAIL_SUBRowDeleted(Me, New PNL_QUICK_DETAIL_SUBRowChangeEvent(CType(e.Row,PNL_QUICK_DETAIL_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PNL_QUICK_DETAIL_SUBRowDeletingEvent) Is Nothing) Then
                RaiseEvent PNL_QUICK_DETAIL_SUBRowDeleting(Me, New PNL_QUICK_DETAIL_SUBRowChangeEvent(CType(e.Row,PNL_QUICK_DETAIL_SUBRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePNL_QUICK_DETAIL_SUBRow(ByVal row As PNL_QUICK_DETAIL_SUBRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PNL_QUICK_DETAIL_SUBDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_REPORTRow)
        
        Private columnPL_KEY As Global.System.Data.DataColumn
        
        Private columnPL_REF_NO As Global.System.Data.DataColumn
        
        Private columnPL_YA As Global.System.Data.DataColumn
        
        Private columnPL_SALES As Global.System.Data.DataColumn
        
        Private columnPL_OP_STK As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_DPC As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_OAE As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_ONAE As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_CLS_STK As Global.System.Data.DataColumn
        
        Private columnPL_COGS As Global.System.Data.DataColumn
        
        Private columnPL_GROSS_PROFIT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_UNREALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_REALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_DIVIDEND As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_INTEREST As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INV_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_EXM_DIV As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FIR As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_REALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_UNREALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INSU_COMP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INT As Global.System.Data.DataColumn
        
        Private columnPL_LAWYER_COST As Global.System.Data.DataColumn
        
        Private columnPL_CONTRACT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_SALARY As Global.System.Data.DataColumn
        
        Private columnPL_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_RENT As Global.System.Data.DataColumn
        
        Private columnPL_EXP_MAINTENANCE As Global.System.Data.DataColumn
        
        Private columnPL_RND As Global.System.Data.DataColumn
        
        Private columnPL_ADVERT As Global.System.Data.DataColumn
        
        Private columnPL_TRAVEL As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DPC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_APP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_NAPP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_CLNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_STFF As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PENALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PROV_ACC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_LEAVE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_WO As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_UNREALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_REALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_INI_SUB As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_CAP_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_OTHERS As Global.System.Data.DataColumn
        
        Private columnPL_TOT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_NET_PROFIT_LOSS As Global.System.Data.DataColumn
        
        Private columnPL_DISALLOWED_EXP As Global.System.Data.DataColumn
        
        Private columnPL_TOTALX As Global.System.Data.DataColumn
        
        Private columnPL_TOTALY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INTRESTRICT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_NONSOURCE As Global.System.Data.DataColumn
        
        Private columnPL_S60F As Global.System.Data.DataColumn
        
        Private columnPL_MAINBUZ As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ZAKAT As Global.System.Data.DataColumn
        
        Private columnPL_COMPANY As Global.System.Data.DataColumn
        
        Private columnPL_TREGROSS As Global.System.Data.DataColumn
        
        Private columnPL_TTAXDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TNETDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TECH_FEE As Global.System.Data.DataColumn
        
        Private columnPL_EMPL_STOCK As Global.System.Data.DataColumn
        
        Private columnPL_S60FA As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_BALANCE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXRLOSSFOREIGNT As Global.System.Data.DataColumn
        
        Private columnPL_DIRECTORS_FEE As Global.System.Data.DataColumn
        
        Private columnPL_JKDM As Global.System.Data.DataColumn
        
        Private columnModifiedBy As Global.System.Data.DataColumn
        
        Private columnModifiedDateTime As Global.System.Data.DataColumn
        
        Private columnPNL_Status As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_REF_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_REF_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_YAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_YA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_SALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_SALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OP_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OP_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_OAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_OAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_ONAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_ONAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASES_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CLS_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CLS_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COGSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COGS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_GROSS_PROFITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_GROSS_PROFIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_UNREALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_UNREALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_REALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_REALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_DIVIDENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_DIVIDEND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_INTERESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_INTEREST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INV_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INV_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_EXM_DIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_EXM_DIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_REALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_REALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_UNREALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_UNREALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INSU_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INSU_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_LAWYER_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_LAWYER_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CONTRACT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CONTRACT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_SALARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_SALARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_RENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_RENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_MAINTENANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_MAINTENANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_RNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_RND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ADVERTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ADVERT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TRAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TRAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_APPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_APP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_NAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_NAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_CLNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_CLNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_STFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_STFF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PENALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PENALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PROV_ACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PROV_ACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_LEAVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_LEAVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_WO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_UNREALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_UNREALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_REALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_REALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_INI_SUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_INI_SUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_CAP_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_CAP_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NET_PROFIT_LOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NET_PROFIT_LOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DISALLOWED_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DISALLOWED_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTRESTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INTRESTRICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_NONSOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_NONSOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_MAINBUZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_MAINBUZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ZAKATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ZAKAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TREGROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TREGROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TTAXDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TTAXDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TNETDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TNETDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TECH_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TECH_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EMPL_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EMPL_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60FA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_BALANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_BALANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXRLOSSFOREIGNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXRLOSSFOREIGNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DIRECTORS_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DIRECTORS_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_JKDMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_JKDM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModifiedDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModifiedDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNL_StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNL_Status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_REPORTRow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORTRowChanging As PROFIT_LOSS_ACCOUNT_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORTRowChanged As PROFIT_LOSS_ACCOUNT_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORTRowDeleting As PROFIT_LOSS_ACCOUNT_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORTRowDeleted As PROFIT_LOSS_ACCOUNT_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_REPORTRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_REPORTRow( _
                    ByVal PL_KEY As Integer,  _
                    ByVal PL_REF_NO As String,  _
                    ByVal PL_YA As String,  _
                    ByVal PL_SALES As Decimal,  _
                    ByVal PL_OP_STK As Decimal,  _
                    ByVal PL_PURCHASES As Decimal,  _
                    ByVal PL_PRO_COST As Decimal,  _
                    ByVal PL_PRO_COST_DPC As Decimal,  _
                    ByVal PL_PRO_COST_OAE As Decimal,  _
                    ByVal PL_PRO_COST_ONAE As Decimal,  _
                    ByVal PL_PURCHASES_PRO_COST As Decimal,  _
                    ByVal PL_CLS_STK As Decimal,  _
                    ByVal PL_COGS As Decimal,  _
                    ByVal PL_GROSS_PROFIT As Decimal,  _
                    ByVal PL_OTH_BSIN As Decimal,  _
                    ByVal PL_OTH_BSIN_UNREALGT As Decimal,  _
                    ByVal PL_OTH_BSIN_REALGT As Decimal,  _
                    ByVal PL_OTH_BSIN_RENTAL As Decimal,  _
                    ByVal PL_OTH_BSIN_OTHER As Decimal,  _
                    ByVal PL_OTH_IN As Decimal,  _
                    ByVal PL_OTH_IN_DIVIDEND As Decimal,  _
                    ByVal PL_OTH_IN_INTEREST As Decimal,  _
                    ByVal PL_OTH_IN_RENTAL As Decimal,  _
                    ByVal PL_OTH_IN_ROYALTY As Decimal,  _
                    ByVal PL_OTH_IN_OTHER As Decimal,  _
                    ByVal PL_NONTAX_IN As Decimal,  _
                    ByVal PL_NONTAX_IN_FA_DISP As Decimal,  _
                    ByVal PL_NONTAX_IN_INV_DISP As Decimal,  _
                    ByVal PL_NONTAX_IN_EXM_DIV As Decimal,  _
                    ByVal PL_NONTAX_IN_FIR As Decimal,  _
                    ByVal PL_NONTAX_IN_REALG As Decimal,  _
                    ByVal PL_NONTAX_IN_UNREALG As Decimal,  _
                    ByVal PL_NONTAX_IN_INSU_COMP As Decimal,  _
                    ByVal PL_EXP_INT As Decimal,  _
                    ByVal PL_LAWYER_COST As Decimal,  _
                    ByVal PL_CONTRACT_EXP As Decimal,  _
                    ByVal PL_EXP_SALARY As Decimal,  _
                    ByVal PL_ROYALTY As Decimal,  _
                    ByVal PL_EXP_RENT As Decimal,  _
                    ByVal PL_EXP_MAINTENANCE As Decimal,  _
                    ByVal PL_RND As Decimal,  _
                    ByVal PL_ADVERT As Decimal,  _
                    ByVal PL_TRAVEL As Decimal,  _
                    ByVal PL_OTHER_EXP As Decimal,  _
                    ByVal PL_OTHER_EXP_DPC As Decimal,  _
                    ByVal PL_OTHER_EXP_DNT As Decimal,  _
                    ByVal PL_OTHER_EXP_DNT_APP As Decimal,  _
                    ByVal PL_OTHER_EXP_DNT_NAPP As Decimal,  _
                    ByVal PL_OTHER_EXP_FA_DISP As Decimal,  _
                    ByVal PL_OTHER_EXP_ENTM As Decimal,  _
                    ByVal PL_OTHER_EXP_ENTM_CLNT As Decimal,  _
                    ByVal PL_OTHER_EXP_ENTM_STFF As Decimal,  _
                    ByVal PL_OTHER_EXP_PENALTY As Decimal,  _
                    ByVal PL_OTHER_EXP_PROV_ACC As Decimal,  _
                    ByVal PL_OTHER_EXP_LEAVE As Decimal,  _
                    ByVal PL_OTHER_EXP_FA_WO As Decimal,  _
                    ByVal PL_OTHER_EXP_UNREALOSS As Decimal,  _
                    ByVal PL_OTHER_EXP_REALOSS As Decimal,  _
                    ByVal PL_OTHER_EXP_INI_SUB As Decimal,  _
                    ByVal PL_OTHER_EXP_CAP_EXP As Decimal,  _
                    ByVal PL_OTHER_EXP_OTHERS As Decimal,  _
                    ByVal PL_TOT_EXP As Decimal,  _
                    ByVal PL_NET_PROFIT_LOSS As Decimal,  _
                    ByVal PL_DISALLOWED_EXP As Decimal,  _
                    ByVal PL_TOTALX As String,  _
                    ByVal PL_TOTALY As String,  _
                    ByVal PL_EXP_INTRESTRICT As Decimal,  _
                    ByVal PL_OTH_BSIN_NONSOURCE As Decimal,  _
                    ByVal PL_S60F As String,  _
                    ByVal PL_MAINBUZ As Integer,  _
                    ByVal PL_OTHER_EXP_ZAKAT As Decimal,  _
                    ByVal PL_COMPANY As String,  _
                    ByVal PL_TREGROSS As String,  _
                    ByVal PL_TTAXDEDUCTION As String,  _
                    ByVal PL_TNETDEDUCTION As String,  _
                    ByVal PL_TECH_FEE As Decimal,  _
                    ByVal PL_EMPL_STOCK As Decimal,  _
                    ByVal PL_S60FA As String,  _
                    ByVal PL_OTHER_EXP_BALANCE As Decimal,  _
                    ByVal PL_OTHER_EXRLOSSFOREIGNT As Decimal,  _
                    ByVal PL_DIRECTORS_FEE As Decimal,  _
                    ByVal PL_JKDM As Decimal,  _
                    ByVal ModifiedBy As String,  _
                    ByVal ModifiedDateTime As Date,  _
                    ByVal PNL_Status As String) As PROFIT_LOSS_ACCOUNT_REPORTRow
            Dim rowPROFIT_LOSS_ACCOUNT_REPORTRow As PROFIT_LOSS_ACCOUNT_REPORTRow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {PL_KEY, PL_REF_NO, PL_YA, PL_SALES, PL_OP_STK, PL_PURCHASES, PL_PRO_COST, PL_PRO_COST_DPC, PL_PRO_COST_OAE, PL_PRO_COST_ONAE, PL_PURCHASES_PRO_COST, PL_CLS_STK, PL_COGS, PL_GROSS_PROFIT, PL_OTH_BSIN, PL_OTH_BSIN_UNREALGT, PL_OTH_BSIN_REALGT, PL_OTH_BSIN_RENTAL, PL_OTH_BSIN_OTHER, PL_OTH_IN, PL_OTH_IN_DIVIDEND, PL_OTH_IN_INTEREST, PL_OTH_IN_RENTAL, PL_OTH_IN_ROYALTY, PL_OTH_IN_OTHER, PL_NONTAX_IN, PL_NONTAX_IN_FA_DISP, PL_NONTAX_IN_INV_DISP, PL_NONTAX_IN_EXM_DIV, PL_NONTAX_IN_FIR, PL_NONTAX_IN_REALG, PL_NONTAX_IN_UNREALG, PL_NONTAX_IN_INSU_COMP, PL_EXP_INT, PL_LAWYER_COST, PL_CONTRACT_EXP, PL_EXP_SALARY, PL_ROYALTY, PL_EXP_RENT, PL_EXP_MAINTENANCE, PL_RND, PL_ADVERT, PL_TRAVEL, PL_OTHER_EXP, PL_OTHER_EXP_DPC, PL_OTHER_EXP_DNT, PL_OTHER_EXP_DNT_APP, PL_OTHER_EXP_DNT_NAPP, PL_OTHER_EXP_FA_DISP, PL_OTHER_EXP_ENTM, PL_OTHER_EXP_ENTM_CLNT, PL_OTHER_EXP_ENTM_STFF, PL_OTHER_EXP_PENALTY, PL_OTHER_EXP_PROV_ACC, PL_OTHER_EXP_LEAVE, PL_OTHER_EXP_FA_WO, PL_OTHER_EXP_UNREALOSS, PL_OTHER_EXP_REALOSS, PL_OTHER_EXP_INI_SUB, PL_OTHER_EXP_CAP_EXP, PL_OTHER_EXP_OTHERS, PL_TOT_EXP, PL_NET_PROFIT_LOSS, PL_DISALLOWED_EXP, PL_TOTALX, PL_TOTALY, PL_EXP_INTRESTRICT, PL_OTH_BSIN_NONSOURCE, PL_S60F, PL_MAINBUZ, PL_OTHER_EXP_ZAKAT, PL_COMPANY, PL_TREGROSS, PL_TTAXDEDUCTION, PL_TNETDEDUCTION, PL_TECH_FEE, PL_EMPL_STOCK, PL_S60FA, PL_OTHER_EXP_BALANCE, PL_OTHER_EXRLOSSFOREIGNT, PL_DIRECTORS_FEE, PL_JKDM, ModifiedBy, ModifiedDateTime, PNL_Status}
            rowPROFIT_LOSS_ACCOUNT_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_REPORTRow)
            Return rowPROFIT_LOSS_ACCOUNT_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPL_KEY(ByVal PL_KEY As Integer) As PROFIT_LOSS_ACCOUNT_REPORTRow
            Return CType(Me.Rows.Find(New Object() {PL_KEY}),PROFIT_LOSS_ACCOUNT_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_REPORTDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPL_KEY = MyBase.Columns("PL_KEY")
            Me.columnPL_REF_NO = MyBase.Columns("PL_REF_NO")
            Me.columnPL_YA = MyBase.Columns("PL_YA")
            Me.columnPL_SALES = MyBase.Columns("PL_SALES")
            Me.columnPL_OP_STK = MyBase.Columns("PL_OP_STK")
            Me.columnPL_PURCHASES = MyBase.Columns("PL_PURCHASES")
            Me.columnPL_PRO_COST = MyBase.Columns("PL_PRO_COST")
            Me.columnPL_PRO_COST_DPC = MyBase.Columns("PL_PRO_COST_DPC")
            Me.columnPL_PRO_COST_OAE = MyBase.Columns("PL_PRO_COST_OAE")
            Me.columnPL_PRO_COST_ONAE = MyBase.Columns("PL_PRO_COST_ONAE")
            Me.columnPL_PURCHASES_PRO_COST = MyBase.Columns("PL_PURCHASES_PRO_COST")
            Me.columnPL_CLS_STK = MyBase.Columns("PL_CLS_STK")
            Me.columnPL_COGS = MyBase.Columns("PL_COGS")
            Me.columnPL_GROSS_PROFIT = MyBase.Columns("PL_GROSS_PROFIT")
            Me.columnPL_OTH_BSIN = MyBase.Columns("PL_OTH_BSIN")
            Me.columnPL_OTH_BSIN_UNREALGT = MyBase.Columns("PL_OTH_BSIN_UNREALGT")
            Me.columnPL_OTH_BSIN_REALGT = MyBase.Columns("PL_OTH_BSIN_REALGT")
            Me.columnPL_OTH_BSIN_RENTAL = MyBase.Columns("PL_OTH_BSIN_RENTAL")
            Me.columnPL_OTH_BSIN_OTHER = MyBase.Columns("PL_OTH_BSIN_OTHER")
            Me.columnPL_OTH_IN = MyBase.Columns("PL_OTH_IN")
            Me.columnPL_OTH_IN_DIVIDEND = MyBase.Columns("PL_OTH_IN_DIVIDEND")
            Me.columnPL_OTH_IN_INTEREST = MyBase.Columns("PL_OTH_IN_INTEREST")
            Me.columnPL_OTH_IN_RENTAL = MyBase.Columns("PL_OTH_IN_RENTAL")
            Me.columnPL_OTH_IN_ROYALTY = MyBase.Columns("PL_OTH_IN_ROYALTY")
            Me.columnPL_OTH_IN_OTHER = MyBase.Columns("PL_OTH_IN_OTHER")
            Me.columnPL_NONTAX_IN = MyBase.Columns("PL_NONTAX_IN")
            Me.columnPL_NONTAX_IN_FA_DISP = MyBase.Columns("PL_NONTAX_IN_FA_DISP")
            Me.columnPL_NONTAX_IN_INV_DISP = MyBase.Columns("PL_NONTAX_IN_INV_DISP")
            Me.columnPL_NONTAX_IN_EXM_DIV = MyBase.Columns("PL_NONTAX_IN_EXM_DIV")
            Me.columnPL_NONTAX_IN_FIR = MyBase.Columns("PL_NONTAX_IN_FIR")
            Me.columnPL_NONTAX_IN_REALG = MyBase.Columns("PL_NONTAX_IN_REALG")
            Me.columnPL_NONTAX_IN_UNREALG = MyBase.Columns("PL_NONTAX_IN_UNREALG")
            Me.columnPL_NONTAX_IN_INSU_COMP = MyBase.Columns("PL_NONTAX_IN_INSU_COMP")
            Me.columnPL_EXP_INT = MyBase.Columns("PL_EXP_INT")
            Me.columnPL_LAWYER_COST = MyBase.Columns("PL_LAWYER_COST")
            Me.columnPL_CONTRACT_EXP = MyBase.Columns("PL_CONTRACT_EXP")
            Me.columnPL_EXP_SALARY = MyBase.Columns("PL_EXP_SALARY")
            Me.columnPL_ROYALTY = MyBase.Columns("PL_ROYALTY")
            Me.columnPL_EXP_RENT = MyBase.Columns("PL_EXP_RENT")
            Me.columnPL_EXP_MAINTENANCE = MyBase.Columns("PL_EXP_MAINTENANCE")
            Me.columnPL_RND = MyBase.Columns("PL_RND")
            Me.columnPL_ADVERT = MyBase.Columns("PL_ADVERT")
            Me.columnPL_TRAVEL = MyBase.Columns("PL_TRAVEL")
            Me.columnPL_OTHER_EXP = MyBase.Columns("PL_OTHER_EXP")
            Me.columnPL_OTHER_EXP_DPC = MyBase.Columns("PL_OTHER_EXP_DPC")
            Me.columnPL_OTHER_EXP_DNT = MyBase.Columns("PL_OTHER_EXP_DNT")
            Me.columnPL_OTHER_EXP_DNT_APP = MyBase.Columns("PL_OTHER_EXP_DNT_APP")
            Me.columnPL_OTHER_EXP_DNT_NAPP = MyBase.Columns("PL_OTHER_EXP_DNT_NAPP")
            Me.columnPL_OTHER_EXP_FA_DISP = MyBase.Columns("PL_OTHER_EXP_FA_DISP")
            Me.columnPL_OTHER_EXP_ENTM = MyBase.Columns("PL_OTHER_EXP_ENTM")
            Me.columnPL_OTHER_EXP_ENTM_CLNT = MyBase.Columns("PL_OTHER_EXP_ENTM_CLNT")
            Me.columnPL_OTHER_EXP_ENTM_STFF = MyBase.Columns("PL_OTHER_EXP_ENTM_STFF")
            Me.columnPL_OTHER_EXP_PENALTY = MyBase.Columns("PL_OTHER_EXP_PENALTY")
            Me.columnPL_OTHER_EXP_PROV_ACC = MyBase.Columns("PL_OTHER_EXP_PROV_ACC")
            Me.columnPL_OTHER_EXP_LEAVE = MyBase.Columns("PL_OTHER_EXP_LEAVE")
            Me.columnPL_OTHER_EXP_FA_WO = MyBase.Columns("PL_OTHER_EXP_FA_WO")
            Me.columnPL_OTHER_EXP_UNREALOSS = MyBase.Columns("PL_OTHER_EXP_UNREALOSS")
            Me.columnPL_OTHER_EXP_REALOSS = MyBase.Columns("PL_OTHER_EXP_REALOSS")
            Me.columnPL_OTHER_EXP_INI_SUB = MyBase.Columns("PL_OTHER_EXP_INI_SUB")
            Me.columnPL_OTHER_EXP_CAP_EXP = MyBase.Columns("PL_OTHER_EXP_CAP_EXP")
            Me.columnPL_OTHER_EXP_OTHERS = MyBase.Columns("PL_OTHER_EXP_OTHERS")
            Me.columnPL_TOT_EXP = MyBase.Columns("PL_TOT_EXP")
            Me.columnPL_NET_PROFIT_LOSS = MyBase.Columns("PL_NET_PROFIT_LOSS")
            Me.columnPL_DISALLOWED_EXP = MyBase.Columns("PL_DISALLOWED_EXP")
            Me.columnPL_TOTALX = MyBase.Columns("PL_TOTALX")
            Me.columnPL_TOTALY = MyBase.Columns("PL_TOTALY")
            Me.columnPL_EXP_INTRESTRICT = MyBase.Columns("PL_EXP_INTRESTRICT")
            Me.columnPL_OTH_BSIN_NONSOURCE = MyBase.Columns("PL_OTH_BSIN_NONSOURCE")
            Me.columnPL_S60F = MyBase.Columns("PL_S60F")
            Me.columnPL_MAINBUZ = MyBase.Columns("PL_MAINBUZ")
            Me.columnPL_OTHER_EXP_ZAKAT = MyBase.Columns("PL_OTHER_EXP_ZAKAT")
            Me.columnPL_COMPANY = MyBase.Columns("PL_COMPANY")
            Me.columnPL_TREGROSS = MyBase.Columns("PL_TREGROSS")
            Me.columnPL_TTAXDEDUCTION = MyBase.Columns("PL_TTAXDEDUCTION")
            Me.columnPL_TNETDEDUCTION = MyBase.Columns("PL_TNETDEDUCTION")
            Me.columnPL_TECH_FEE = MyBase.Columns("PL_TECH_FEE")
            Me.columnPL_EMPL_STOCK = MyBase.Columns("PL_EMPL_STOCK")
            Me.columnPL_S60FA = MyBase.Columns("PL_S60FA")
            Me.columnPL_OTHER_EXP_BALANCE = MyBase.Columns("PL_OTHER_EXP_BALANCE")
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = MyBase.Columns("PL_OTHER_EXRLOSSFOREIGNT")
            Me.columnPL_DIRECTORS_FEE = MyBase.Columns("PL_DIRECTORS_FEE")
            Me.columnPL_JKDM = MyBase.Columns("PL_JKDM")
            Me.columnModifiedBy = MyBase.Columns("ModifiedBy")
            Me.columnModifiedDateTime = MyBase.Columns("ModifiedDateTime")
            Me.columnPNL_Status = MyBase.Columns("PNL_Status")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPL_KEY = New Global.System.Data.DataColumn("PL_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_KEY)
            Me.columnPL_REF_NO = New Global.System.Data.DataColumn("PL_REF_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_REF_NO)
            Me.columnPL_YA = New Global.System.Data.DataColumn("PL_YA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_YA)
            Me.columnPL_SALES = New Global.System.Data.DataColumn("PL_SALES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_SALES)
            Me.columnPL_OP_STK = New Global.System.Data.DataColumn("PL_OP_STK", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OP_STK)
            Me.columnPL_PURCHASES = New Global.System.Data.DataColumn("PL_PURCHASES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES)
            Me.columnPL_PRO_COST = New Global.System.Data.DataColumn("PL_PRO_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST)
            Me.columnPL_PRO_COST_DPC = New Global.System.Data.DataColumn("PL_PRO_COST_DPC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_DPC)
            Me.columnPL_PRO_COST_OAE = New Global.System.Data.DataColumn("PL_PRO_COST_OAE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_OAE)
            Me.columnPL_PRO_COST_ONAE = New Global.System.Data.DataColumn("PL_PRO_COST_ONAE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_ONAE)
            Me.columnPL_PURCHASES_PRO_COST = New Global.System.Data.DataColumn("PL_PURCHASES_PRO_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES_PRO_COST)
            Me.columnPL_CLS_STK = New Global.System.Data.DataColumn("PL_CLS_STK", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CLS_STK)
            Me.columnPL_COGS = New Global.System.Data.DataColumn("PL_COGS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COGS)
            Me.columnPL_GROSS_PROFIT = New Global.System.Data.DataColumn("PL_GROSS_PROFIT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_GROSS_PROFIT)
            Me.columnPL_OTH_BSIN = New Global.System.Data.DataColumn("PL_OTH_BSIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN)
            Me.columnPL_OTH_BSIN_UNREALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_UNREALGT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_UNREALGT)
            Me.columnPL_OTH_BSIN_REALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_REALGT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_REALGT)
            Me.columnPL_OTH_BSIN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_BSIN_RENTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_RENTAL)
            Me.columnPL_OTH_BSIN_OTHER = New Global.System.Data.DataColumn("PL_OTH_BSIN_OTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_OTHER)
            Me.columnPL_OTH_IN = New Global.System.Data.DataColumn("PL_OTH_IN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN)
            Me.columnPL_OTH_IN_DIVIDEND = New Global.System.Data.DataColumn("PL_OTH_IN_DIVIDEND", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_DIVIDEND)
            Me.columnPL_OTH_IN_INTEREST = New Global.System.Data.DataColumn("PL_OTH_IN_INTEREST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_INTEREST)
            Me.columnPL_OTH_IN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_IN_RENTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_RENTAL)
            Me.columnPL_OTH_IN_ROYALTY = New Global.System.Data.DataColumn("PL_OTH_IN_ROYALTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_ROYALTY)
            Me.columnPL_OTH_IN_OTHER = New Global.System.Data.DataColumn("PL_OTH_IN_OTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_OTHER)
            Me.columnPL_NONTAX_IN = New Global.System.Data.DataColumn("PL_NONTAX_IN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN)
            Me.columnPL_NONTAX_IN_FA_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_FA_DISP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FA_DISP)
            Me.columnPL_NONTAX_IN_INV_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INV_DISP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INV_DISP)
            Me.columnPL_NONTAX_IN_EXM_DIV = New Global.System.Data.DataColumn("PL_NONTAX_IN_EXM_DIV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_EXM_DIV)
            Me.columnPL_NONTAX_IN_FIR = New Global.System.Data.DataColumn("PL_NONTAX_IN_FIR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FIR)
            Me.columnPL_NONTAX_IN_REALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_REALG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_REALG)
            Me.columnPL_NONTAX_IN_UNREALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_UNREALG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_UNREALG)
            Me.columnPL_NONTAX_IN_INSU_COMP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INSU_COMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INSU_COMP)
            Me.columnPL_EXP_INT = New Global.System.Data.DataColumn("PL_EXP_INT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INT)
            Me.columnPL_LAWYER_COST = New Global.System.Data.DataColumn("PL_LAWYER_COST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_LAWYER_COST)
            Me.columnPL_CONTRACT_EXP = New Global.System.Data.DataColumn("PL_CONTRACT_EXP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CONTRACT_EXP)
            Me.columnPL_EXP_SALARY = New Global.System.Data.DataColumn("PL_EXP_SALARY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_SALARY)
            Me.columnPL_ROYALTY = New Global.System.Data.DataColumn("PL_ROYALTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ROYALTY)
            Me.columnPL_EXP_RENT = New Global.System.Data.DataColumn("PL_EXP_RENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_RENT)
            Me.columnPL_EXP_MAINTENANCE = New Global.System.Data.DataColumn("PL_EXP_MAINTENANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_MAINTENANCE)
            Me.columnPL_RND = New Global.System.Data.DataColumn("PL_RND", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_RND)
            Me.columnPL_ADVERT = New Global.System.Data.DataColumn("PL_ADVERT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ADVERT)
            Me.columnPL_TRAVEL = New Global.System.Data.DataColumn("PL_TRAVEL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TRAVEL)
            Me.columnPL_OTHER_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP)
            Me.columnPL_OTHER_EXP_DPC = New Global.System.Data.DataColumn("PL_OTHER_EXP_DPC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DPC)
            Me.columnPL_OTHER_EXP_DNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT)
            Me.columnPL_OTHER_EXP_DNT_APP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_APP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_APP)
            Me.columnPL_OTHER_EXP_DNT_NAPP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_NAPP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_NAPP)
            Me.columnPL_OTHER_EXP_FA_DISP = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_DISP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_DISP)
            Me.columnPL_OTHER_EXP_ENTM = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM)
            Me.columnPL_OTHER_EXP_ENTM_CLNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_CLNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_CLNT)
            Me.columnPL_OTHER_EXP_ENTM_STFF = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_STFF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_STFF)
            Me.columnPL_OTHER_EXP_PENALTY = New Global.System.Data.DataColumn("PL_OTHER_EXP_PENALTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PENALTY)
            Me.columnPL_OTHER_EXP_PROV_ACC = New Global.System.Data.DataColumn("PL_OTHER_EXP_PROV_ACC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PROV_ACC)
            Me.columnPL_OTHER_EXP_LEAVE = New Global.System.Data.DataColumn("PL_OTHER_EXP_LEAVE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_LEAVE)
            Me.columnPL_OTHER_EXP_FA_WO = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_WO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_WO)
            Me.columnPL_OTHER_EXP_UNREALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_UNREALOSS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_UNREALOSS)
            Me.columnPL_OTHER_EXP_REALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_REALOSS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_REALOSS)
            Me.columnPL_OTHER_EXP_INI_SUB = New Global.System.Data.DataColumn("PL_OTHER_EXP_INI_SUB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_INI_SUB)
            Me.columnPL_OTHER_EXP_CAP_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP_CAP_EXP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_CAP_EXP)
            Me.columnPL_OTHER_EXP_OTHERS = New Global.System.Data.DataColumn("PL_OTHER_EXP_OTHERS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_OTHERS)
            Me.columnPL_TOT_EXP = New Global.System.Data.DataColumn("PL_TOT_EXP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOT_EXP)
            Me.columnPL_NET_PROFIT_LOSS = New Global.System.Data.DataColumn("PL_NET_PROFIT_LOSS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NET_PROFIT_LOSS)
            Me.columnPL_DISALLOWED_EXP = New Global.System.Data.DataColumn("PL_DISALLOWED_EXP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DISALLOWED_EXP)
            Me.columnPL_TOTALX = New Global.System.Data.DataColumn("PL_TOTALX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALX)
            Me.columnPL_TOTALY = New Global.System.Data.DataColumn("PL_TOTALY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALY)
            Me.columnPL_EXP_INTRESTRICT = New Global.System.Data.DataColumn("PL_EXP_INTRESTRICT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INTRESTRICT)
            Me.columnPL_OTH_BSIN_NONSOURCE = New Global.System.Data.DataColumn("PL_OTH_BSIN_NONSOURCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_NONSOURCE)
            Me.columnPL_S60F = New Global.System.Data.DataColumn("PL_S60F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60F)
            Me.columnPL_MAINBUZ = New Global.System.Data.DataColumn("PL_MAINBUZ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_MAINBUZ)
            Me.columnPL_OTHER_EXP_ZAKAT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ZAKAT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ZAKAT)
            Me.columnPL_COMPANY = New Global.System.Data.DataColumn("PL_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COMPANY)
            Me.columnPL_TREGROSS = New Global.System.Data.DataColumn("PL_TREGROSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TREGROSS)
            Me.columnPL_TTAXDEDUCTION = New Global.System.Data.DataColumn("PL_TTAXDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TTAXDEDUCTION)
            Me.columnPL_TNETDEDUCTION = New Global.System.Data.DataColumn("PL_TNETDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TNETDEDUCTION)
            Me.columnPL_TECH_FEE = New Global.System.Data.DataColumn("PL_TECH_FEE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TECH_FEE)
            Me.columnPL_EMPL_STOCK = New Global.System.Data.DataColumn("PL_EMPL_STOCK", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EMPL_STOCK)
            Me.columnPL_S60FA = New Global.System.Data.DataColumn("PL_S60FA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60FA)
            Me.columnPL_OTHER_EXP_BALANCE = New Global.System.Data.DataColumn("PL_OTHER_EXP_BALANCE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_BALANCE)
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = New Global.System.Data.DataColumn("PL_OTHER_EXRLOSSFOREIGNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXRLOSSFOREIGNT)
            Me.columnPL_DIRECTORS_FEE = New Global.System.Data.DataColumn("PL_DIRECTORS_FEE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DIRECTORS_FEE)
            Me.columnPL_JKDM = New Global.System.Data.DataColumn("PL_JKDM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_JKDM)
            Me.columnModifiedBy = New Global.System.Data.DataColumn("ModifiedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedBy)
            Me.columnModifiedDateTime = New Global.System.Data.DataColumn("ModifiedDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModifiedDateTime)
            Me.columnPNL_Status = New Global.System.Data.DataColumn("PNL_Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNL_Status)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPL_KEY}, true))
            Me.columnPL_KEY.AllowDBNull = false
            Me.columnPL_KEY.Unique = true
            Me.columnPL_REF_NO.MaxLength = 20
            Me.columnPL_YA.MaxLength = 5
            Me.columnPL_TOTALX.MaxLength = 25
            Me.columnPL_TOTALY.MaxLength = 25
            Me.columnPL_S60F.MaxLength = 1
            Me.columnPL_COMPANY.MaxLength = 8
            Me.columnPL_TREGROSS.MaxLength = 25
            Me.columnPL_TTAXDEDUCTION.MaxLength = 25
            Me.columnPL_TNETDEDUCTION.MaxLength = 25
            Me.columnPL_S60FA.MaxLength = 1
            Me.columnModifiedBy.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_REPORTRow() As PROFIT_LOSS_ACCOUNT_REPORTRow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORTRowChanged(Me, New PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORTRowChanging(Me, New PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORTRowDeleted(Me, New PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORTRowDeleting(Me, New PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_REPORTRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
        
        Private columnPL_KEY As Global.System.Data.DataColumn
        
        Private columnPL_SALES As Global.System.Data.DataColumn
        
        Private columnPL_OP_STK As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_DPC As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_OAE As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_ONAE As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_CLS_STK As Global.System.Data.DataColumn
        
        Private columnPL_COGS As Global.System.Data.DataColumn
        
        Private columnPL_GROSS_PROFIT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_UNREALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_REALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_DIVIDEND As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_INTEREST As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INV_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_EXM_DIV As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FIR As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_REALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_UNREALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INSU_COMP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INT As Global.System.Data.DataColumn
        
        Private columnPL_LAWYER_COST As Global.System.Data.DataColumn
        
        Private columnPL_CONTRACT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_SALARY As Global.System.Data.DataColumn
        
        Private columnPL_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_RENT As Global.System.Data.DataColumn
        
        Private columnPL_EXP_MAINTENANCE As Global.System.Data.DataColumn
        
        Private columnPL_RND As Global.System.Data.DataColumn
        
        Private columnPL_ADVERT As Global.System.Data.DataColumn
        
        Private columnPL_TRAVEL As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DPC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_APP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_NAPP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_CLNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_STFF As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PENALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PROV_ACC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_LEAVE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_WO As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_UNREALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_REALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_INI_SUB As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_CAP_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_OTHERS As Global.System.Data.DataColumn
        
        Private columnPL_TOT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_NET_PROFIT_LOSS As Global.System.Data.DataColumn
        
        Private columnPL_DISALLOWED_EXP As Global.System.Data.DataColumn
        
        Private columnPL_TOTALX As Global.System.Data.DataColumn
        
        Private columnPL_TOTALY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INTRESTRICT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_NONSOURCE As Global.System.Data.DataColumn
        
        Private columnPL_S60F As Global.System.Data.DataColumn
        
        Private columnPL_MAINBUZ As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ZAKAT As Global.System.Data.DataColumn
        
        Private columnPL_COMPANY As Global.System.Data.DataColumn
        
        Private columnPL_TREGROSS As Global.System.Data.DataColumn
        
        Private columnPL_TTAXDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TNETDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TECH_FEE As Global.System.Data.DataColumn
        
        Private columnPL_EMPL_STOCK As Global.System.Data.DataColumn
        
        Private columnPL_S60FA As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_BALANCE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXRLOSSFOREIGNT As Global.System.Data.DataColumn
        
        Private columnPL_DIRECTORS_FEE As Global.System.Data.DataColumn
        
        Private columnPL_JKDM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_REPORT_SCH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_SALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_SALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OP_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OP_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_OAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_OAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_ONAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_ONAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASES_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CLS_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CLS_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COGSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COGS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_GROSS_PROFITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_GROSS_PROFIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_UNREALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_UNREALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_REALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_REALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_DIVIDENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_DIVIDEND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_INTERESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_INTEREST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INV_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INV_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_EXM_DIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_EXM_DIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_REALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_REALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_UNREALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_UNREALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INSU_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INSU_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_LAWYER_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_LAWYER_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CONTRACT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CONTRACT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_SALARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_SALARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_RENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_RENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_MAINTENANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_MAINTENANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_RNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_RND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ADVERTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ADVERT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TRAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TRAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_APPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_APP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_NAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_NAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_CLNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_CLNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_STFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_STFF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PENALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PENALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PROV_ACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PROV_ACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_LEAVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_LEAVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_WO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_UNREALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_UNREALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_REALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_REALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_INI_SUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_INI_SUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_CAP_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_CAP_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NET_PROFIT_LOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NET_PROFIT_LOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DISALLOWED_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DISALLOWED_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTRESTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INTRESTRICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_NONSOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_NONSOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_MAINBUZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_MAINBUZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ZAKATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ZAKAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TREGROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TREGROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TTAXDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TTAXDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TNETDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TNETDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TECH_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TECH_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EMPL_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EMPL_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60FA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_BALANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_BALANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXRLOSSFOREIGNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXRLOSSFOREIGNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DIRECTORS_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DIRECTORS_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_JKDMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_JKDM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChanging As PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChanged As PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeleting As PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeleted As PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_REPORT_SCHRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_REPORT_SCHRow( _
                    ByVal parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH As PROFIT_LOSS_ACCOUNT_REPORTRow,  _
                    ByVal PL_SALES As String,  _
                    ByVal PL_OP_STK As String,  _
                    ByVal PL_PURCHASES As String,  _
                    ByVal PL_PRO_COST As String,  _
                    ByVal PL_PRO_COST_DPC As String,  _
                    ByVal PL_PRO_COST_OAE As String,  _
                    ByVal PL_PRO_COST_ONAE As String,  _
                    ByVal PL_PURCHASES_PRO_COST As String,  _
                    ByVal PL_CLS_STK As String,  _
                    ByVal PL_COGS As String,  _
                    ByVal PL_GROSS_PROFIT As String,  _
                    ByVal PL_OTH_BSIN As String,  _
                    ByVal PL_OTH_BSIN_UNREALGT As String,  _
                    ByVal PL_OTH_BSIN_REALGT As String,  _
                    ByVal PL_OTH_BSIN_RENTAL As String,  _
                    ByVal PL_OTH_BSIN_OTHER As String,  _
                    ByVal PL_OTH_IN As String,  _
                    ByVal PL_OTH_IN_DIVIDEND As String,  _
                    ByVal PL_OTH_IN_INTEREST As String,  _
                    ByVal PL_OTH_IN_RENTAL As String,  _
                    ByVal PL_OTH_IN_ROYALTY As String,  _
                    ByVal PL_OTH_IN_OTHER As String,  _
                    ByVal PL_NONTAX_IN As String,  _
                    ByVal PL_NONTAX_IN_FA_DISP As String,  _
                    ByVal PL_NONTAX_IN_INV_DISP As String,  _
                    ByVal PL_NONTAX_IN_EXM_DIV As String,  _
                    ByVal PL_NONTAX_IN_FIR As String,  _
                    ByVal PL_NONTAX_IN_REALG As String,  _
                    ByVal PL_NONTAX_IN_UNREALG As String,  _
                    ByVal PL_NONTAX_IN_INSU_COMP As String,  _
                    ByVal PL_EXP_INT As String,  _
                    ByVal PL_LAWYER_COST As String,  _
                    ByVal PL_CONTRACT_EXP As String,  _
                    ByVal PL_EXP_SALARY As String,  _
                    ByVal PL_ROYALTY As String,  _
                    ByVal PL_EXP_RENT As String,  _
                    ByVal PL_EXP_MAINTENANCE As String,  _
                    ByVal PL_RND As String,  _
                    ByVal PL_ADVERT As String,  _
                    ByVal PL_TRAVEL As String,  _
                    ByVal PL_OTHER_EXP As String,  _
                    ByVal PL_OTHER_EXP_DPC As String,  _
                    ByVal PL_OTHER_EXP_DNT As String,  _
                    ByVal PL_OTHER_EXP_DNT_APP As String,  _
                    ByVal PL_OTHER_EXP_DNT_NAPP As String,  _
                    ByVal PL_OTHER_EXP_FA_DISP As String,  _
                    ByVal PL_OTHER_EXP_ENTM As String,  _
                    ByVal PL_OTHER_EXP_ENTM_CLNT As String,  _
                    ByVal PL_OTHER_EXP_ENTM_STFF As String,  _
                    ByVal PL_OTHER_EXP_PENALTY As String,  _
                    ByVal PL_OTHER_EXP_PROV_ACC As String,  _
                    ByVal PL_OTHER_EXP_LEAVE As String,  _
                    ByVal PL_OTHER_EXP_FA_WO As String,  _
                    ByVal PL_OTHER_EXP_UNREALOSS As String,  _
                    ByVal PL_OTHER_EXP_REALOSS As String,  _
                    ByVal PL_OTHER_EXP_INI_SUB As String,  _
                    ByVal PL_OTHER_EXP_CAP_EXP As String,  _
                    ByVal PL_OTHER_EXP_OTHERS As String,  _
                    ByVal PL_TOT_EXP As String,  _
                    ByVal PL_NET_PROFIT_LOSS As String,  _
                    ByVal PL_DISALLOWED_EXP As String,  _
                    ByVal PL_TOTALX As String,  _
                    ByVal PL_TOTALY As String,  _
                    ByVal PL_EXP_INTRESTRICT As String,  _
                    ByVal PL_OTH_BSIN_NONSOURCE As String,  _
                    ByVal PL_S60F As String,  _
                    ByVal PL_MAINBUZ As Integer,  _
                    ByVal PL_OTHER_EXP_ZAKAT As String,  _
                    ByVal PL_COMPANY As String,  _
                    ByVal PL_TREGROSS As String,  _
                    ByVal PL_TTAXDEDUCTION As String,  _
                    ByVal PL_TNETDEDUCTION As String,  _
                    ByVal PL_TECH_FEE As String,  _
                    ByVal PL_EMPL_STOCK As String,  _
                    ByVal PL_S60FA As String,  _
                    ByVal PL_OTHER_EXP_BALANCE As String,  _
                    ByVal PL_OTHER_EXRLOSSFOREIGNT As String,  _
                    ByVal PL_DIRECTORS_FEE As String,  _
                    ByVal PL_JKDM As String) As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
            Dim rowPROFIT_LOSS_ACCOUNT_REPORT_SCHRow As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PL_SALES, PL_OP_STK, PL_PURCHASES, PL_PRO_COST, PL_PRO_COST_DPC, PL_PRO_COST_OAE, PL_PRO_COST_ONAE, PL_PURCHASES_PRO_COST, PL_CLS_STK, PL_COGS, PL_GROSS_PROFIT, PL_OTH_BSIN, PL_OTH_BSIN_UNREALGT, PL_OTH_BSIN_REALGT, PL_OTH_BSIN_RENTAL, PL_OTH_BSIN_OTHER, PL_OTH_IN, PL_OTH_IN_DIVIDEND, PL_OTH_IN_INTEREST, PL_OTH_IN_RENTAL, PL_OTH_IN_ROYALTY, PL_OTH_IN_OTHER, PL_NONTAX_IN, PL_NONTAX_IN_FA_DISP, PL_NONTAX_IN_INV_DISP, PL_NONTAX_IN_EXM_DIV, PL_NONTAX_IN_FIR, PL_NONTAX_IN_REALG, PL_NONTAX_IN_UNREALG, PL_NONTAX_IN_INSU_COMP, PL_EXP_INT, PL_LAWYER_COST, PL_CONTRACT_EXP, PL_EXP_SALARY, PL_ROYALTY, PL_EXP_RENT, PL_EXP_MAINTENANCE, PL_RND, PL_ADVERT, PL_TRAVEL, PL_OTHER_EXP, PL_OTHER_EXP_DPC, PL_OTHER_EXP_DNT, PL_OTHER_EXP_DNT_APP, PL_OTHER_EXP_DNT_NAPP, PL_OTHER_EXP_FA_DISP, PL_OTHER_EXP_ENTM, PL_OTHER_EXP_ENTM_CLNT, PL_OTHER_EXP_ENTM_STFF, PL_OTHER_EXP_PENALTY, PL_OTHER_EXP_PROV_ACC, PL_OTHER_EXP_LEAVE, PL_OTHER_EXP_FA_WO, PL_OTHER_EXP_UNREALOSS, PL_OTHER_EXP_REALOSS, PL_OTHER_EXP_INI_SUB, PL_OTHER_EXP_CAP_EXP, PL_OTHER_EXP_OTHERS, PL_TOT_EXP, PL_NET_PROFIT_LOSS, PL_DISALLOWED_EXP, PL_TOTALX, PL_TOTALY, PL_EXP_INTRESTRICT, PL_OTH_BSIN_NONSOURCE, PL_S60F, PL_MAINBUZ, PL_OTHER_EXP_ZAKAT, PL_COMPANY, PL_TREGROSS, PL_TTAXDEDUCTION, PL_TNETDEDUCTION, PL_TECH_FEE, PL_EMPL_STOCK, PL_S60FA, PL_OTHER_EXP_BALANCE, PL_OTHER_EXRLOSSFOREIGNT, PL_DIRECTORS_FEE, PL_JKDM}
            If (Not (parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH) Is Nothing) Then
                columnValuesArray(0) = parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH(0)
            End If
            rowPROFIT_LOSS_ACCOUNT_REPORT_SCHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
            Return rowPROFIT_LOSS_ACCOUNT_REPORT_SCHRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPL_KEY = MyBase.Columns("PL_KEY")
            Me.columnPL_SALES = MyBase.Columns("PL_SALES")
            Me.columnPL_OP_STK = MyBase.Columns("PL_OP_STK")
            Me.columnPL_PURCHASES = MyBase.Columns("PL_PURCHASES")
            Me.columnPL_PRO_COST = MyBase.Columns("PL_PRO_COST")
            Me.columnPL_PRO_COST_DPC = MyBase.Columns("PL_PRO_COST_DPC")
            Me.columnPL_PRO_COST_OAE = MyBase.Columns("PL_PRO_COST_OAE")
            Me.columnPL_PRO_COST_ONAE = MyBase.Columns("PL_PRO_COST_ONAE")
            Me.columnPL_PURCHASES_PRO_COST = MyBase.Columns("PL_PURCHASES_PRO_COST")
            Me.columnPL_CLS_STK = MyBase.Columns("PL_CLS_STK")
            Me.columnPL_COGS = MyBase.Columns("PL_COGS")
            Me.columnPL_GROSS_PROFIT = MyBase.Columns("PL_GROSS_PROFIT")
            Me.columnPL_OTH_BSIN = MyBase.Columns("PL_OTH_BSIN")
            Me.columnPL_OTH_BSIN_UNREALGT = MyBase.Columns("PL_OTH_BSIN_UNREALGT")
            Me.columnPL_OTH_BSIN_REALGT = MyBase.Columns("PL_OTH_BSIN_REALGT")
            Me.columnPL_OTH_BSIN_RENTAL = MyBase.Columns("PL_OTH_BSIN_RENTAL")
            Me.columnPL_OTH_BSIN_OTHER = MyBase.Columns("PL_OTH_BSIN_OTHER")
            Me.columnPL_OTH_IN = MyBase.Columns("PL_OTH_IN")
            Me.columnPL_OTH_IN_DIVIDEND = MyBase.Columns("PL_OTH_IN_DIVIDEND")
            Me.columnPL_OTH_IN_INTEREST = MyBase.Columns("PL_OTH_IN_INTEREST")
            Me.columnPL_OTH_IN_RENTAL = MyBase.Columns("PL_OTH_IN_RENTAL")
            Me.columnPL_OTH_IN_ROYALTY = MyBase.Columns("PL_OTH_IN_ROYALTY")
            Me.columnPL_OTH_IN_OTHER = MyBase.Columns("PL_OTH_IN_OTHER")
            Me.columnPL_NONTAX_IN = MyBase.Columns("PL_NONTAX_IN")
            Me.columnPL_NONTAX_IN_FA_DISP = MyBase.Columns("PL_NONTAX_IN_FA_DISP")
            Me.columnPL_NONTAX_IN_INV_DISP = MyBase.Columns("PL_NONTAX_IN_INV_DISP")
            Me.columnPL_NONTAX_IN_EXM_DIV = MyBase.Columns("PL_NONTAX_IN_EXM_DIV")
            Me.columnPL_NONTAX_IN_FIR = MyBase.Columns("PL_NONTAX_IN_FIR")
            Me.columnPL_NONTAX_IN_REALG = MyBase.Columns("PL_NONTAX_IN_REALG")
            Me.columnPL_NONTAX_IN_UNREALG = MyBase.Columns("PL_NONTAX_IN_UNREALG")
            Me.columnPL_NONTAX_IN_INSU_COMP = MyBase.Columns("PL_NONTAX_IN_INSU_COMP")
            Me.columnPL_EXP_INT = MyBase.Columns("PL_EXP_INT")
            Me.columnPL_LAWYER_COST = MyBase.Columns("PL_LAWYER_COST")
            Me.columnPL_CONTRACT_EXP = MyBase.Columns("PL_CONTRACT_EXP")
            Me.columnPL_EXP_SALARY = MyBase.Columns("PL_EXP_SALARY")
            Me.columnPL_ROYALTY = MyBase.Columns("PL_ROYALTY")
            Me.columnPL_EXP_RENT = MyBase.Columns("PL_EXP_RENT")
            Me.columnPL_EXP_MAINTENANCE = MyBase.Columns("PL_EXP_MAINTENANCE")
            Me.columnPL_RND = MyBase.Columns("PL_RND")
            Me.columnPL_ADVERT = MyBase.Columns("PL_ADVERT")
            Me.columnPL_TRAVEL = MyBase.Columns("PL_TRAVEL")
            Me.columnPL_OTHER_EXP = MyBase.Columns("PL_OTHER_EXP")
            Me.columnPL_OTHER_EXP_DPC = MyBase.Columns("PL_OTHER_EXP_DPC")
            Me.columnPL_OTHER_EXP_DNT = MyBase.Columns("PL_OTHER_EXP_DNT")
            Me.columnPL_OTHER_EXP_DNT_APP = MyBase.Columns("PL_OTHER_EXP_DNT_APP")
            Me.columnPL_OTHER_EXP_DNT_NAPP = MyBase.Columns("PL_OTHER_EXP_DNT_NAPP")
            Me.columnPL_OTHER_EXP_FA_DISP = MyBase.Columns("PL_OTHER_EXP_FA_DISP")
            Me.columnPL_OTHER_EXP_ENTM = MyBase.Columns("PL_OTHER_EXP_ENTM")
            Me.columnPL_OTHER_EXP_ENTM_CLNT = MyBase.Columns("PL_OTHER_EXP_ENTM_CLNT")
            Me.columnPL_OTHER_EXP_ENTM_STFF = MyBase.Columns("PL_OTHER_EXP_ENTM_STFF")
            Me.columnPL_OTHER_EXP_PENALTY = MyBase.Columns("PL_OTHER_EXP_PENALTY")
            Me.columnPL_OTHER_EXP_PROV_ACC = MyBase.Columns("PL_OTHER_EXP_PROV_ACC")
            Me.columnPL_OTHER_EXP_LEAVE = MyBase.Columns("PL_OTHER_EXP_LEAVE")
            Me.columnPL_OTHER_EXP_FA_WO = MyBase.Columns("PL_OTHER_EXP_FA_WO")
            Me.columnPL_OTHER_EXP_UNREALOSS = MyBase.Columns("PL_OTHER_EXP_UNREALOSS")
            Me.columnPL_OTHER_EXP_REALOSS = MyBase.Columns("PL_OTHER_EXP_REALOSS")
            Me.columnPL_OTHER_EXP_INI_SUB = MyBase.Columns("PL_OTHER_EXP_INI_SUB")
            Me.columnPL_OTHER_EXP_CAP_EXP = MyBase.Columns("PL_OTHER_EXP_CAP_EXP")
            Me.columnPL_OTHER_EXP_OTHERS = MyBase.Columns("PL_OTHER_EXP_OTHERS")
            Me.columnPL_TOT_EXP = MyBase.Columns("PL_TOT_EXP")
            Me.columnPL_NET_PROFIT_LOSS = MyBase.Columns("PL_NET_PROFIT_LOSS")
            Me.columnPL_DISALLOWED_EXP = MyBase.Columns("PL_DISALLOWED_EXP")
            Me.columnPL_TOTALX = MyBase.Columns("PL_TOTALX")
            Me.columnPL_TOTALY = MyBase.Columns("PL_TOTALY")
            Me.columnPL_EXP_INTRESTRICT = MyBase.Columns("PL_EXP_INTRESTRICT")
            Me.columnPL_OTH_BSIN_NONSOURCE = MyBase.Columns("PL_OTH_BSIN_NONSOURCE")
            Me.columnPL_S60F = MyBase.Columns("PL_S60F")
            Me.columnPL_MAINBUZ = MyBase.Columns("PL_MAINBUZ")
            Me.columnPL_OTHER_EXP_ZAKAT = MyBase.Columns("PL_OTHER_EXP_ZAKAT")
            Me.columnPL_COMPANY = MyBase.Columns("PL_COMPANY")
            Me.columnPL_TREGROSS = MyBase.Columns("PL_TREGROSS")
            Me.columnPL_TTAXDEDUCTION = MyBase.Columns("PL_TTAXDEDUCTION")
            Me.columnPL_TNETDEDUCTION = MyBase.Columns("PL_TNETDEDUCTION")
            Me.columnPL_TECH_FEE = MyBase.Columns("PL_TECH_FEE")
            Me.columnPL_EMPL_STOCK = MyBase.Columns("PL_EMPL_STOCK")
            Me.columnPL_S60FA = MyBase.Columns("PL_S60FA")
            Me.columnPL_OTHER_EXP_BALANCE = MyBase.Columns("PL_OTHER_EXP_BALANCE")
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = MyBase.Columns("PL_OTHER_EXRLOSSFOREIGNT")
            Me.columnPL_DIRECTORS_FEE = MyBase.Columns("PL_DIRECTORS_FEE")
            Me.columnPL_JKDM = MyBase.Columns("PL_JKDM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPL_KEY = New Global.System.Data.DataColumn("PL_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_KEY)
            Me.columnPL_SALES = New Global.System.Data.DataColumn("PL_SALES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_SALES)
            Me.columnPL_OP_STK = New Global.System.Data.DataColumn("PL_OP_STK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OP_STK)
            Me.columnPL_PURCHASES = New Global.System.Data.DataColumn("PL_PURCHASES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES)
            Me.columnPL_PRO_COST = New Global.System.Data.DataColumn("PL_PRO_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST)
            Me.columnPL_PRO_COST_DPC = New Global.System.Data.DataColumn("PL_PRO_COST_DPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_DPC)
            Me.columnPL_PRO_COST_OAE = New Global.System.Data.DataColumn("PL_PRO_COST_OAE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_OAE)
            Me.columnPL_PRO_COST_ONAE = New Global.System.Data.DataColumn("PL_PRO_COST_ONAE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_ONAE)
            Me.columnPL_PURCHASES_PRO_COST = New Global.System.Data.DataColumn("PL_PURCHASES_PRO_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES_PRO_COST)
            Me.columnPL_CLS_STK = New Global.System.Data.DataColumn("PL_CLS_STK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CLS_STK)
            Me.columnPL_COGS = New Global.System.Data.DataColumn("PL_COGS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COGS)
            Me.columnPL_GROSS_PROFIT = New Global.System.Data.DataColumn("PL_GROSS_PROFIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_GROSS_PROFIT)
            Me.columnPL_OTH_BSIN = New Global.System.Data.DataColumn("PL_OTH_BSIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN)
            Me.columnPL_OTH_BSIN_UNREALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_UNREALGT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_UNREALGT)
            Me.columnPL_OTH_BSIN_REALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_REALGT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_REALGT)
            Me.columnPL_OTH_BSIN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_BSIN_RENTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_RENTAL)
            Me.columnPL_OTH_BSIN_OTHER = New Global.System.Data.DataColumn("PL_OTH_BSIN_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_OTHER)
            Me.columnPL_OTH_IN = New Global.System.Data.DataColumn("PL_OTH_IN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN)
            Me.columnPL_OTH_IN_DIVIDEND = New Global.System.Data.DataColumn("PL_OTH_IN_DIVIDEND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_DIVIDEND)
            Me.columnPL_OTH_IN_INTEREST = New Global.System.Data.DataColumn("PL_OTH_IN_INTEREST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_INTEREST)
            Me.columnPL_OTH_IN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_IN_RENTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_RENTAL)
            Me.columnPL_OTH_IN_ROYALTY = New Global.System.Data.DataColumn("PL_OTH_IN_ROYALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_ROYALTY)
            Me.columnPL_OTH_IN_OTHER = New Global.System.Data.DataColumn("PL_OTH_IN_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_OTHER)
            Me.columnPL_NONTAX_IN = New Global.System.Data.DataColumn("PL_NONTAX_IN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN)
            Me.columnPL_NONTAX_IN_FA_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_FA_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FA_DISP)
            Me.columnPL_NONTAX_IN_INV_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INV_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INV_DISP)
            Me.columnPL_NONTAX_IN_EXM_DIV = New Global.System.Data.DataColumn("PL_NONTAX_IN_EXM_DIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_EXM_DIV)
            Me.columnPL_NONTAX_IN_FIR = New Global.System.Data.DataColumn("PL_NONTAX_IN_FIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FIR)
            Me.columnPL_NONTAX_IN_REALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_REALG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_REALG)
            Me.columnPL_NONTAX_IN_UNREALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_UNREALG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_UNREALG)
            Me.columnPL_NONTAX_IN_INSU_COMP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INSU_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INSU_COMP)
            Me.columnPL_EXP_INT = New Global.System.Data.DataColumn("PL_EXP_INT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INT)
            Me.columnPL_LAWYER_COST = New Global.System.Data.DataColumn("PL_LAWYER_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_LAWYER_COST)
            Me.columnPL_CONTRACT_EXP = New Global.System.Data.DataColumn("PL_CONTRACT_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CONTRACT_EXP)
            Me.columnPL_EXP_SALARY = New Global.System.Data.DataColumn("PL_EXP_SALARY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_SALARY)
            Me.columnPL_ROYALTY = New Global.System.Data.DataColumn("PL_ROYALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ROYALTY)
            Me.columnPL_EXP_RENT = New Global.System.Data.DataColumn("PL_EXP_RENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_RENT)
            Me.columnPL_EXP_MAINTENANCE = New Global.System.Data.DataColumn("PL_EXP_MAINTENANCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_MAINTENANCE)
            Me.columnPL_RND = New Global.System.Data.DataColumn("PL_RND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_RND)
            Me.columnPL_ADVERT = New Global.System.Data.DataColumn("PL_ADVERT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ADVERT)
            Me.columnPL_TRAVEL = New Global.System.Data.DataColumn("PL_TRAVEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TRAVEL)
            Me.columnPL_OTHER_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP)
            Me.columnPL_OTHER_EXP_DPC = New Global.System.Data.DataColumn("PL_OTHER_EXP_DPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DPC)
            Me.columnPL_OTHER_EXP_DNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT)
            Me.columnPL_OTHER_EXP_DNT_APP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_APP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_APP)
            Me.columnPL_OTHER_EXP_DNT_NAPP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_NAPP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_NAPP)
            Me.columnPL_OTHER_EXP_FA_DISP = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_DISP)
            Me.columnPL_OTHER_EXP_ENTM = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM)
            Me.columnPL_OTHER_EXP_ENTM_CLNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_CLNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_CLNT)
            Me.columnPL_OTHER_EXP_ENTM_STFF = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_STFF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_STFF)
            Me.columnPL_OTHER_EXP_PENALTY = New Global.System.Data.DataColumn("PL_OTHER_EXP_PENALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PENALTY)
            Me.columnPL_OTHER_EXP_PROV_ACC = New Global.System.Data.DataColumn("PL_OTHER_EXP_PROV_ACC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PROV_ACC)
            Me.columnPL_OTHER_EXP_LEAVE = New Global.System.Data.DataColumn("PL_OTHER_EXP_LEAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_LEAVE)
            Me.columnPL_OTHER_EXP_FA_WO = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_WO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_WO)
            Me.columnPL_OTHER_EXP_UNREALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_UNREALOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_UNREALOSS)
            Me.columnPL_OTHER_EXP_REALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_REALOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_REALOSS)
            Me.columnPL_OTHER_EXP_INI_SUB = New Global.System.Data.DataColumn("PL_OTHER_EXP_INI_SUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_INI_SUB)
            Me.columnPL_OTHER_EXP_CAP_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP_CAP_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_CAP_EXP)
            Me.columnPL_OTHER_EXP_OTHERS = New Global.System.Data.DataColumn("PL_OTHER_EXP_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_OTHERS)
            Me.columnPL_TOT_EXP = New Global.System.Data.DataColumn("PL_TOT_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOT_EXP)
            Me.columnPL_NET_PROFIT_LOSS = New Global.System.Data.DataColumn("PL_NET_PROFIT_LOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NET_PROFIT_LOSS)
            Me.columnPL_DISALLOWED_EXP = New Global.System.Data.DataColumn("PL_DISALLOWED_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DISALLOWED_EXP)
            Me.columnPL_TOTALX = New Global.System.Data.DataColumn("PL_TOTALX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALX)
            Me.columnPL_TOTALY = New Global.System.Data.DataColumn("PL_TOTALY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALY)
            Me.columnPL_EXP_INTRESTRICT = New Global.System.Data.DataColumn("PL_EXP_INTRESTRICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INTRESTRICT)
            Me.columnPL_OTH_BSIN_NONSOURCE = New Global.System.Data.DataColumn("PL_OTH_BSIN_NONSOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_NONSOURCE)
            Me.columnPL_S60F = New Global.System.Data.DataColumn("PL_S60F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60F)
            Me.columnPL_MAINBUZ = New Global.System.Data.DataColumn("PL_MAINBUZ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_MAINBUZ)
            Me.columnPL_OTHER_EXP_ZAKAT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ZAKAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ZAKAT)
            Me.columnPL_COMPANY = New Global.System.Data.DataColumn("PL_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COMPANY)
            Me.columnPL_TREGROSS = New Global.System.Data.DataColumn("PL_TREGROSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TREGROSS)
            Me.columnPL_TTAXDEDUCTION = New Global.System.Data.DataColumn("PL_TTAXDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TTAXDEDUCTION)
            Me.columnPL_TNETDEDUCTION = New Global.System.Data.DataColumn("PL_TNETDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TNETDEDUCTION)
            Me.columnPL_TECH_FEE = New Global.System.Data.DataColumn("PL_TECH_FEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TECH_FEE)
            Me.columnPL_EMPL_STOCK = New Global.System.Data.DataColumn("PL_EMPL_STOCK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EMPL_STOCK)
            Me.columnPL_S60FA = New Global.System.Data.DataColumn("PL_S60FA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60FA)
            Me.columnPL_OTHER_EXP_BALANCE = New Global.System.Data.DataColumn("PL_OTHER_EXP_BALANCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_BALANCE)
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = New Global.System.Data.DataColumn("PL_OTHER_EXRLOSSFOREIGNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXRLOSSFOREIGNT)
            Me.columnPL_DIRECTORS_FEE = New Global.System.Data.DataColumn("PL_DIRECTORS_FEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DIRECTORS_FEE)
            Me.columnPL_JKDM = New Global.System.Data.DataColumn("PL_JKDM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_JKDM)
            Me.columnPL_KEY.AllowDBNull = false
            Me.columnPL_SALES.MaxLength = 25
            Me.columnPL_OP_STK.MaxLength = 25
            Me.columnPL_PURCHASES.MaxLength = 25
            Me.columnPL_PRO_COST.MaxLength = 25
            Me.columnPL_PRO_COST_DPC.MaxLength = 25
            Me.columnPL_PRO_COST_OAE.MaxLength = 25
            Me.columnPL_PRO_COST_ONAE.MaxLength = 25
            Me.columnPL_PURCHASES_PRO_COST.MaxLength = 25
            Me.columnPL_CLS_STK.MaxLength = 25
            Me.columnPL_COGS.MaxLength = 25
            Me.columnPL_GROSS_PROFIT.MaxLength = 25
            Me.columnPL_OTH_BSIN.MaxLength = 25
            Me.columnPL_OTH_BSIN_UNREALGT.MaxLength = 25
            Me.columnPL_OTH_BSIN_REALGT.MaxLength = 25
            Me.columnPL_OTH_BSIN_RENTAL.MaxLength = 25
            Me.columnPL_OTH_BSIN_OTHER.MaxLength = 25
            Me.columnPL_OTH_IN.MaxLength = 25
            Me.columnPL_OTH_IN_DIVIDEND.MaxLength = 25
            Me.columnPL_OTH_IN_INTEREST.MaxLength = 25
            Me.columnPL_OTH_IN_RENTAL.MaxLength = 25
            Me.columnPL_OTH_IN_ROYALTY.MaxLength = 25
            Me.columnPL_OTH_IN_OTHER.MaxLength = 25
            Me.columnPL_NONTAX_IN.MaxLength = 25
            Me.columnPL_NONTAX_IN_FA_DISP.MaxLength = 25
            Me.columnPL_NONTAX_IN_INV_DISP.MaxLength = 25
            Me.columnPL_NONTAX_IN_EXM_DIV.MaxLength = 25
            Me.columnPL_NONTAX_IN_FIR.MaxLength = 25
            Me.columnPL_NONTAX_IN_REALG.MaxLength = 25
            Me.columnPL_NONTAX_IN_UNREALG.MaxLength = 25
            Me.columnPL_NONTAX_IN_INSU_COMP.MaxLength = 25
            Me.columnPL_EXP_INT.MaxLength = 25
            Me.columnPL_LAWYER_COST.MaxLength = 25
            Me.columnPL_CONTRACT_EXP.MaxLength = 25
            Me.columnPL_EXP_SALARY.MaxLength = 25
            Me.columnPL_ROYALTY.MaxLength = 25
            Me.columnPL_EXP_RENT.MaxLength = 25
            Me.columnPL_EXP_MAINTENANCE.MaxLength = 25
            Me.columnPL_RND.MaxLength = 25
            Me.columnPL_ADVERT.MaxLength = 25
            Me.columnPL_TRAVEL.MaxLength = 25
            Me.columnPL_OTHER_EXP.MaxLength = 25
            Me.columnPL_OTHER_EXP_DPC.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT_APP.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT_NAPP.MaxLength = 25
            Me.columnPL_OTHER_EXP_FA_DISP.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM_CLNT.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM_STFF.MaxLength = 25
            Me.columnPL_OTHER_EXP_PENALTY.MaxLength = 25
            Me.columnPL_OTHER_EXP_PROV_ACC.MaxLength = 25
            Me.columnPL_OTHER_EXP_LEAVE.MaxLength = 25
            Me.columnPL_OTHER_EXP_FA_WO.MaxLength = 25
            Me.columnPL_OTHER_EXP_UNREALOSS.MaxLength = 25
            Me.columnPL_OTHER_EXP_REALOSS.MaxLength = 25
            Me.columnPL_OTHER_EXP_INI_SUB.MaxLength = 25
            Me.columnPL_OTHER_EXP_CAP_EXP.MaxLength = 25
            Me.columnPL_OTHER_EXP_OTHERS.MaxLength = 25
            Me.columnPL_TOT_EXP.MaxLength = 25
            Me.columnPL_NET_PROFIT_LOSS.MaxLength = 25
            Me.columnPL_DISALLOWED_EXP.MaxLength = 25
            Me.columnPL_TOTALX.MaxLength = 25
            Me.columnPL_TOTALY.MaxLength = 25
            Me.columnPL_EXP_INTRESTRICT.MaxLength = 25
            Me.columnPL_OTH_BSIN_NONSOURCE.MaxLength = 25
            Me.columnPL_S60F.MaxLength = 1
            Me.columnPL_OTHER_EXP_ZAKAT.MaxLength = 25
            Me.columnPL_COMPANY.MaxLength = 8
            Me.columnPL_TREGROSS.MaxLength = 25
            Me.columnPL_TTAXDEDUCTION.MaxLength = 25
            Me.columnPL_TNETDEDUCTION.MaxLength = 25
            Me.columnPL_TECH_FEE.MaxLength = 25
            Me.columnPL_EMPL_STOCK.MaxLength = 25
            Me.columnPL_S60FA.MaxLength = 1
            Me.columnPL_OTHER_EXP_BALANCE.MaxLength = 25
            Me.columnPL_OTHER_EXRLOSSFOREIGNT.MaxLength = 25
            Me.columnPL_DIRECTORS_FEE.MaxLength = 25
            Me.columnPL_JKDM.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_REPORT_SCHRow() As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_REPORT_SCHRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChanged(Me, New PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChanging(Me, New PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeleted(Me, New PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_SCHRowDeleting(Me, New PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_SCHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_REPORT_SCHRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
        
        Private columnPL_KEY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INTRESTRICT As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INT As Global.System.Data.DataColumn
        
        Private columnPL_LAWYER_COST As Global.System.Data.DataColumn
        
        Private columnPL_TECH_FEE As Global.System.Data.DataColumn
        
        Private columnPL_CONTRACT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_DIRECTORS_FEE As Global.System.Data.DataColumn
        
        Private columnPL_EXP_SALARY As Global.System.Data.DataColumn
        
        Private columnPL_EMPL_STOCK As Global.System.Data.DataColumn
        
        Private columnPL_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_RENT As Global.System.Data.DataColumn
        
        Private columnPL_EXP_MAINTENANCE As Global.System.Data.DataColumn
        
        Private columnPL_RND As Global.System.Data.DataColumn
        
        Private columnPL_ADVERT As Global.System.Data.DataColumn
        
        Private columnPL_TRAVEL As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_UNREALOSS As Global.System.Data.DataColumn
        
        Private columnPL_JKDM As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DPC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_APP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_NAPP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ZAKAT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_CLNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_STFF As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PENALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PROV_ACC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_LEAVE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_WO As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_REALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXRLOSSFOREIGNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_INI_SUB As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_CAP_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_OTHERS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTRESTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INTRESTRICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_LAWYER_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_LAWYER_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TECH_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TECH_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CONTRACT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CONTRACT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DIRECTORS_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DIRECTORS_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_SALARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_SALARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EMPL_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EMPL_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_RENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_RENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_MAINTENANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_MAINTENANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_RNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_RND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ADVERTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ADVERT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TRAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TRAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_UNREALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_UNREALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_JKDMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_JKDM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_APPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_APP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_NAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_NAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ZAKATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ZAKAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_CLNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_CLNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_STFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_STFF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PENALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PENALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PROV_ACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PROV_ACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_LEAVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_LEAVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_WO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_REALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_REALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXRLOSSFOREIGNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXRLOSSFOREIGNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_INI_SUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_INI_SUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_CAP_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_CAP_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChanging As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChanged As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeleting As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeleted As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow( _
                    ByVal parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT As PROFIT_LOSS_ACCOUNT_REPORTRow,  _
                    ByVal PL_EXP_INTRESTRICT As Boolean,  _
                    ByVal PL_EXP_INT As Boolean,  _
                    ByVal PL_LAWYER_COST As Boolean,  _
                    ByVal PL_TECH_FEE As Boolean,  _
                    ByVal PL_CONTRACT_EXP As Boolean,  _
                    ByVal PL_DIRECTORS_FEE As Boolean,  _
                    ByVal PL_EXP_SALARY As Boolean,  _
                    ByVal PL_EMPL_STOCK As Boolean,  _
                    ByVal PL_ROYALTY As Boolean,  _
                    ByVal PL_EXP_RENT As Boolean,  _
                    ByVal PL_EXP_MAINTENANCE As Boolean,  _
                    ByVal PL_RND As Boolean,  _
                    ByVal PL_ADVERT As Boolean,  _
                    ByVal PL_TRAVEL As Boolean,  _
                    ByVal PL_OTHER_EXP_UNREALOSS As Boolean,  _
                    ByVal PL_JKDM As Boolean,  _
                    ByVal PL_OTHER_EXP_DPC As Boolean,  _
                    ByVal PL_OTHER_EXP_DNT_APP As Boolean,  _
                    ByVal PL_OTHER_EXP_DNT_NAPP As Boolean,  _
                    ByVal PL_OTHER_EXP_ZAKAT As Boolean,  _
                    ByVal PL_OTHER_EXP_FA_DISP As Boolean,  _
                    ByVal PL_OTHER_EXP_ENTM_CLNT As Boolean,  _
                    ByVal PL_OTHER_EXP_ENTM_STFF As Boolean,  _
                    ByVal PL_OTHER_EXP_PENALTY As Boolean,  _
                    ByVal PL_OTHER_EXP_PROV_ACC As Boolean,  _
                    ByVal PL_OTHER_EXP_LEAVE As Boolean,  _
                    ByVal PL_OTHER_EXP_FA_WO As Boolean,  _
                    ByVal PL_OTHER_EXP_REALOSS As Boolean,  _
                    ByVal PL_OTHER_EXRLOSSFOREIGNT As Boolean,  _
                    ByVal PL_OTHER_EXP_INI_SUB As Boolean,  _
                    ByVal PL_OTHER_EXP_CAP_EXP As Boolean,  _
                    ByVal PL_OTHER_EXP_OTHERS As Boolean) As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
            Dim rowPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PL_EXP_INTRESTRICT, PL_EXP_INT, PL_LAWYER_COST, PL_TECH_FEE, PL_CONTRACT_EXP, PL_DIRECTORS_FEE, PL_EXP_SALARY, PL_EMPL_STOCK, PL_ROYALTY, PL_EXP_RENT, PL_EXP_MAINTENANCE, PL_RND, PL_ADVERT, PL_TRAVEL, PL_OTHER_EXP_UNREALOSS, PL_JKDM, PL_OTHER_EXP_DPC, PL_OTHER_EXP_DNT_APP, PL_OTHER_EXP_DNT_NAPP, PL_OTHER_EXP_ZAKAT, PL_OTHER_EXP_FA_DISP, PL_OTHER_EXP_ENTM_CLNT, PL_OTHER_EXP_ENTM_STFF, PL_OTHER_EXP_PENALTY, PL_OTHER_EXP_PROV_ACC, PL_OTHER_EXP_LEAVE, PL_OTHER_EXP_FA_WO, PL_OTHER_EXP_REALOSS, PL_OTHER_EXRLOSSFOREIGNT, PL_OTHER_EXP_INI_SUB, PL_OTHER_EXP_CAP_EXP, PL_OTHER_EXP_OTHERS}
            If (Not (parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT) Is Nothing) Then
                columnValuesArray(0) = parentPROFIT_LOSS_ACCOUNT_REPORTRowByFK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT(0)
            End If
            rowPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
            Return rowPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPL_KEY = MyBase.Columns("PL_KEY")
            Me.columnPL_EXP_INTRESTRICT = MyBase.Columns("PL_EXP_INTRESTRICT")
            Me.columnPL_EXP_INT = MyBase.Columns("PL_EXP_INT")
            Me.columnPL_LAWYER_COST = MyBase.Columns("PL_LAWYER_COST")
            Me.columnPL_TECH_FEE = MyBase.Columns("PL_TECH_FEE")
            Me.columnPL_CONTRACT_EXP = MyBase.Columns("PL_CONTRACT_EXP")
            Me.columnPL_DIRECTORS_FEE = MyBase.Columns("PL_DIRECTORS_FEE")
            Me.columnPL_EXP_SALARY = MyBase.Columns("PL_EXP_SALARY")
            Me.columnPL_EMPL_STOCK = MyBase.Columns("PL_EMPL_STOCK")
            Me.columnPL_ROYALTY = MyBase.Columns("PL_ROYALTY")
            Me.columnPL_EXP_RENT = MyBase.Columns("PL_EXP_RENT")
            Me.columnPL_EXP_MAINTENANCE = MyBase.Columns("PL_EXP_MAINTENANCE")
            Me.columnPL_RND = MyBase.Columns("PL_RND")
            Me.columnPL_ADVERT = MyBase.Columns("PL_ADVERT")
            Me.columnPL_TRAVEL = MyBase.Columns("PL_TRAVEL")
            Me.columnPL_OTHER_EXP_UNREALOSS = MyBase.Columns("PL_OTHER_EXP_UNREALOSS")
            Me.columnPL_JKDM = MyBase.Columns("PL_JKDM")
            Me.columnPL_OTHER_EXP_DPC = MyBase.Columns("PL_OTHER_EXP_DPC")
            Me.columnPL_OTHER_EXP_DNT_APP = MyBase.Columns("PL_OTHER_EXP_DNT_APP")
            Me.columnPL_OTHER_EXP_DNT_NAPP = MyBase.Columns("PL_OTHER_EXP_DNT_NAPP")
            Me.columnPL_OTHER_EXP_ZAKAT = MyBase.Columns("PL_OTHER_EXP_ZAKAT")
            Me.columnPL_OTHER_EXP_FA_DISP = MyBase.Columns("PL_OTHER_EXP_FA_DISP")
            Me.columnPL_OTHER_EXP_ENTM_CLNT = MyBase.Columns("PL_OTHER_EXP_ENTM_CLNT")
            Me.columnPL_OTHER_EXP_ENTM_STFF = MyBase.Columns("PL_OTHER_EXP_ENTM_STFF")
            Me.columnPL_OTHER_EXP_PENALTY = MyBase.Columns("PL_OTHER_EXP_PENALTY")
            Me.columnPL_OTHER_EXP_PROV_ACC = MyBase.Columns("PL_OTHER_EXP_PROV_ACC")
            Me.columnPL_OTHER_EXP_LEAVE = MyBase.Columns("PL_OTHER_EXP_LEAVE")
            Me.columnPL_OTHER_EXP_FA_WO = MyBase.Columns("PL_OTHER_EXP_FA_WO")
            Me.columnPL_OTHER_EXP_REALOSS = MyBase.Columns("PL_OTHER_EXP_REALOSS")
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = MyBase.Columns("PL_OTHER_EXRLOSSFOREIGNT")
            Me.columnPL_OTHER_EXP_INI_SUB = MyBase.Columns("PL_OTHER_EXP_INI_SUB")
            Me.columnPL_OTHER_EXP_CAP_EXP = MyBase.Columns("PL_OTHER_EXP_CAP_EXP")
            Me.columnPL_OTHER_EXP_OTHERS = MyBase.Columns("PL_OTHER_EXP_OTHERS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPL_KEY = New Global.System.Data.DataColumn("PL_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_KEY)
            Me.columnPL_EXP_INTRESTRICT = New Global.System.Data.DataColumn("PL_EXP_INTRESTRICT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INTRESTRICT)
            Me.columnPL_EXP_INT = New Global.System.Data.DataColumn("PL_EXP_INT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INT)
            Me.columnPL_LAWYER_COST = New Global.System.Data.DataColumn("PL_LAWYER_COST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_LAWYER_COST)
            Me.columnPL_TECH_FEE = New Global.System.Data.DataColumn("PL_TECH_FEE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TECH_FEE)
            Me.columnPL_CONTRACT_EXP = New Global.System.Data.DataColumn("PL_CONTRACT_EXP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CONTRACT_EXP)
            Me.columnPL_DIRECTORS_FEE = New Global.System.Data.DataColumn("PL_DIRECTORS_FEE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DIRECTORS_FEE)
            Me.columnPL_EXP_SALARY = New Global.System.Data.DataColumn("PL_EXP_SALARY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_SALARY)
            Me.columnPL_EMPL_STOCK = New Global.System.Data.DataColumn("PL_EMPL_STOCK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EMPL_STOCK)
            Me.columnPL_ROYALTY = New Global.System.Data.DataColumn("PL_ROYALTY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ROYALTY)
            Me.columnPL_EXP_RENT = New Global.System.Data.DataColumn("PL_EXP_RENT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_RENT)
            Me.columnPL_EXP_MAINTENANCE = New Global.System.Data.DataColumn("PL_EXP_MAINTENANCE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_MAINTENANCE)
            Me.columnPL_RND = New Global.System.Data.DataColumn("PL_RND", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_RND)
            Me.columnPL_ADVERT = New Global.System.Data.DataColumn("PL_ADVERT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ADVERT)
            Me.columnPL_TRAVEL = New Global.System.Data.DataColumn("PL_TRAVEL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TRAVEL)
            Me.columnPL_OTHER_EXP_UNREALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_UNREALOSS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_UNREALOSS)
            Me.columnPL_JKDM = New Global.System.Data.DataColumn("PL_JKDM", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_JKDM)
            Me.columnPL_OTHER_EXP_DPC = New Global.System.Data.DataColumn("PL_OTHER_EXP_DPC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DPC)
            Me.columnPL_OTHER_EXP_DNT_APP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_APP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_APP)
            Me.columnPL_OTHER_EXP_DNT_NAPP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_NAPP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_NAPP)
            Me.columnPL_OTHER_EXP_ZAKAT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ZAKAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ZAKAT)
            Me.columnPL_OTHER_EXP_FA_DISP = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_DISP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_DISP)
            Me.columnPL_OTHER_EXP_ENTM_CLNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_CLNT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_CLNT)
            Me.columnPL_OTHER_EXP_ENTM_STFF = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_STFF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_STFF)
            Me.columnPL_OTHER_EXP_PENALTY = New Global.System.Data.DataColumn("PL_OTHER_EXP_PENALTY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PENALTY)
            Me.columnPL_OTHER_EXP_PROV_ACC = New Global.System.Data.DataColumn("PL_OTHER_EXP_PROV_ACC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PROV_ACC)
            Me.columnPL_OTHER_EXP_LEAVE = New Global.System.Data.DataColumn("PL_OTHER_EXP_LEAVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_LEAVE)
            Me.columnPL_OTHER_EXP_FA_WO = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_WO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_WO)
            Me.columnPL_OTHER_EXP_REALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_REALOSS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_REALOSS)
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = New Global.System.Data.DataColumn("PL_OTHER_EXRLOSSFOREIGNT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXRLOSSFOREIGNT)
            Me.columnPL_OTHER_EXP_INI_SUB = New Global.System.Data.DataColumn("PL_OTHER_EXP_INI_SUB", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_INI_SUB)
            Me.columnPL_OTHER_EXP_CAP_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP_CAP_EXP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_CAP_EXP)
            Me.columnPL_OTHER_EXP_OTHERS = New Global.System.Data.DataColumn("PL_OTHER_EXP_OTHERS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_OTHERS)
            Me.columnPL_KEY.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow() As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChanged(Me, New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChanging(Me, New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeleted(Me, New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowDeleting(Me, New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTEDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_NOTERow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnParent_KEY As Global.System.Data.DataColumn
        
        Private columnDataID As Global.System.Data.DataColumn
        
        Private columnData_SubID As Global.System.Data.DataColumn
        
        Private columnisParent As Global.System.Data.DataColumn
        
        Private columnKeyName As Global.System.Data.DataColumn
        
        Private columnTypeNote As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnTitleFront As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_NOTE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Parent_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParent_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DataIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Data_SubIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnData_SubID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isParentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisParent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TitleFrontColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitleFront
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_NOTERow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_NOTERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTERowChanging As PROFIT_LOSS_ACCOUNT_NOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTERowChanged As PROFIT_LOSS_ACCOUNT_NOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTERowDeleting As PROFIT_LOSS_ACCOUNT_NOTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTERowDeleted As PROFIT_LOSS_ACCOUNT_NOTERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_NOTERow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_NOTERow(ByVal Title As String, ByVal Parent_KEY As Integer, ByVal DataID As Integer, ByVal Data_SubID As Integer, ByVal isParent As Boolean, ByVal parentPNL_TABLE_INFORowByFK_NOTE As PNL_TABLE_INFORow, ByVal TypeNote As Integer, ByVal Note As String, ByVal TitleFront As String) As PROFIT_LOSS_ACCOUNT_NOTERow
            Dim rowPROFIT_LOSS_ACCOUNT_NOTERow As PROFIT_LOSS_ACCOUNT_NOTERow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Title, Parent_KEY, DataID, Data_SubID, isParent, Nothing, TypeNote, Note, TitleFront}
            If (Not (parentPNL_TABLE_INFORowByFK_NOTE) Is Nothing) Then
                columnValuesArray(6) = parentPNL_TABLE_INFORowByFK_NOTE(1)
            End If
            rowPROFIT_LOSS_ACCOUNT_NOTERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_NOTERow)
            Return rowPROFIT_LOSS_ACCOUNT_NOTERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_NOTEDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_NOTEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_NOTEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnParent_KEY = MyBase.Columns("Parent_KEY")
            Me.columnDataID = MyBase.Columns("DataID")
            Me.columnData_SubID = MyBase.Columns("Data_SubID")
            Me.columnisParent = MyBase.Columns("isParent")
            Me.columnKeyName = MyBase.Columns("KeyName")
            Me.columnTypeNote = MyBase.Columns("TypeNote")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnTitleFront = MyBase.Columns("TitleFront")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnParent_KEY = New Global.System.Data.DataColumn("Parent_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParent_KEY)
            Me.columnDataID = New Global.System.Data.DataColumn("DataID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataID)
            Me.columnData_SubID = New Global.System.Data.DataColumn("Data_SubID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnData_SubID)
            Me.columnisParent = New Global.System.Data.DataColumn("isParent", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisParent)
            Me.columnKeyName = New Global.System.Data.DataColumn("KeyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyName)
            Me.columnTypeNote = New Global.System.Data.DataColumn("TypeNote", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeNote)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnTitleFront = New Global.System.Data.DataColumn("TitleFront", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitleFront)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, false))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnTitle.MaxLength = 250
            Me.columnKeyName.MaxLength = 300
            Me.columnNote.MaxLength = 4000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_NOTERow() As PROFIT_LOSS_ACCOUNT_NOTERow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_NOTERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_NOTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTERowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTERowChanged(Me, New PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTERowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTERowChanging(Me, New PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTERowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTERowDeleted(Me, New PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTERowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTERowDeleting(Me, New PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_NOTERow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_NOTEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnParentID As Global.System.Data.DataColumn
        
        Private columnCol1_Name As Global.System.Data.DataColumn
        
        Private columnCol1_Val As Global.System.Data.DataColumn
        
        Private columnCol2_Name As Global.System.Data.DataColumn
        
        Private columnCol2_Val As Global.System.Data.DataColumn
        
        Private columnCol3_Name As Global.System.Data.DataColumn
        
        Private columnCol3_Val As Global.System.Data.DataColumn
        
        Private columnCol4_Name As Global.System.Data.DataColumn
        
        Private columnCol4_Val As Global.System.Data.DataColumn
        
        Private columnCol5_Name As Global.System.Data.DataColumn
        
        Private columnCol5_Val As Global.System.Data.DataColumn
        
        Private columnCol6_Name As Global.System.Data.DataColumn
        
        Private columnCol6_Val As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_NOTE_COLUMN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParentIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col1_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol1_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col1_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol1_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col2_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol2_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col2_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol2_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col3_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol3_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col3_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol3_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col4_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol4_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col4_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol4_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col5_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol5_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col5_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol5_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col6_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol6_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Col6_ValColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol6_Val
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChanging As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChanged As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeleting As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeleted As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow(ByVal parentPROFIT_LOSS_ACCOUNT_NOTERowByFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN As PROFIT_LOSS_ACCOUNT_NOTERow, ByVal Col1_Name As String, ByVal Col1_Val As String, ByVal Col2_Name As String, ByVal Col2_Val As String, ByVal Col3_Name As String, ByVal Col3_Val As String, ByVal Col4_Name As String, ByVal Col4_Val As String, ByVal Col5_Name As String, ByVal Col5_Val As String, ByVal Col6_Name As String, ByVal Col6_Val As String) As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
            Dim rowPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, Col1_Name, Col1_Val, Col2_Name, Col2_Val, Col3_Name, Col3_Val, Col4_Name, Col4_Val, Col5_Name, Col5_Val, Col6_Name, Col6_Val}
            If (Not (parentPROFIT_LOSS_ACCOUNT_NOTERowByFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN) Is Nothing) Then
                columnValuesArray(1) = parentPROFIT_LOSS_ACCOUNT_NOTERowByFK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN(0)
            End If
            rowPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
            Return rowPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnParentID = MyBase.Columns("ParentID")
            Me.columnCol1_Name = MyBase.Columns("Col1_Name")
            Me.columnCol1_Val = MyBase.Columns("Col1_Val")
            Me.columnCol2_Name = MyBase.Columns("Col2_Name")
            Me.columnCol2_Val = MyBase.Columns("Col2_Val")
            Me.columnCol3_Name = MyBase.Columns("Col3_Name")
            Me.columnCol3_Val = MyBase.Columns("Col3_Val")
            Me.columnCol4_Name = MyBase.Columns("Col4_Name")
            Me.columnCol4_Val = MyBase.Columns("Col4_Val")
            Me.columnCol5_Name = MyBase.Columns("Col5_Name")
            Me.columnCol5_Val = MyBase.Columns("Col5_Val")
            Me.columnCol6_Name = MyBase.Columns("Col6_Name")
            Me.columnCol6_Val = MyBase.Columns("Col6_Val")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnParentID = New Global.System.Data.DataColumn("ParentID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentID)
            Me.columnCol1_Name = New Global.System.Data.DataColumn("Col1_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol1_Name)
            Me.columnCol1_Val = New Global.System.Data.DataColumn("Col1_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol1_Val)
            Me.columnCol2_Name = New Global.System.Data.DataColumn("Col2_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol2_Name)
            Me.columnCol2_Val = New Global.System.Data.DataColumn("Col2_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol2_Val)
            Me.columnCol3_Name = New Global.System.Data.DataColumn("Col3_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol3_Name)
            Me.columnCol3_Val = New Global.System.Data.DataColumn("Col3_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol3_Val)
            Me.columnCol4_Name = New Global.System.Data.DataColumn("Col4_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol4_Name)
            Me.columnCol4_Val = New Global.System.Data.DataColumn("Col4_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol4_Val)
            Me.columnCol5_Name = New Global.System.Data.DataColumn("Col5_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol5_Name)
            Me.columnCol5_Val = New Global.System.Data.DataColumn("Col5_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol5_Val)
            Me.columnCol6_Name = New Global.System.Data.DataColumn("Col6_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol6_Name)
            Me.columnCol6_Val = New Global.System.Data.DataColumn("Col6_Val", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol6_Val)
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnParentID.AllowDBNull = false
            Me.columnCol1_Name.MaxLength = 50
            Me.columnCol1_Val.MaxLength = 250
            Me.columnCol2_Name.MaxLength = 50
            Me.columnCol2_Val.MaxLength = 50
            Me.columnCol3_Name.MaxLength = 50
            Me.columnCol3_Val.MaxLength = 50
            Me.columnCol4_Name.MaxLength = 50
            Me.columnCol4_Val.MaxLength = 50
            Me.columnCol5_Name.MaxLength = 50
            Me.columnCol5_Val.MaxLength = 50
            Me.columnCol6_Name.MaxLength = 50
            Me.columnCol6_Val.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow() As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChanged(Me, New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChanging(Me, New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeleted(Me, New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowDeleting(Me, New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnParentID As Global.System.Data.DataColumn
        
        Private columnAttachment As Global.System.Data.DataColumn
        
        Private columnExtension As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParentIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParentID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AttachmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttachment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExtensionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExtension
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChanging As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChanged As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeleting As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeleted As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow(ByVal ParentID As Decimal, ByVal Attachment() As Byte, ByVal Extension As String) As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
            Dim rowPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ParentID, Attachment, Extension}
            rowPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
            Return rowPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnParentID = MyBase.Columns("ParentID")
            Me.columnAttachment = MyBase.Columns("Attachment")
            Me.columnExtension = MyBase.Columns("Extension")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnParentID = New Global.System.Data.DataColumn("ParentID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParentID)
            Me.columnAttachment = New Global.System.Data.DataColumn("Attachment", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttachment)
            Me.columnExtension = New Global.System.Data.DataColumn("Extension", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExtension)
            Me.columnID.AutoIncrement = true
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnParentID.AllowDBNull = false
            Me.columnExtension.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow() As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChanged(Me, New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChanging(Me, New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeleted(Me, New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowDeleting(Me, New PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
        
        Private columnPL_KEY As Global.System.Data.DataColumn
        
        Private columnPL_SALES As Global.System.Data.DataColumn
        
        Private columnPL_OP_STK As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_DPC As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_OAE As Global.System.Data.DataColumn
        
        Private columnPL_PRO_COST_ONAE As Global.System.Data.DataColumn
        
        Private columnPL_PURCHASES_PRO_COST As Global.System.Data.DataColumn
        
        Private columnPL_CLS_STK As Global.System.Data.DataColumn
        
        Private columnPL_COGS As Global.System.Data.DataColumn
        
        Private columnPL_GROSS_PROFIT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_UNREALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_REALGT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_DIVIDEND As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_INTEREST As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_RENTAL As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTH_IN_OTHER As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INV_DISP As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_EXM_DIV As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_FIR As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_REALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_UNREALG As Global.System.Data.DataColumn
        
        Private columnPL_NONTAX_IN_INSU_COMP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INT As Global.System.Data.DataColumn
        
        Private columnPL_LAWYER_COST As Global.System.Data.DataColumn
        
        Private columnPL_CONTRACT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_EXP_SALARY As Global.System.Data.DataColumn
        
        Private columnPL_ROYALTY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_RENT As Global.System.Data.DataColumn
        
        Private columnPL_EXP_MAINTENANCE As Global.System.Data.DataColumn
        
        Private columnPL_RND As Global.System.Data.DataColumn
        
        Private columnPL_ADVERT As Global.System.Data.DataColumn
        
        Private columnPL_TRAVEL As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DPC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_APP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_DNT_NAPP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_DISP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_CLNT As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ENTM_STFF As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PENALTY As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_PROV_ACC As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_LEAVE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_FA_WO As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_UNREALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_REALOSS As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_INI_SUB As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_CAP_EXP As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_OTHERS As Global.System.Data.DataColumn
        
        Private columnPL_TOT_EXP As Global.System.Data.DataColumn
        
        Private columnPL_NET_PROFIT_LOSS As Global.System.Data.DataColumn
        
        Private columnPL_DISALLOWED_EXP As Global.System.Data.DataColumn
        
        Private columnPL_TOTALX As Global.System.Data.DataColumn
        
        Private columnPL_TOTALY As Global.System.Data.DataColumn
        
        Private columnPL_EXP_INTRESTRICT As Global.System.Data.DataColumn
        
        Private columnPL_OTH_BSIN_NONSOURCE As Global.System.Data.DataColumn
        
        Private columnPL_S60F As Global.System.Data.DataColumn
        
        Private columnPL_MAINBUZ As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_ZAKAT As Global.System.Data.DataColumn
        
        Private columnPL_COMPANY As Global.System.Data.DataColumn
        
        Private columnPL_TREGROSS As Global.System.Data.DataColumn
        
        Private columnPL_TTAXDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TNETDEDUCTION As Global.System.Data.DataColumn
        
        Private columnPL_TECH_FEE As Global.System.Data.DataColumn
        
        Private columnPL_EMPL_STOCK As Global.System.Data.DataColumn
        
        Private columnPL_S60FA As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXP_BALANCE As Global.System.Data.DataColumn
        
        Private columnPL_OTHER_EXRLOSSFOREIGNT As Global.System.Data.DataColumn
        
        Private columnPL_DIRECTORS_FEE As Global.System.Data.DataColumn
        
        Private columnPL_JKDM As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_SALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_SALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OP_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OP_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_OAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_OAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PRO_COST_ONAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PRO_COST_ONAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_PURCHASES_PRO_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_PURCHASES_PRO_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CLS_STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CLS_STK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COGSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COGS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_GROSS_PROFITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_GROSS_PROFIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_UNREALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_UNREALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_REALGTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_REALGT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_DIVIDENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_DIVIDEND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_INTERESTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_INTEREST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_RENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_RENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_IN_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_IN_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_INColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INV_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INV_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_EXM_DIVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_EXM_DIV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_FIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_FIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_REALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_REALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_UNREALGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_UNREALG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NONTAX_IN_INSU_COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NONTAX_IN_INSU_COMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_LAWYER_COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_LAWYER_COST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_CONTRACT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_CONTRACT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_SALARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_SALARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ROYALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ROYALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_RENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_RENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_MAINTENANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_MAINTENANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_RNDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_RND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_ADVERTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_ADVERT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TRAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TRAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DPCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DPC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_APPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_APP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_DNT_NAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_DNT_NAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_DISPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_DISP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_CLNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_CLNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ENTM_STFFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ENTM_STFF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PENALTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PENALTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_PROV_ACCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_PROV_ACC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_LEAVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_LEAVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_FA_WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_FA_WO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_UNREALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_UNREALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_REALOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_REALOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_INI_SUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_INI_SUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_CAP_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_CAP_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOT_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOT_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_NET_PROFIT_LOSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_NET_PROFIT_LOSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DISALLOWED_EXPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DISALLOWED_EXP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TOTALYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TOTALY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EXP_INTRESTRICTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EXP_INTRESTRICT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTH_BSIN_NONSOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTH_BSIN_NONSOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_MAINBUZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_MAINBUZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_ZAKATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_ZAKAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TREGROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TREGROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TTAXDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TTAXDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TNETDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TNETDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_TECH_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_TECH_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_EMPL_STOCKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_EMPL_STOCK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_S60FAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_S60FA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXP_BALANCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXP_BALANCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_OTHER_EXRLOSSFOREIGNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_OTHER_EXRLOSSFOREIGNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_DIRECTORS_FEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_DIRECTORS_FEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PL_JKDMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPL_JKDM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
            Get
                Return CType(Me.Rows(index),PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChanging As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChanged As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeleting As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeleted As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow( _
                    ByVal PL_KEY As Integer,  _
                    ByVal PL_SALES As String,  _
                    ByVal PL_OP_STK As String,  _
                    ByVal PL_PURCHASES As String,  _
                    ByVal PL_PRO_COST As String,  _
                    ByVal PL_PRO_COST_DPC As String,  _
                    ByVal PL_PRO_COST_OAE As String,  _
                    ByVal PL_PRO_COST_ONAE As String,  _
                    ByVal PL_PURCHASES_PRO_COST As String,  _
                    ByVal PL_CLS_STK As String,  _
                    ByVal PL_COGS As String,  _
                    ByVal PL_GROSS_PROFIT As String,  _
                    ByVal PL_OTH_BSIN As String,  _
                    ByVal PL_OTH_BSIN_UNREALGT As String,  _
                    ByVal PL_OTH_BSIN_REALGT As String,  _
                    ByVal PL_OTH_BSIN_RENTAL As String,  _
                    ByVal PL_OTH_BSIN_OTHER As String,  _
                    ByVal PL_OTH_IN As String,  _
                    ByVal PL_OTH_IN_DIVIDEND As String,  _
                    ByVal PL_OTH_IN_INTEREST As String,  _
                    ByVal PL_OTH_IN_RENTAL As String,  _
                    ByVal PL_OTH_IN_ROYALTY As String,  _
                    ByVal PL_OTH_IN_OTHER As String,  _
                    ByVal PL_NONTAX_IN As String,  _
                    ByVal PL_NONTAX_IN_FA_DISP As String,  _
                    ByVal PL_NONTAX_IN_INV_DISP As String,  _
                    ByVal PL_NONTAX_IN_EXM_DIV As String,  _
                    ByVal PL_NONTAX_IN_FIR As String,  _
                    ByVal PL_NONTAX_IN_REALG As String,  _
                    ByVal PL_NONTAX_IN_UNREALG As String,  _
                    ByVal PL_NONTAX_IN_INSU_COMP As String,  _
                    ByVal PL_EXP_INT As String,  _
                    ByVal PL_LAWYER_COST As String,  _
                    ByVal PL_CONTRACT_EXP As String,  _
                    ByVal PL_EXP_SALARY As String,  _
                    ByVal PL_ROYALTY As String,  _
                    ByVal PL_EXP_RENT As String,  _
                    ByVal PL_EXP_MAINTENANCE As String,  _
                    ByVal PL_RND As String,  _
                    ByVal PL_ADVERT As String,  _
                    ByVal PL_TRAVEL As String,  _
                    ByVal PL_OTHER_EXP As String,  _
                    ByVal PL_OTHER_EXP_DPC As String,  _
                    ByVal PL_OTHER_EXP_DNT As String,  _
                    ByVal PL_OTHER_EXP_DNT_APP As String,  _
                    ByVal PL_OTHER_EXP_DNT_NAPP As String,  _
                    ByVal PL_OTHER_EXP_FA_DISP As String,  _
                    ByVal PL_OTHER_EXP_ENTM As String,  _
                    ByVal PL_OTHER_EXP_ENTM_CLNT As String,  _
                    ByVal PL_OTHER_EXP_ENTM_STFF As String,  _
                    ByVal PL_OTHER_EXP_PENALTY As String,  _
                    ByVal PL_OTHER_EXP_PROV_ACC As String,  _
                    ByVal PL_OTHER_EXP_LEAVE As String,  _
                    ByVal PL_OTHER_EXP_FA_WO As String,  _
                    ByVal PL_OTHER_EXP_UNREALOSS As String,  _
                    ByVal PL_OTHER_EXP_REALOSS As String,  _
                    ByVal PL_OTHER_EXP_INI_SUB As String,  _
                    ByVal PL_OTHER_EXP_CAP_EXP As String,  _
                    ByVal PL_OTHER_EXP_OTHERS As String,  _
                    ByVal PL_TOT_EXP As String,  _
                    ByVal PL_NET_PROFIT_LOSS As String,  _
                    ByVal PL_DISALLOWED_EXP As String,  _
                    ByVal PL_TOTALX As String,  _
                    ByVal PL_TOTALY As String,  _
                    ByVal PL_EXP_INTRESTRICT As String,  _
                    ByVal PL_OTH_BSIN_NONSOURCE As String,  _
                    ByVal PL_S60F As String,  _
                    ByVal PL_MAINBUZ As Integer,  _
                    ByVal PL_OTHER_EXP_ZAKAT As String,  _
                    ByVal PL_COMPANY As String,  _
                    ByVal PL_TREGROSS As String,  _
                    ByVal PL_TTAXDEDUCTION As String,  _
                    ByVal PL_TNETDEDUCTION As String,  _
                    ByVal PL_TECH_FEE As String,  _
                    ByVal PL_EMPL_STOCK As String,  _
                    ByVal PL_S60FA As String,  _
                    ByVal PL_OTHER_EXP_BALANCE As String,  _
                    ByVal PL_OTHER_EXRLOSSFOREIGNT As String,  _
                    ByVal PL_DIRECTORS_FEE As String,  _
                    ByVal PL_JKDM As String) As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
            Dim rowPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow = CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
            Dim columnValuesArray() As Object = New Object() {PL_KEY, PL_SALES, PL_OP_STK, PL_PURCHASES, PL_PRO_COST, PL_PRO_COST_DPC, PL_PRO_COST_OAE, PL_PRO_COST_ONAE, PL_PURCHASES_PRO_COST, PL_CLS_STK, PL_COGS, PL_GROSS_PROFIT, PL_OTH_BSIN, PL_OTH_BSIN_UNREALGT, PL_OTH_BSIN_REALGT, PL_OTH_BSIN_RENTAL, PL_OTH_BSIN_OTHER, PL_OTH_IN, PL_OTH_IN_DIVIDEND, PL_OTH_IN_INTEREST, PL_OTH_IN_RENTAL, PL_OTH_IN_ROYALTY, PL_OTH_IN_OTHER, PL_NONTAX_IN, PL_NONTAX_IN_FA_DISP, PL_NONTAX_IN_INV_DISP, PL_NONTAX_IN_EXM_DIV, PL_NONTAX_IN_FIR, PL_NONTAX_IN_REALG, PL_NONTAX_IN_UNREALG, PL_NONTAX_IN_INSU_COMP, PL_EXP_INT, PL_LAWYER_COST, PL_CONTRACT_EXP, PL_EXP_SALARY, PL_ROYALTY, PL_EXP_RENT, PL_EXP_MAINTENANCE, PL_RND, PL_ADVERT, PL_TRAVEL, PL_OTHER_EXP, PL_OTHER_EXP_DPC, PL_OTHER_EXP_DNT, PL_OTHER_EXP_DNT_APP, PL_OTHER_EXP_DNT_NAPP, PL_OTHER_EXP_FA_DISP, PL_OTHER_EXP_ENTM, PL_OTHER_EXP_ENTM_CLNT, PL_OTHER_EXP_ENTM_STFF, PL_OTHER_EXP_PENALTY, PL_OTHER_EXP_PROV_ACC, PL_OTHER_EXP_LEAVE, PL_OTHER_EXP_FA_WO, PL_OTHER_EXP_UNREALOSS, PL_OTHER_EXP_REALOSS, PL_OTHER_EXP_INI_SUB, PL_OTHER_EXP_CAP_EXP, PL_OTHER_EXP_OTHERS, PL_TOT_EXP, PL_NET_PROFIT_LOSS, PL_DISALLOWED_EXP, PL_TOTALX, PL_TOTALY, PL_EXP_INTRESTRICT, PL_OTH_BSIN_NONSOURCE, PL_S60F, PL_MAINBUZ, PL_OTHER_EXP_ZAKAT, PL_COMPANY, PL_TREGROSS, PL_TTAXDEDUCTION, PL_TNETDEDUCTION, PL_TECH_FEE, PL_EMPL_STOCK, PL_S60FA, PL_OTHER_EXP_BALANCE, PL_OTHER_EXRLOSSFOREIGNT, PL_DIRECTORS_FEE, PL_JKDM}
            rowPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
            Return rowPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable = CType(MyBase.Clone,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPL_KEY = MyBase.Columns("PL_KEY")
            Me.columnPL_SALES = MyBase.Columns("PL_SALES")
            Me.columnPL_OP_STK = MyBase.Columns("PL_OP_STK")
            Me.columnPL_PURCHASES = MyBase.Columns("PL_PURCHASES")
            Me.columnPL_PRO_COST = MyBase.Columns("PL_PRO_COST")
            Me.columnPL_PRO_COST_DPC = MyBase.Columns("PL_PRO_COST_DPC")
            Me.columnPL_PRO_COST_OAE = MyBase.Columns("PL_PRO_COST_OAE")
            Me.columnPL_PRO_COST_ONAE = MyBase.Columns("PL_PRO_COST_ONAE")
            Me.columnPL_PURCHASES_PRO_COST = MyBase.Columns("PL_PURCHASES_PRO_COST")
            Me.columnPL_CLS_STK = MyBase.Columns("PL_CLS_STK")
            Me.columnPL_COGS = MyBase.Columns("PL_COGS")
            Me.columnPL_GROSS_PROFIT = MyBase.Columns("PL_GROSS_PROFIT")
            Me.columnPL_OTH_BSIN = MyBase.Columns("PL_OTH_BSIN")
            Me.columnPL_OTH_BSIN_UNREALGT = MyBase.Columns("PL_OTH_BSIN_UNREALGT")
            Me.columnPL_OTH_BSIN_REALGT = MyBase.Columns("PL_OTH_BSIN_REALGT")
            Me.columnPL_OTH_BSIN_RENTAL = MyBase.Columns("PL_OTH_BSIN_RENTAL")
            Me.columnPL_OTH_BSIN_OTHER = MyBase.Columns("PL_OTH_BSIN_OTHER")
            Me.columnPL_OTH_IN = MyBase.Columns("PL_OTH_IN")
            Me.columnPL_OTH_IN_DIVIDEND = MyBase.Columns("PL_OTH_IN_DIVIDEND")
            Me.columnPL_OTH_IN_INTEREST = MyBase.Columns("PL_OTH_IN_INTEREST")
            Me.columnPL_OTH_IN_RENTAL = MyBase.Columns("PL_OTH_IN_RENTAL")
            Me.columnPL_OTH_IN_ROYALTY = MyBase.Columns("PL_OTH_IN_ROYALTY")
            Me.columnPL_OTH_IN_OTHER = MyBase.Columns("PL_OTH_IN_OTHER")
            Me.columnPL_NONTAX_IN = MyBase.Columns("PL_NONTAX_IN")
            Me.columnPL_NONTAX_IN_FA_DISP = MyBase.Columns("PL_NONTAX_IN_FA_DISP")
            Me.columnPL_NONTAX_IN_INV_DISP = MyBase.Columns("PL_NONTAX_IN_INV_DISP")
            Me.columnPL_NONTAX_IN_EXM_DIV = MyBase.Columns("PL_NONTAX_IN_EXM_DIV")
            Me.columnPL_NONTAX_IN_FIR = MyBase.Columns("PL_NONTAX_IN_FIR")
            Me.columnPL_NONTAX_IN_REALG = MyBase.Columns("PL_NONTAX_IN_REALG")
            Me.columnPL_NONTAX_IN_UNREALG = MyBase.Columns("PL_NONTAX_IN_UNREALG")
            Me.columnPL_NONTAX_IN_INSU_COMP = MyBase.Columns("PL_NONTAX_IN_INSU_COMP")
            Me.columnPL_EXP_INT = MyBase.Columns("PL_EXP_INT")
            Me.columnPL_LAWYER_COST = MyBase.Columns("PL_LAWYER_COST")
            Me.columnPL_CONTRACT_EXP = MyBase.Columns("PL_CONTRACT_EXP")
            Me.columnPL_EXP_SALARY = MyBase.Columns("PL_EXP_SALARY")
            Me.columnPL_ROYALTY = MyBase.Columns("PL_ROYALTY")
            Me.columnPL_EXP_RENT = MyBase.Columns("PL_EXP_RENT")
            Me.columnPL_EXP_MAINTENANCE = MyBase.Columns("PL_EXP_MAINTENANCE")
            Me.columnPL_RND = MyBase.Columns("PL_RND")
            Me.columnPL_ADVERT = MyBase.Columns("PL_ADVERT")
            Me.columnPL_TRAVEL = MyBase.Columns("PL_TRAVEL")
            Me.columnPL_OTHER_EXP = MyBase.Columns("PL_OTHER_EXP")
            Me.columnPL_OTHER_EXP_DPC = MyBase.Columns("PL_OTHER_EXP_DPC")
            Me.columnPL_OTHER_EXP_DNT = MyBase.Columns("PL_OTHER_EXP_DNT")
            Me.columnPL_OTHER_EXP_DNT_APP = MyBase.Columns("PL_OTHER_EXP_DNT_APP")
            Me.columnPL_OTHER_EXP_DNT_NAPP = MyBase.Columns("PL_OTHER_EXP_DNT_NAPP")
            Me.columnPL_OTHER_EXP_FA_DISP = MyBase.Columns("PL_OTHER_EXP_FA_DISP")
            Me.columnPL_OTHER_EXP_ENTM = MyBase.Columns("PL_OTHER_EXP_ENTM")
            Me.columnPL_OTHER_EXP_ENTM_CLNT = MyBase.Columns("PL_OTHER_EXP_ENTM_CLNT")
            Me.columnPL_OTHER_EXP_ENTM_STFF = MyBase.Columns("PL_OTHER_EXP_ENTM_STFF")
            Me.columnPL_OTHER_EXP_PENALTY = MyBase.Columns("PL_OTHER_EXP_PENALTY")
            Me.columnPL_OTHER_EXP_PROV_ACC = MyBase.Columns("PL_OTHER_EXP_PROV_ACC")
            Me.columnPL_OTHER_EXP_LEAVE = MyBase.Columns("PL_OTHER_EXP_LEAVE")
            Me.columnPL_OTHER_EXP_FA_WO = MyBase.Columns("PL_OTHER_EXP_FA_WO")
            Me.columnPL_OTHER_EXP_UNREALOSS = MyBase.Columns("PL_OTHER_EXP_UNREALOSS")
            Me.columnPL_OTHER_EXP_REALOSS = MyBase.Columns("PL_OTHER_EXP_REALOSS")
            Me.columnPL_OTHER_EXP_INI_SUB = MyBase.Columns("PL_OTHER_EXP_INI_SUB")
            Me.columnPL_OTHER_EXP_CAP_EXP = MyBase.Columns("PL_OTHER_EXP_CAP_EXP")
            Me.columnPL_OTHER_EXP_OTHERS = MyBase.Columns("PL_OTHER_EXP_OTHERS")
            Me.columnPL_TOT_EXP = MyBase.Columns("PL_TOT_EXP")
            Me.columnPL_NET_PROFIT_LOSS = MyBase.Columns("PL_NET_PROFIT_LOSS")
            Me.columnPL_DISALLOWED_EXP = MyBase.Columns("PL_DISALLOWED_EXP")
            Me.columnPL_TOTALX = MyBase.Columns("PL_TOTALX")
            Me.columnPL_TOTALY = MyBase.Columns("PL_TOTALY")
            Me.columnPL_EXP_INTRESTRICT = MyBase.Columns("PL_EXP_INTRESTRICT")
            Me.columnPL_OTH_BSIN_NONSOURCE = MyBase.Columns("PL_OTH_BSIN_NONSOURCE")
            Me.columnPL_S60F = MyBase.Columns("PL_S60F")
            Me.columnPL_MAINBUZ = MyBase.Columns("PL_MAINBUZ")
            Me.columnPL_OTHER_EXP_ZAKAT = MyBase.Columns("PL_OTHER_EXP_ZAKAT")
            Me.columnPL_COMPANY = MyBase.Columns("PL_COMPANY")
            Me.columnPL_TREGROSS = MyBase.Columns("PL_TREGROSS")
            Me.columnPL_TTAXDEDUCTION = MyBase.Columns("PL_TTAXDEDUCTION")
            Me.columnPL_TNETDEDUCTION = MyBase.Columns("PL_TNETDEDUCTION")
            Me.columnPL_TECH_FEE = MyBase.Columns("PL_TECH_FEE")
            Me.columnPL_EMPL_STOCK = MyBase.Columns("PL_EMPL_STOCK")
            Me.columnPL_S60FA = MyBase.Columns("PL_S60FA")
            Me.columnPL_OTHER_EXP_BALANCE = MyBase.Columns("PL_OTHER_EXP_BALANCE")
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = MyBase.Columns("PL_OTHER_EXRLOSSFOREIGNT")
            Me.columnPL_DIRECTORS_FEE = MyBase.Columns("PL_DIRECTORS_FEE")
            Me.columnPL_JKDM = MyBase.Columns("PL_JKDM")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPL_KEY = New Global.System.Data.DataColumn("PL_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_KEY)
            Me.columnPL_SALES = New Global.System.Data.DataColumn("PL_SALES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_SALES)
            Me.columnPL_OP_STK = New Global.System.Data.DataColumn("PL_OP_STK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OP_STK)
            Me.columnPL_PURCHASES = New Global.System.Data.DataColumn("PL_PURCHASES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES)
            Me.columnPL_PRO_COST = New Global.System.Data.DataColumn("PL_PRO_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST)
            Me.columnPL_PRO_COST_DPC = New Global.System.Data.DataColumn("PL_PRO_COST_DPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_DPC)
            Me.columnPL_PRO_COST_OAE = New Global.System.Data.DataColumn("PL_PRO_COST_OAE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_OAE)
            Me.columnPL_PRO_COST_ONAE = New Global.System.Data.DataColumn("PL_PRO_COST_ONAE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PRO_COST_ONAE)
            Me.columnPL_PURCHASES_PRO_COST = New Global.System.Data.DataColumn("PL_PURCHASES_PRO_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_PURCHASES_PRO_COST)
            Me.columnPL_CLS_STK = New Global.System.Data.DataColumn("PL_CLS_STK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CLS_STK)
            Me.columnPL_COGS = New Global.System.Data.DataColumn("PL_COGS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COGS)
            Me.columnPL_GROSS_PROFIT = New Global.System.Data.DataColumn("PL_GROSS_PROFIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_GROSS_PROFIT)
            Me.columnPL_OTH_BSIN = New Global.System.Data.DataColumn("PL_OTH_BSIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN)
            Me.columnPL_OTH_BSIN_UNREALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_UNREALGT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_UNREALGT)
            Me.columnPL_OTH_BSIN_REALGT = New Global.System.Data.DataColumn("PL_OTH_BSIN_REALGT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_REALGT)
            Me.columnPL_OTH_BSIN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_BSIN_RENTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_RENTAL)
            Me.columnPL_OTH_BSIN_OTHER = New Global.System.Data.DataColumn("PL_OTH_BSIN_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_OTHER)
            Me.columnPL_OTH_IN = New Global.System.Data.DataColumn("PL_OTH_IN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN)
            Me.columnPL_OTH_IN_DIVIDEND = New Global.System.Data.DataColumn("PL_OTH_IN_DIVIDEND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_DIVIDEND)
            Me.columnPL_OTH_IN_INTEREST = New Global.System.Data.DataColumn("PL_OTH_IN_INTEREST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_INTEREST)
            Me.columnPL_OTH_IN_RENTAL = New Global.System.Data.DataColumn("PL_OTH_IN_RENTAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_RENTAL)
            Me.columnPL_OTH_IN_ROYALTY = New Global.System.Data.DataColumn("PL_OTH_IN_ROYALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_ROYALTY)
            Me.columnPL_OTH_IN_OTHER = New Global.System.Data.DataColumn("PL_OTH_IN_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_IN_OTHER)
            Me.columnPL_NONTAX_IN = New Global.System.Data.DataColumn("PL_NONTAX_IN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN)
            Me.columnPL_NONTAX_IN_FA_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_FA_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FA_DISP)
            Me.columnPL_NONTAX_IN_INV_DISP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INV_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INV_DISP)
            Me.columnPL_NONTAX_IN_EXM_DIV = New Global.System.Data.DataColumn("PL_NONTAX_IN_EXM_DIV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_EXM_DIV)
            Me.columnPL_NONTAX_IN_FIR = New Global.System.Data.DataColumn("PL_NONTAX_IN_FIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_FIR)
            Me.columnPL_NONTAX_IN_REALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_REALG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_REALG)
            Me.columnPL_NONTAX_IN_UNREALG = New Global.System.Data.DataColumn("PL_NONTAX_IN_UNREALG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_UNREALG)
            Me.columnPL_NONTAX_IN_INSU_COMP = New Global.System.Data.DataColumn("PL_NONTAX_IN_INSU_COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NONTAX_IN_INSU_COMP)
            Me.columnPL_EXP_INT = New Global.System.Data.DataColumn("PL_EXP_INT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INT)
            Me.columnPL_LAWYER_COST = New Global.System.Data.DataColumn("PL_LAWYER_COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_LAWYER_COST)
            Me.columnPL_CONTRACT_EXP = New Global.System.Data.DataColumn("PL_CONTRACT_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_CONTRACT_EXP)
            Me.columnPL_EXP_SALARY = New Global.System.Data.DataColumn("PL_EXP_SALARY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_SALARY)
            Me.columnPL_ROYALTY = New Global.System.Data.DataColumn("PL_ROYALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ROYALTY)
            Me.columnPL_EXP_RENT = New Global.System.Data.DataColumn("PL_EXP_RENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_RENT)
            Me.columnPL_EXP_MAINTENANCE = New Global.System.Data.DataColumn("PL_EXP_MAINTENANCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_MAINTENANCE)
            Me.columnPL_RND = New Global.System.Data.DataColumn("PL_RND", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_RND)
            Me.columnPL_ADVERT = New Global.System.Data.DataColumn("PL_ADVERT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_ADVERT)
            Me.columnPL_TRAVEL = New Global.System.Data.DataColumn("PL_TRAVEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TRAVEL)
            Me.columnPL_OTHER_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP)
            Me.columnPL_OTHER_EXP_DPC = New Global.System.Data.DataColumn("PL_OTHER_EXP_DPC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DPC)
            Me.columnPL_OTHER_EXP_DNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT)
            Me.columnPL_OTHER_EXP_DNT_APP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_APP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_APP)
            Me.columnPL_OTHER_EXP_DNT_NAPP = New Global.System.Data.DataColumn("PL_OTHER_EXP_DNT_NAPP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_DNT_NAPP)
            Me.columnPL_OTHER_EXP_FA_DISP = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_DISP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_DISP)
            Me.columnPL_OTHER_EXP_ENTM = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM)
            Me.columnPL_OTHER_EXP_ENTM_CLNT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_CLNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_CLNT)
            Me.columnPL_OTHER_EXP_ENTM_STFF = New Global.System.Data.DataColumn("PL_OTHER_EXP_ENTM_STFF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ENTM_STFF)
            Me.columnPL_OTHER_EXP_PENALTY = New Global.System.Data.DataColumn("PL_OTHER_EXP_PENALTY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PENALTY)
            Me.columnPL_OTHER_EXP_PROV_ACC = New Global.System.Data.DataColumn("PL_OTHER_EXP_PROV_ACC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_PROV_ACC)
            Me.columnPL_OTHER_EXP_LEAVE = New Global.System.Data.DataColumn("PL_OTHER_EXP_LEAVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_LEAVE)
            Me.columnPL_OTHER_EXP_FA_WO = New Global.System.Data.DataColumn("PL_OTHER_EXP_FA_WO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_FA_WO)
            Me.columnPL_OTHER_EXP_UNREALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_UNREALOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_UNREALOSS)
            Me.columnPL_OTHER_EXP_REALOSS = New Global.System.Data.DataColumn("PL_OTHER_EXP_REALOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_REALOSS)
            Me.columnPL_OTHER_EXP_INI_SUB = New Global.System.Data.DataColumn("PL_OTHER_EXP_INI_SUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_INI_SUB)
            Me.columnPL_OTHER_EXP_CAP_EXP = New Global.System.Data.DataColumn("PL_OTHER_EXP_CAP_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_CAP_EXP)
            Me.columnPL_OTHER_EXP_OTHERS = New Global.System.Data.DataColumn("PL_OTHER_EXP_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_OTHERS)
            Me.columnPL_TOT_EXP = New Global.System.Data.DataColumn("PL_TOT_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOT_EXP)
            Me.columnPL_NET_PROFIT_LOSS = New Global.System.Data.DataColumn("PL_NET_PROFIT_LOSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_NET_PROFIT_LOSS)
            Me.columnPL_DISALLOWED_EXP = New Global.System.Data.DataColumn("PL_DISALLOWED_EXP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DISALLOWED_EXP)
            Me.columnPL_TOTALX = New Global.System.Data.DataColumn("PL_TOTALX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALX)
            Me.columnPL_TOTALY = New Global.System.Data.DataColumn("PL_TOTALY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TOTALY)
            Me.columnPL_EXP_INTRESTRICT = New Global.System.Data.DataColumn("PL_EXP_INTRESTRICT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EXP_INTRESTRICT)
            Me.columnPL_OTH_BSIN_NONSOURCE = New Global.System.Data.DataColumn("PL_OTH_BSIN_NONSOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTH_BSIN_NONSOURCE)
            Me.columnPL_S60F = New Global.System.Data.DataColumn("PL_S60F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60F)
            Me.columnPL_MAINBUZ = New Global.System.Data.DataColumn("PL_MAINBUZ", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_MAINBUZ)
            Me.columnPL_OTHER_EXP_ZAKAT = New Global.System.Data.DataColumn("PL_OTHER_EXP_ZAKAT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_ZAKAT)
            Me.columnPL_COMPANY = New Global.System.Data.DataColumn("PL_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_COMPANY)
            Me.columnPL_TREGROSS = New Global.System.Data.DataColumn("PL_TREGROSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TREGROSS)
            Me.columnPL_TTAXDEDUCTION = New Global.System.Data.DataColumn("PL_TTAXDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TTAXDEDUCTION)
            Me.columnPL_TNETDEDUCTION = New Global.System.Data.DataColumn("PL_TNETDEDUCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TNETDEDUCTION)
            Me.columnPL_TECH_FEE = New Global.System.Data.DataColumn("PL_TECH_FEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_TECH_FEE)
            Me.columnPL_EMPL_STOCK = New Global.System.Data.DataColumn("PL_EMPL_STOCK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_EMPL_STOCK)
            Me.columnPL_S60FA = New Global.System.Data.DataColumn("PL_S60FA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_S60FA)
            Me.columnPL_OTHER_EXP_BALANCE = New Global.System.Data.DataColumn("PL_OTHER_EXP_BALANCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXP_BALANCE)
            Me.columnPL_OTHER_EXRLOSSFOREIGNT = New Global.System.Data.DataColumn("PL_OTHER_EXRLOSSFOREIGNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_OTHER_EXRLOSSFOREIGNT)
            Me.columnPL_DIRECTORS_FEE = New Global.System.Data.DataColumn("PL_DIRECTORS_FEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_DIRECTORS_FEE)
            Me.columnPL_JKDM = New Global.System.Data.DataColumn("PL_JKDM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPL_JKDM)
            Me.columnPL_KEY.AllowDBNull = false
            Me.columnPL_SALES.MaxLength = 25
            Me.columnPL_OP_STK.MaxLength = 25
            Me.columnPL_PURCHASES.MaxLength = 25
            Me.columnPL_PRO_COST.MaxLength = 25
            Me.columnPL_PRO_COST_DPC.MaxLength = 25
            Me.columnPL_PRO_COST_OAE.MaxLength = 25
            Me.columnPL_PRO_COST_ONAE.MaxLength = 25
            Me.columnPL_PURCHASES_PRO_COST.MaxLength = 25
            Me.columnPL_CLS_STK.MaxLength = 25
            Me.columnPL_COGS.MaxLength = 25
            Me.columnPL_GROSS_PROFIT.MaxLength = 25
            Me.columnPL_OTH_BSIN.MaxLength = 25
            Me.columnPL_OTH_BSIN_UNREALGT.MaxLength = 25
            Me.columnPL_OTH_BSIN_REALGT.MaxLength = 25
            Me.columnPL_OTH_BSIN_RENTAL.MaxLength = 25
            Me.columnPL_OTH_BSIN_OTHER.MaxLength = 25
            Me.columnPL_OTH_IN.MaxLength = 25
            Me.columnPL_OTH_IN_DIVIDEND.MaxLength = 25
            Me.columnPL_OTH_IN_INTEREST.MaxLength = 25
            Me.columnPL_OTH_IN_RENTAL.MaxLength = 25
            Me.columnPL_OTH_IN_ROYALTY.MaxLength = 25
            Me.columnPL_OTH_IN_OTHER.MaxLength = 25
            Me.columnPL_NONTAX_IN.MaxLength = 25
            Me.columnPL_NONTAX_IN_FA_DISP.MaxLength = 25
            Me.columnPL_NONTAX_IN_INV_DISP.MaxLength = 25
            Me.columnPL_NONTAX_IN_EXM_DIV.MaxLength = 25
            Me.columnPL_NONTAX_IN_FIR.MaxLength = 25
            Me.columnPL_NONTAX_IN_REALG.MaxLength = 25
            Me.columnPL_NONTAX_IN_UNREALG.MaxLength = 25
            Me.columnPL_NONTAX_IN_INSU_COMP.MaxLength = 25
            Me.columnPL_EXP_INT.MaxLength = 25
            Me.columnPL_LAWYER_COST.MaxLength = 25
            Me.columnPL_CONTRACT_EXP.MaxLength = 25
            Me.columnPL_EXP_SALARY.MaxLength = 25
            Me.columnPL_ROYALTY.MaxLength = 25
            Me.columnPL_EXP_RENT.MaxLength = 25
            Me.columnPL_EXP_MAINTENANCE.MaxLength = 25
            Me.columnPL_RND.MaxLength = 25
            Me.columnPL_ADVERT.MaxLength = 25
            Me.columnPL_TRAVEL.MaxLength = 25
            Me.columnPL_OTHER_EXP.MaxLength = 25
            Me.columnPL_OTHER_EXP_DPC.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT_APP.MaxLength = 25
            Me.columnPL_OTHER_EXP_DNT_NAPP.MaxLength = 25
            Me.columnPL_OTHER_EXP_FA_DISP.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM_CLNT.MaxLength = 25
            Me.columnPL_OTHER_EXP_ENTM_STFF.MaxLength = 25
            Me.columnPL_OTHER_EXP_PENALTY.MaxLength = 25
            Me.columnPL_OTHER_EXP_PROV_ACC.MaxLength = 25
            Me.columnPL_OTHER_EXP_LEAVE.MaxLength = 25
            Me.columnPL_OTHER_EXP_FA_WO.MaxLength = 25
            Me.columnPL_OTHER_EXP_UNREALOSS.MaxLength = 25
            Me.columnPL_OTHER_EXP_REALOSS.MaxLength = 25
            Me.columnPL_OTHER_EXP_INI_SUB.MaxLength = 25
            Me.columnPL_OTHER_EXP_CAP_EXP.MaxLength = 25
            Me.columnPL_OTHER_EXP_OTHERS.MaxLength = 25
            Me.columnPL_TOT_EXP.MaxLength = 25
            Me.columnPL_NET_PROFIT_LOSS.MaxLength = 25
            Me.columnPL_DISALLOWED_EXP.MaxLength = 25
            Me.columnPL_TOTALX.MaxLength = 25
            Me.columnPL_TOTALY.MaxLength = 25
            Me.columnPL_EXP_INTRESTRICT.MaxLength = 25
            Me.columnPL_OTH_BSIN_NONSOURCE.MaxLength = 25
            Me.columnPL_S60F.MaxLength = 1
            Me.columnPL_OTHER_EXP_ZAKAT.MaxLength = 25
            Me.columnPL_COMPANY.MaxLength = 8
            Me.columnPL_TREGROSS.MaxLength = 25
            Me.columnPL_TTAXDEDUCTION.MaxLength = 25
            Me.columnPL_TNETDEDUCTION.MaxLength = 25
            Me.columnPL_TECH_FEE.MaxLength = 25
            Me.columnPL_EMPL_STOCK.MaxLength = 25
            Me.columnPL_S60FA.MaxLength = 1
            Me.columnPL_OTHER_EXP_BALANCE.MaxLength = 25
            Me.columnPL_OTHER_EXRLOSSFOREIGNT.MaxLength = 25
            Me.columnPL_DIRECTORS_FEE.MaxLength = 25
            Me.columnPL_JKDM.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow() As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
            Return CType(Me.NewRow,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChanged(Me, New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChanging(Me, New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeletedEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeleted(Me, New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeletingEvent) Is Nothing) Then
                RaiseEvent PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowDeleting(Me, New PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent(CType(e.Row,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DIVIDEND_INCOMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DIVIDEND_INCOMERow)
        
        Private columnDI_KEY As Global.System.Data.DataColumn
        
        Private columnDI_DIVIDENDKEY As Global.System.Data.DataColumn
        
        Private columnDI_DATE As Global.System.Data.DataColumn
        
        Private columnDI_COMPANY As Global.System.Data.DataColumn
        
        Private columnDI_GROSS As Global.System.Data.DataColumn
        
        Private columnDI_TAX As Global.System.Data.DataColumn
        
        Private columnDI_WARANT_NO As Global.System.Data.DataColumn
        
        Private columnDI_CHKREGROSS As Global.System.Data.DataColumn
        
        Private columnDI_TAXRATE As Global.System.Data.DataColumn
        
        Private columnDI_REGROSS As Global.System.Data.DataColumn
        
        Private columnDI_TAXDEDUCTION As Global.System.Data.DataColumn
        
        Private columnDI_NETDEDUCTION As Global.System.Data.DataColumn
        
        Private columnDI_ENDDATE As Global.System.Data.DataColumn
        
        Private columnDI_TRATE As Global.System.Data.DataColumn
        
        Private columnDI_SOURCENO As Global.System.Data.DataColumn
        
        Private columnDI_DISCLOSE As Global.System.Data.DataColumn
        
        Private columnDI_TRANSFER As Global.System.Data.DataColumn
        
        Private columnDI_NET As Global.System.Data.DataColumn
        
        Private columnDI_Percentage As Global.System.Data.DataColumn
        
        Private columnDI_PercentageAmount As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnTITLE As Global.System.Data.DataColumn
        
        Private columnSCH As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DIVIDEND_INCOME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_DIVIDENDKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_DIVIDENDKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_GROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_GROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_TAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_TAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_WARANT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_WARANT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_CHKREGROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_CHKREGROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_TAXRATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_TAXRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_REGROSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_REGROSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_TAXDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_TAXDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_NETDEDUCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_NETDEDUCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_ENDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_ENDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_TRATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_TRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_DISCLOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_DISCLOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_TRANSFERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_TRANSFER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_NETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_NET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_PercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_Percentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DI_PercentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDI_PercentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DIVIDEND_INCOMERow
            Get
                Return CType(Me.Rows(index),DIVIDEND_INCOMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DIVIDEND_INCOMERowChanging As DIVIDEND_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DIVIDEND_INCOMERowChanged As DIVIDEND_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DIVIDEND_INCOMERowDeleting As DIVIDEND_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DIVIDEND_INCOMERowDeleted As DIVIDEND_INCOMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDIVIDEND_INCOMERow(ByVal row As DIVIDEND_INCOMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDIVIDEND_INCOMERow( _
                    ByVal DI_KEY As Integer,  _
                    ByVal DI_DATE As Date,  _
                    ByVal DI_COMPANY As String,  _
                    ByVal DI_GROSS As Decimal,  _
                    ByVal DI_TAX As Decimal,  _
                    ByVal DI_WARANT_NO As String,  _
                    ByVal DI_CHKREGROSS As String,  _
                    ByVal DI_TAXRATE As Decimal,  _
                    ByVal DI_REGROSS As Double,  _
                    ByVal DI_TAXDEDUCTION As Decimal,  _
                    ByVal DI_NETDEDUCTION As Decimal,  _
                    ByVal DI_ENDDATE As Date,  _
                    ByVal DI_TRATE As Decimal,  _
                    ByVal DI_SOURCENO As Integer,  _
                    ByVal DI_DISCLOSE As String,  _
                    ByVal DI_TRANSFER As String,  _
                    ByVal DI_NET As Decimal,  _
                    ByVal DI_Percentage As Decimal,  _
                    ByVal DI_PercentageAmount As Decimal,  _
                    ByVal Note As String,  _
                    ByVal parentPNL_TABLE_INFORowByFK_DIVIDEND_INCOME As PNL_TABLE_INFORow,  _
                    ByVal TITLE As String,  _
                    ByVal SCH As String,  _
                    ByVal TOTAL_AMOUNT As Decimal) As DIVIDEND_INCOMERow
            Dim rowDIVIDEND_INCOMERow As DIVIDEND_INCOMERow = CType(Me.NewRow,DIVIDEND_INCOMERow)
            Dim columnValuesArray() As Object = New Object() {DI_KEY, Nothing, DI_DATE, DI_COMPANY, DI_GROSS, DI_TAX, DI_WARANT_NO, DI_CHKREGROSS, DI_TAXRATE, DI_REGROSS, DI_TAXDEDUCTION, DI_NETDEDUCTION, DI_ENDDATE, DI_TRATE, DI_SOURCENO, DI_DISCLOSE, DI_TRANSFER, DI_NET, DI_Percentage, DI_PercentageAmount, Note, Nothing, TITLE, SCH, TOTAL_AMOUNT}
            If (Not (parentPNL_TABLE_INFORowByFK_DIVIDEND_INCOME) Is Nothing) Then
                columnValuesArray(21) = parentPNL_TABLE_INFORowByFK_DIVIDEND_INCOME(1)
            End If
            rowDIVIDEND_INCOMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDIVIDEND_INCOMERow)
            Return rowDIVIDEND_INCOMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDI_DIVIDENDKEY(ByVal DI_DIVIDENDKEY As Integer) As DIVIDEND_INCOMERow
            Return CType(Me.Rows.Find(New Object() {DI_DIVIDENDKEY}),DIVIDEND_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DIVIDEND_INCOMEDataTable = CType(MyBase.Clone,DIVIDEND_INCOMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DIVIDEND_INCOMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDI_KEY = MyBase.Columns("DI_KEY")
            Me.columnDI_DIVIDENDKEY = MyBase.Columns("DI_DIVIDENDKEY")
            Me.columnDI_DATE = MyBase.Columns("DI_DATE")
            Me.columnDI_COMPANY = MyBase.Columns("DI_COMPANY")
            Me.columnDI_GROSS = MyBase.Columns("DI_GROSS")
            Me.columnDI_TAX = MyBase.Columns("DI_TAX")
            Me.columnDI_WARANT_NO = MyBase.Columns("DI_WARANT_NO")
            Me.columnDI_CHKREGROSS = MyBase.Columns("DI_CHKREGROSS")
            Me.columnDI_TAXRATE = MyBase.Columns("DI_TAXRATE")
            Me.columnDI_REGROSS = MyBase.Columns("DI_REGROSS")
            Me.columnDI_TAXDEDUCTION = MyBase.Columns("DI_TAXDEDUCTION")
            Me.columnDI_NETDEDUCTION = MyBase.Columns("DI_NETDEDUCTION")
            Me.columnDI_ENDDATE = MyBase.Columns("DI_ENDDATE")
            Me.columnDI_TRATE = MyBase.Columns("DI_TRATE")
            Me.columnDI_SOURCENO = MyBase.Columns("DI_SOURCENO")
            Me.columnDI_DISCLOSE = MyBase.Columns("DI_DISCLOSE")
            Me.columnDI_TRANSFER = MyBase.Columns("DI_TRANSFER")
            Me.columnDI_NET = MyBase.Columns("DI_NET")
            Me.columnDI_Percentage = MyBase.Columns("DI_Percentage")
            Me.columnDI_PercentageAmount = MyBase.Columns("DI_PercentageAmount")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnTITLE = MyBase.Columns("TITLE")
            Me.columnSCH = MyBase.Columns("SCH")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDI_KEY = New Global.System.Data.DataColumn("DI_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_KEY)
            Me.columnDI_DIVIDENDKEY = New Global.System.Data.DataColumn("DI_DIVIDENDKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_DIVIDENDKEY)
            Me.columnDI_DATE = New Global.System.Data.DataColumn("DI_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_DATE)
            Me.columnDI_COMPANY = New Global.System.Data.DataColumn("DI_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_COMPANY)
            Me.columnDI_GROSS = New Global.System.Data.DataColumn("DI_GROSS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_GROSS)
            Me.columnDI_TAX = New Global.System.Data.DataColumn("DI_TAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_TAX)
            Me.columnDI_WARANT_NO = New Global.System.Data.DataColumn("DI_WARANT_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_WARANT_NO)
            Me.columnDI_CHKREGROSS = New Global.System.Data.DataColumn("DI_CHKREGROSS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_CHKREGROSS)
            Me.columnDI_TAXRATE = New Global.System.Data.DataColumn("DI_TAXRATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_TAXRATE)
            Me.columnDI_REGROSS = New Global.System.Data.DataColumn("DI_REGROSS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_REGROSS)
            Me.columnDI_TAXDEDUCTION = New Global.System.Data.DataColumn("DI_TAXDEDUCTION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_TAXDEDUCTION)
            Me.columnDI_NETDEDUCTION = New Global.System.Data.DataColumn("DI_NETDEDUCTION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_NETDEDUCTION)
            Me.columnDI_ENDDATE = New Global.System.Data.DataColumn("DI_ENDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_ENDDATE)
            Me.columnDI_TRATE = New Global.System.Data.DataColumn("DI_TRATE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_TRATE)
            Me.columnDI_SOURCENO = New Global.System.Data.DataColumn("DI_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_SOURCENO)
            Me.columnDI_DISCLOSE = New Global.System.Data.DataColumn("DI_DISCLOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_DISCLOSE)
            Me.columnDI_TRANSFER = New Global.System.Data.DataColumn("DI_TRANSFER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_TRANSFER)
            Me.columnDI_NET = New Global.System.Data.DataColumn("DI_NET", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_NET)
            Me.columnDI_Percentage = New Global.System.Data.DataColumn("DI_Percentage", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_Percentage)
            Me.columnDI_PercentageAmount = New Global.System.Data.DataColumn("DI_PercentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDI_PercentageAmount)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnTITLE = New Global.System.Data.DataColumn("TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITLE)
            Me.columnSCH = New Global.System.Data.DataColumn("SCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCH)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDI_DIVIDENDKEY}, true))
            Me.columnDI_DIVIDENDKEY.AutoIncrement = true
            Me.columnDI_DIVIDENDKEY.AllowDBNull = false
            Me.columnDI_DIVIDENDKEY.Unique = true
            Me.columnDI_COMPANY.MaxLength = 100
            Me.columnDI_GROSS.DefaultValue = CType(0D,Decimal)
            Me.columnDI_TAX.DefaultValue = CType(0D,Decimal)
            Me.columnDI_WARANT_NO.MaxLength = 50
            Me.columnDI_CHKREGROSS.MaxLength = 3
            Me.columnDI_REGROSS.DefaultValue = CType(0R,Double)
            Me.columnDI_DISCLOSE.MaxLength = 3
            Me.columnDI_TRANSFER.MaxLength = 25
            Me.columnDI_NET.DefaultValue = CType(0D,Decimal)
            Me.columnKEYNAME.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDIVIDEND_INCOMERow() As DIVIDEND_INCOMERow
            Return CType(Me.NewRow,DIVIDEND_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DIVIDEND_INCOMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DIVIDEND_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DIVIDEND_INCOMERowChangedEvent) Is Nothing) Then
                RaiseEvent DIVIDEND_INCOMERowChanged(Me, New DIVIDEND_INCOMERowChangeEvent(CType(e.Row,DIVIDEND_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DIVIDEND_INCOMERowChangingEvent) Is Nothing) Then
                RaiseEvent DIVIDEND_INCOMERowChanging(Me, New DIVIDEND_INCOMERowChangeEvent(CType(e.Row,DIVIDEND_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DIVIDEND_INCOMERowDeletedEvent) Is Nothing) Then
                RaiseEvent DIVIDEND_INCOMERowDeleted(Me, New DIVIDEND_INCOMERowChangeEvent(CType(e.Row,DIVIDEND_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DIVIDEND_INCOMERowDeletingEvent) Is Nothing) Then
                RaiseEvent DIVIDEND_INCOMERowDeleting(Me, New DIVIDEND_INCOMERowChangeEvent(CType(e.Row,DIVIDEND_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDIVIDEND_INCOMERow(ByVal row As DIVIDEND_INCOMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DIVIDEND_INCOMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RENTAL_INCOMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of RENTAL_INCOMERow)
        
        Private columnRI_KEY As Global.System.Data.DataColumn
        
        Private columnRI_RENTKEY As Global.System.Data.DataColumn
        
        Private columnRI_TYPE As Global.System.Data.DataColumn
        
        Private columnRI_ADDRESS As Global.System.Data.DataColumn
        
        Private columnRI_DATE As Global.System.Data.DataColumn
        
        Private columnRI_AMOUNT As Global.System.Data.DataColumn
        
        Private columnRI_SOURCENO As Global.System.Data.DataColumn
        
        Private columnRI_STATUS4d As Global.System.Data.DataColumn
        
        Private columnRI_DATE_END As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnTITLE As Global.System.Data.DataColumn
        
        Private columnSCH As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RENTAL_INCOME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_RENTKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_RENTKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_STATUS4dColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_STATUS4d
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RI_DATE_ENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRI_DATE_END
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RENTAL_INCOMERow
            Get
                Return CType(Me.Rows(index),RENTAL_INCOMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RENTAL_INCOMERowChanging As RENTAL_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RENTAL_INCOMERowChanged As RENTAL_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RENTAL_INCOMERowDeleting As RENTAL_INCOMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RENTAL_INCOMERowDeleted As RENTAL_INCOMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRENTAL_INCOMERow(ByVal row As RENTAL_INCOMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRENTAL_INCOMERow(ByVal RI_KEY As Integer, ByVal RI_TYPE As String, ByVal RI_ADDRESS As String, ByVal RI_DATE As Date, ByVal RI_AMOUNT As Decimal, ByVal RI_SOURCENO As Integer, ByVal RI_STATUS4d As String, ByVal RI_DATE_END As Date, ByVal Note As String, ByVal parentPNL_TABLE_INFORowByFK_RENTAL_INCOME As PNL_TABLE_INFORow, ByVal TITLE As String, ByVal SCH As String, ByVal TOTAL_AMOUNT As Decimal) As RENTAL_INCOMERow
            Dim rowRENTAL_INCOMERow As RENTAL_INCOMERow = CType(Me.NewRow,RENTAL_INCOMERow)
            Dim columnValuesArray() As Object = New Object() {RI_KEY, Nothing, RI_TYPE, RI_ADDRESS, RI_DATE, RI_AMOUNT, RI_SOURCENO, RI_STATUS4d, RI_DATE_END, Note, Nothing, TITLE, SCH, TOTAL_AMOUNT}
            If (Not (parentPNL_TABLE_INFORowByFK_RENTAL_INCOME) Is Nothing) Then
                columnValuesArray(10) = parentPNL_TABLE_INFORowByFK_RENTAL_INCOME(1)
            End If
            rowRENTAL_INCOMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRENTAL_INCOMERow)
            Return rowRENTAL_INCOMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByRI_RENTKEY(ByVal RI_RENTKEY As Integer) As RENTAL_INCOMERow
            Return CType(Me.Rows.Find(New Object() {RI_RENTKEY}),RENTAL_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RENTAL_INCOMEDataTable = CType(MyBase.Clone,RENTAL_INCOMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RENTAL_INCOMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRI_KEY = MyBase.Columns("RI_KEY")
            Me.columnRI_RENTKEY = MyBase.Columns("RI_RENTKEY")
            Me.columnRI_TYPE = MyBase.Columns("RI_TYPE")
            Me.columnRI_ADDRESS = MyBase.Columns("RI_ADDRESS")
            Me.columnRI_DATE = MyBase.Columns("RI_DATE")
            Me.columnRI_AMOUNT = MyBase.Columns("RI_AMOUNT")
            Me.columnRI_SOURCENO = MyBase.Columns("RI_SOURCENO")
            Me.columnRI_STATUS4d = MyBase.Columns("RI_STATUS4d")
            Me.columnRI_DATE_END = MyBase.Columns("RI_DATE_END")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnTITLE = MyBase.Columns("TITLE")
            Me.columnSCH = MyBase.Columns("SCH")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRI_KEY = New Global.System.Data.DataColumn("RI_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_KEY)
            Me.columnRI_RENTKEY = New Global.System.Data.DataColumn("RI_RENTKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_RENTKEY)
            Me.columnRI_TYPE = New Global.System.Data.DataColumn("RI_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_TYPE)
            Me.columnRI_ADDRESS = New Global.System.Data.DataColumn("RI_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_ADDRESS)
            Me.columnRI_DATE = New Global.System.Data.DataColumn("RI_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_DATE)
            Me.columnRI_AMOUNT = New Global.System.Data.DataColumn("RI_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_AMOUNT)
            Me.columnRI_SOURCENO = New Global.System.Data.DataColumn("RI_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_SOURCENO)
            Me.columnRI_STATUS4d = New Global.System.Data.DataColumn("RI_STATUS4d", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_STATUS4d)
            Me.columnRI_DATE_END = New Global.System.Data.DataColumn("RI_DATE_END", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRI_DATE_END)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnTITLE = New Global.System.Data.DataColumn("TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITLE)
            Me.columnSCH = New Global.System.Data.DataColumn("SCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCH)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRI_RENTKEY}, true))
            Me.columnRI_RENTKEY.AutoIncrement = true
            Me.columnRI_RENTKEY.AllowDBNull = false
            Me.columnRI_RENTKEY.Unique = true
            Me.columnRI_TYPE.MaxLength = 255
            Me.columnRI_ADDRESS.MaxLength = 3000
            Me.columnRI_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnRI_STATUS4d.MaxLength = 25
            Me.columnKEYNAME.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRENTAL_INCOMERow() As RENTAL_INCOMERow
            Return CType(Me.NewRow,RENTAL_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RENTAL_INCOMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RENTAL_INCOMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RENTAL_INCOMERowChangedEvent) Is Nothing) Then
                RaiseEvent RENTAL_INCOMERowChanged(Me, New RENTAL_INCOMERowChangeEvent(CType(e.Row,RENTAL_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RENTAL_INCOMERowChangingEvent) Is Nothing) Then
                RaiseEvent RENTAL_INCOMERowChanging(Me, New RENTAL_INCOMERowChangeEvent(CType(e.Row,RENTAL_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RENTAL_INCOMERowDeletedEvent) Is Nothing) Then
                RaiseEvent RENTAL_INCOMERowDeleted(Me, New RENTAL_INCOMERowChangeEvent(CType(e.Row,RENTAL_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RENTAL_INCOMERowDeletingEvent) Is Nothing) Then
                RaiseEvent RENTAL_INCOMERowDeleting(Me, New RENTAL_INCOMERowChangeEvent(CType(e.Row,RENTAL_INCOMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRENTAL_INCOMERow(ByVal row As RENTAL_INCOMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RENTAL_INCOMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXEMPT_DIVIDENDDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXEMPT_DIVIDENDRow)
        
        Private columnED_KEY As Global.System.Data.DataColumn
        
        Private columnED_EDKEY As Global.System.Data.DataColumn
        
        Private columnED_DATE As Global.System.Data.DataColumn
        
        Private columnED_COMPANY As Global.System.Data.DataColumn
        
        Private columnED_AMOUNT As Global.System.Data.DataColumn
        
        Private columnED_TIERSTATUS As Global.System.Data.DataColumn
        
        Private columnED_SOURCENO As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnTITLE As Global.System.Data.DataColumn
        
        Private columnSCH As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXEMPT_DIVIDEND"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_EDKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_EDKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_COMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_TIERSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_TIERSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ED_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnED_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXEMPT_DIVIDENDRow
            Get
                Return CType(Me.Rows(index),EXEMPT_DIVIDENDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXEMPT_DIVIDENDRowChanging As EXEMPT_DIVIDENDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXEMPT_DIVIDENDRowChanged As EXEMPT_DIVIDENDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXEMPT_DIVIDENDRowDeleting As EXEMPT_DIVIDENDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXEMPT_DIVIDENDRowDeleted As EXEMPT_DIVIDENDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEXEMPT_DIVIDENDRow(ByVal row As EXEMPT_DIVIDENDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEXEMPT_DIVIDENDRow(ByVal ED_KEY As Integer, ByVal ED_DATE As Date, ByVal ED_COMPANY As String, ByVal ED_AMOUNT As Decimal, ByVal ED_TIERSTATUS As String, ByVal ED_SOURCENO As Integer, ByVal Note As String, ByVal parentPNL_TABLE_INFORowByFK_EXEMPT_DIVIDEND As PNL_TABLE_INFORow, ByVal TITLE As String, ByVal SCH As String, ByVal TOTAL_AMOUNT As Decimal) As EXEMPT_DIVIDENDRow
            Dim rowEXEMPT_DIVIDENDRow As EXEMPT_DIVIDENDRow = CType(Me.NewRow,EXEMPT_DIVIDENDRow)
            Dim columnValuesArray() As Object = New Object() {ED_KEY, Nothing, ED_DATE, ED_COMPANY, ED_AMOUNT, ED_TIERSTATUS, ED_SOURCENO, Note, Nothing, TITLE, SCH, TOTAL_AMOUNT}
            If (Not (parentPNL_TABLE_INFORowByFK_EXEMPT_DIVIDEND) Is Nothing) Then
                columnValuesArray(8) = parentPNL_TABLE_INFORowByFK_EXEMPT_DIVIDEND(1)
            End If
            rowEXEMPT_DIVIDENDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXEMPT_DIVIDENDRow)
            Return rowEXEMPT_DIVIDENDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByED_EDKEY(ByVal ED_EDKEY As Integer) As EXEMPT_DIVIDENDRow
            Return CType(Me.Rows.Find(New Object() {ED_EDKEY}),EXEMPT_DIVIDENDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXEMPT_DIVIDENDDataTable = CType(MyBase.Clone,EXEMPT_DIVIDENDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXEMPT_DIVIDENDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnED_KEY = MyBase.Columns("ED_KEY")
            Me.columnED_EDKEY = MyBase.Columns("ED_EDKEY")
            Me.columnED_DATE = MyBase.Columns("ED_DATE")
            Me.columnED_COMPANY = MyBase.Columns("ED_COMPANY")
            Me.columnED_AMOUNT = MyBase.Columns("ED_AMOUNT")
            Me.columnED_TIERSTATUS = MyBase.Columns("ED_TIERSTATUS")
            Me.columnED_SOURCENO = MyBase.Columns("ED_SOURCENO")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnTITLE = MyBase.Columns("TITLE")
            Me.columnSCH = MyBase.Columns("SCH")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnED_KEY = New Global.System.Data.DataColumn("ED_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_KEY)
            Me.columnED_EDKEY = New Global.System.Data.DataColumn("ED_EDKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_EDKEY)
            Me.columnED_DATE = New Global.System.Data.DataColumn("ED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_DATE)
            Me.columnED_COMPANY = New Global.System.Data.DataColumn("ED_COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_COMPANY)
            Me.columnED_AMOUNT = New Global.System.Data.DataColumn("ED_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_AMOUNT)
            Me.columnED_TIERSTATUS = New Global.System.Data.DataColumn("ED_TIERSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_TIERSTATUS)
            Me.columnED_SOURCENO = New Global.System.Data.DataColumn("ED_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnED_SOURCENO)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnTITLE = New Global.System.Data.DataColumn("TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITLE)
            Me.columnSCH = New Global.System.Data.DataColumn("SCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCH)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnED_EDKEY}, true))
            Me.columnED_EDKEY.AutoIncrement = true
            Me.columnED_EDKEY.AllowDBNull = false
            Me.columnED_EDKEY.Unique = true
            Me.columnED_COMPANY.MaxLength = 255
            Me.columnED_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnED_TIERSTATUS.MaxLength = 50
            Me.columnKEYNAME.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEXEMPT_DIVIDENDRow() As EXEMPT_DIVIDENDRow
            Return CType(Me.NewRow,EXEMPT_DIVIDENDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXEMPT_DIVIDENDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXEMPT_DIVIDENDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXEMPT_DIVIDENDRowChangedEvent) Is Nothing) Then
                RaiseEvent EXEMPT_DIVIDENDRowChanged(Me, New EXEMPT_DIVIDENDRowChangeEvent(CType(e.Row,EXEMPT_DIVIDENDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXEMPT_DIVIDENDRowChangingEvent) Is Nothing) Then
                RaiseEvent EXEMPT_DIVIDENDRowChanging(Me, New EXEMPT_DIVIDENDRowChangeEvent(CType(e.Row,EXEMPT_DIVIDENDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXEMPT_DIVIDENDRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXEMPT_DIVIDENDRowDeleted(Me, New EXEMPT_DIVIDENDRowChangeEvent(CType(e.Row,EXEMPT_DIVIDENDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXEMPT_DIVIDENDRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXEMPT_DIVIDENDRowDeleting(Me, New EXEMPT_DIVIDENDRowChangeEvent(CType(e.Row,EXEMPT_DIVIDENDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEXEMPT_DIVIDENDRow(ByVal row As EXEMPT_DIVIDENDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXEMPT_DIVIDENDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXPENSES_RENTALDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXPENSES_RENTALRow)
        
        Private columnEXRENT_KEY As Global.System.Data.DataColumn
        
        Private columnEXRENT_EXRENTKEY As Global.System.Data.DataColumn
        
        Private columnEXRENT_SOURCENO As Global.System.Data.DataColumn
        
        Private columnEXRENT_DESC As Global.System.Data.DataColumn
        
        Private columnEXRENT_AMOUNT As Global.System.Data.DataColumn
        
        Private columnEXRENT_DEDUCTIBLE As Global.System.Data.DataColumn
        
        Private columnEXRENT_NOTE As Global.System.Data.DataColumn
        
        Private columnEXRENT_DETAIL As Global.System.Data.DataColumn
        
        Private columnEXRENT_DEDUCTIBLE_ADD As Global.System.Data.DataColumn
        
        Private columnRowIndex As Global.System.Data.DataColumn
        
        Private columnPecentageAmount As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnTITLE As Global.System.Data.DataColumn
        
        Private columnSCH As Global.System.Data.DataColumn
        
        Private columnTOTAL_AMOUNT As Global.System.Data.DataColumn
        
        Private columnTOTAL_PECENTAGE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXPENSES_RENTAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_EXRENTKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_EXRENTKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_DEDUCTIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_DEDUCTIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENT_DEDUCTIBLE_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENT_DEDUCTIBLE_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PecentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPecentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL_PECENTAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL_PECENTAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXPENSES_RENTALRow
            Get
                Return CType(Me.Rows(index),EXPENSES_RENTALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTALRowChanging As EXPENSES_RENTALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTALRowChanged As EXPENSES_RENTALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTALRowDeleting As EXPENSES_RENTALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTALRowDeleted As EXPENSES_RENTALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEXPENSES_RENTALRow(ByVal row As EXPENSES_RENTALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEXPENSES_RENTALRow( _
                    ByVal EXRENT_KEY As Integer,  _
                    ByVal EXRENT_SOURCENO As Integer,  _
                    ByVal EXRENT_DESC As String,  _
                    ByVal EXRENT_AMOUNT As Decimal,  _
                    ByVal EXRENT_DEDUCTIBLE As Boolean,  _
                    ByVal EXRENT_NOTE As String,  _
                    ByVal EXRENT_DETAIL As String,  _
                    ByVal EXRENT_DEDUCTIBLE_ADD As Boolean,  _
                    ByVal RowIndex As Integer,  _
                    ByVal PecentageAmount As Decimal,  _
                    ByVal Address As String,  _
                    ByVal Note As String,  _
                    ByVal parentPNL_TABLE_INFORowByFK_EXPENSES_RENTAL As PNL_TABLE_INFORow,  _
                    ByVal TITLE As String,  _
                    ByVal SCH As String,  _
                    ByVal TOTAL_AMOUNT As Decimal,  _
                    ByVal TOTAL_PECENTAGE As Decimal) As EXPENSES_RENTALRow
            Dim rowEXPENSES_RENTALRow As EXPENSES_RENTALRow = CType(Me.NewRow,EXPENSES_RENTALRow)
            Dim columnValuesArray() As Object = New Object() {EXRENT_KEY, Nothing, EXRENT_SOURCENO, EXRENT_DESC, EXRENT_AMOUNT, EXRENT_DEDUCTIBLE, EXRENT_NOTE, EXRENT_DETAIL, EXRENT_DEDUCTIBLE_ADD, RowIndex, PecentageAmount, Address, Note, Nothing, TITLE, SCH, TOTAL_AMOUNT, TOTAL_PECENTAGE}
            If (Not (parentPNL_TABLE_INFORowByFK_EXPENSES_RENTAL) Is Nothing) Then
                columnValuesArray(13) = parentPNL_TABLE_INFORowByFK_EXPENSES_RENTAL(1)
            End If
            rowEXPENSES_RENTALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXPENSES_RENTALRow)
            Return rowEXPENSES_RENTALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEXRENT_EXRENTKEY(ByVal EXRENT_EXRENTKEY As Integer) As EXPENSES_RENTALRow
            Return CType(Me.Rows.Find(New Object() {EXRENT_EXRENTKEY}),EXPENSES_RENTALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXPENSES_RENTALDataTable = CType(MyBase.Clone,EXPENSES_RENTALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXPENSES_RENTALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEXRENT_KEY = MyBase.Columns("EXRENT_KEY")
            Me.columnEXRENT_EXRENTKEY = MyBase.Columns("EXRENT_EXRENTKEY")
            Me.columnEXRENT_SOURCENO = MyBase.Columns("EXRENT_SOURCENO")
            Me.columnEXRENT_DESC = MyBase.Columns("EXRENT_DESC")
            Me.columnEXRENT_AMOUNT = MyBase.Columns("EXRENT_AMOUNT")
            Me.columnEXRENT_DEDUCTIBLE = MyBase.Columns("EXRENT_DEDUCTIBLE")
            Me.columnEXRENT_NOTE = MyBase.Columns("EXRENT_NOTE")
            Me.columnEXRENT_DETAIL = MyBase.Columns("EXRENT_DETAIL")
            Me.columnEXRENT_DEDUCTIBLE_ADD = MyBase.Columns("EXRENT_DEDUCTIBLE_ADD")
            Me.columnRowIndex = MyBase.Columns("RowIndex")
            Me.columnPecentageAmount = MyBase.Columns("PecentageAmount")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnTITLE = MyBase.Columns("TITLE")
            Me.columnSCH = MyBase.Columns("SCH")
            Me.columnTOTAL_AMOUNT = MyBase.Columns("TOTAL_AMOUNT")
            Me.columnTOTAL_PECENTAGE = MyBase.Columns("TOTAL_PECENTAGE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEXRENT_KEY = New Global.System.Data.DataColumn("EXRENT_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_KEY)
            Me.columnEXRENT_EXRENTKEY = New Global.System.Data.DataColumn("EXRENT_EXRENTKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_EXRENTKEY)
            Me.columnEXRENT_SOURCENO = New Global.System.Data.DataColumn("EXRENT_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_SOURCENO)
            Me.columnEXRENT_DESC = New Global.System.Data.DataColumn("EXRENT_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_DESC)
            Me.columnEXRENT_AMOUNT = New Global.System.Data.DataColumn("EXRENT_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_AMOUNT)
            Me.columnEXRENT_DEDUCTIBLE = New Global.System.Data.DataColumn("EXRENT_DEDUCTIBLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_DEDUCTIBLE)
            Me.columnEXRENT_NOTE = New Global.System.Data.DataColumn("EXRENT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_NOTE)
            Me.columnEXRENT_DETAIL = New Global.System.Data.DataColumn("EXRENT_DETAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_DETAIL)
            Me.columnEXRENT_DEDUCTIBLE_ADD = New Global.System.Data.DataColumn("EXRENT_DEDUCTIBLE_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENT_DEDUCTIBLE_ADD)
            Me.columnRowIndex = New Global.System.Data.DataColumn("RowIndex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowIndex)
            Me.columnPecentageAmount = New Global.System.Data.DataColumn("PecentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPecentageAmount)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnTITLE = New Global.System.Data.DataColumn("TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTITLE)
            Me.columnSCH = New Global.System.Data.DataColumn("SCH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCH)
            Me.columnTOTAL_AMOUNT = New Global.System.Data.DataColumn("TOTAL_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_AMOUNT)
            Me.columnTOTAL_PECENTAGE = New Global.System.Data.DataColumn("TOTAL_PECENTAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL_PECENTAGE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEXRENT_EXRENTKEY}, true))
            Me.columnEXRENT_EXRENTKEY.AutoIncrement = true
            Me.columnEXRENT_EXRENTKEY.AllowDBNull = false
            Me.columnEXRENT_EXRENTKEY.Unique = true
            Me.columnEXRENT_DESC.MaxLength = 255
            Me.columnEXRENT_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnEXRENT_DEDUCTIBLE.DefaultValue = CType(false,Boolean)
            Me.columnEXRENT_NOTE.MaxLength = 3000
            Me.columnEXRENT_DETAIL.MaxLength = 30
            Me.columnEXRENT_DEDUCTIBLE_ADD.DefaultValue = CType(false,Boolean)
            Me.columnKEYNAME.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEXPENSES_RENTALRow() As EXPENSES_RENTALRow
            Return CType(Me.NewRow,EXPENSES_RENTALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXPENSES_RENTALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXPENSES_RENTALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXPENSES_RENTALRowChangedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTALRowChanged(Me, New EXPENSES_RENTALRowChangeEvent(CType(e.Row,EXPENSES_RENTALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXPENSES_RENTALRowChangingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTALRowChanging(Me, New EXPENSES_RENTALRowChangeEvent(CType(e.Row,EXPENSES_RENTALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXPENSES_RENTALRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTALRowDeleted(Me, New EXPENSES_RENTALRowChangeEvent(CType(e.Row,EXPENSES_RENTALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXPENSES_RENTALRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTALRowDeleting(Me, New EXPENSES_RENTALRowChangeEvent(CType(e.Row,EXPENSES_RENTALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEXPENSES_RENTALRow(ByVal row As EXPENSES_RENTALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXPENSES_RENTALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXPENSES_RENTAL_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXPENSES_RENTAL_DETAILRow)
        
        Private columnEXRENTD_KEY As Global.System.Data.DataColumn
        
        Private columnEXRENTD_EXRENTKEY As Global.System.Data.DataColumn
        
        Private columnEXRENTD_SOURCENO As Global.System.Data.DataColumn
        
        Private columnEXRENTD_EXRENTDKEY As Global.System.Data.DataColumn
        
        Private columnEXRENTD_DESC As Global.System.Data.DataColumn
        
        Private columnEXRENTD_DEDUCTIBLE As Global.System.Data.DataColumn
        
        Private columnEXRENTD_AMOUNT As Global.System.Data.DataColumn
        
        Private columnEXRENTD_NOTE As Global.System.Data.DataColumn
        
        Private columnEXRENTD_DEDUCTIBLE_ADD As Global.System.Data.DataColumn
        
        Private columnRowIndex As Global.System.Data.DataColumn
        
        Private columnPecentageAmount As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXPENSES_RENTAL_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_EXRENTKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_EXRENTKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_EXRENTDKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_EXRENTDKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_DEDUCTIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_DEDUCTIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXRENTD_DEDUCTIBLE_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXRENTD_DEDUCTIBLE_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PecentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPecentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXPENSES_RENTAL_DETAILRow
            Get
                Return CType(Me.Rows(index),EXPENSES_RENTAL_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTAL_DETAILRowChanging As EXPENSES_RENTAL_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTAL_DETAILRowChanged As EXPENSES_RENTAL_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTAL_DETAILRowDeleting As EXPENSES_RENTAL_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_RENTAL_DETAILRowDeleted As EXPENSES_RENTAL_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEXPENSES_RENTAL_DETAILRow(ByVal row As EXPENSES_RENTAL_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEXPENSES_RENTAL_DETAILRow(ByVal EXRENTD_KEY As Integer, ByVal EXRENTD_SOURCENO As Integer, ByVal EXRENTD_DESC As String, ByVal EXRENTD_DEDUCTIBLE As Boolean, ByVal EXRENTD_AMOUNT As Decimal, ByVal EXRENTD_NOTE As String, ByVal EXRENTD_DEDUCTIBLE_ADD As Boolean, ByVal RowIndex As Integer, ByVal PecentageAmount As Decimal, ByVal Address As String, ByVal Note As String) As EXPENSES_RENTAL_DETAILRow
            Dim rowEXPENSES_RENTAL_DETAILRow As EXPENSES_RENTAL_DETAILRow = CType(Me.NewRow,EXPENSES_RENTAL_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {EXRENTD_KEY, Nothing, EXRENTD_SOURCENO, Nothing, EXRENTD_DESC, EXRENTD_DEDUCTIBLE, EXRENTD_AMOUNT, EXRENTD_NOTE, EXRENTD_DEDUCTIBLE_ADD, RowIndex, PecentageAmount, Address, Note}
            rowEXPENSES_RENTAL_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXPENSES_RENTAL_DETAILRow)
            Return rowEXPENSES_RENTAL_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByEXRENTD_EXRENTDKEY(ByVal EXRENTD_EXRENTDKEY As Integer) As EXPENSES_RENTAL_DETAILRow
            Return CType(Me.Rows.Find(New Object() {EXRENTD_EXRENTDKEY}),EXPENSES_RENTAL_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXPENSES_RENTAL_DETAILDataTable = CType(MyBase.Clone,EXPENSES_RENTAL_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXPENSES_RENTAL_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEXRENTD_KEY = MyBase.Columns("EXRENTD_KEY")
            Me.columnEXRENTD_EXRENTKEY = MyBase.Columns("EXRENTD_EXRENTKEY")
            Me.columnEXRENTD_SOURCENO = MyBase.Columns("EXRENTD_SOURCENO")
            Me.columnEXRENTD_EXRENTDKEY = MyBase.Columns("EXRENTD_EXRENTDKEY")
            Me.columnEXRENTD_DESC = MyBase.Columns("EXRENTD_DESC")
            Me.columnEXRENTD_DEDUCTIBLE = MyBase.Columns("EXRENTD_DEDUCTIBLE")
            Me.columnEXRENTD_AMOUNT = MyBase.Columns("EXRENTD_AMOUNT")
            Me.columnEXRENTD_NOTE = MyBase.Columns("EXRENTD_NOTE")
            Me.columnEXRENTD_DEDUCTIBLE_ADD = MyBase.Columns("EXRENTD_DEDUCTIBLE_ADD")
            Me.columnRowIndex = MyBase.Columns("RowIndex")
            Me.columnPecentageAmount = MyBase.Columns("PecentageAmount")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnNote = MyBase.Columns("Note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEXRENTD_KEY = New Global.System.Data.DataColumn("EXRENTD_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_KEY)
            Me.columnEXRENTD_EXRENTKEY = New Global.System.Data.DataColumn("EXRENTD_EXRENTKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_EXRENTKEY)
            Me.columnEXRENTD_SOURCENO = New Global.System.Data.DataColumn("EXRENTD_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_SOURCENO)
            Me.columnEXRENTD_EXRENTDKEY = New Global.System.Data.DataColumn("EXRENTD_EXRENTDKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_EXRENTDKEY)
            Me.columnEXRENTD_DESC = New Global.System.Data.DataColumn("EXRENTD_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_DESC)
            Me.columnEXRENTD_DEDUCTIBLE = New Global.System.Data.DataColumn("EXRENTD_DEDUCTIBLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_DEDUCTIBLE)
            Me.columnEXRENTD_AMOUNT = New Global.System.Data.DataColumn("EXRENTD_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_AMOUNT)
            Me.columnEXRENTD_NOTE = New Global.System.Data.DataColumn("EXRENTD_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_NOTE)
            Me.columnEXRENTD_DEDUCTIBLE_ADD = New Global.System.Data.DataColumn("EXRENTD_DEDUCTIBLE_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXRENTD_DEDUCTIBLE_ADD)
            Me.columnRowIndex = New Global.System.Data.DataColumn("RowIndex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowIndex)
            Me.columnPecentageAmount = New Global.System.Data.DataColumn("PecentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPecentageAmount)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEXRENTD_EXRENTDKEY}, true))
            Me.columnEXRENTD_EXRENTKEY.AutoIncrement = true
            Me.columnEXRENTD_EXRENTKEY.AllowDBNull = false
            Me.columnEXRENTD_EXRENTDKEY.AutoIncrement = true
            Me.columnEXRENTD_EXRENTDKEY.AllowDBNull = false
            Me.columnEXRENTD_EXRENTDKEY.Unique = true
            Me.columnEXRENTD_DESC.MaxLength = 255
            Me.columnEXRENTD_DEDUCTIBLE.DefaultValue = CType(false,Boolean)
            Me.columnEXRENTD_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnEXRENTD_NOTE.MaxLength = 3000
            Me.columnEXRENTD_DEDUCTIBLE_ADD.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEXPENSES_RENTAL_DETAILRow() As EXPENSES_RENTAL_DETAILRow
            Return CType(Me.NewRow,EXPENSES_RENTAL_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXPENSES_RENTAL_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXPENSES_RENTAL_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXPENSES_RENTAL_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTAL_DETAILRowChanged(Me, New EXPENSES_RENTAL_DETAILRowChangeEvent(CType(e.Row,EXPENSES_RENTAL_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXPENSES_RENTAL_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTAL_DETAILRowChanging(Me, New EXPENSES_RENTAL_DETAILRowChangeEvent(CType(e.Row,EXPENSES_RENTAL_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXPENSES_RENTAL_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTAL_DETAILRowDeleted(Me, New EXPENSES_RENTAL_DETAILRowChangeEvent(CType(e.Row,EXPENSES_RENTAL_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXPENSES_RENTAL_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_RENTAL_DETAILRowDeleting(Me, New EXPENSES_RENTAL_DETAILRowChangeEvent(CType(e.Row,EXPENSES_RENTAL_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEXPENSES_RENTAL_DETAILRow(ByVal row As EXPENSES_RENTAL_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXPENSES_RENTAL_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXPENSES_INTERESTRESTRICTDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXPENSES_INTERESTRESTRICTRow)
        
        Private columnEXIR_KEY As Global.System.Data.DataColumn
        
        Private columnEXIR_EXIRKEY As Global.System.Data.DataColumn
        
        Private columnEXIR_SOURCENO As Global.System.Data.DataColumn
        
        Private columnEXIR_AMOUNT As Global.System.Data.DataColumn
        
        Private columnEXIR_DESC As Global.System.Data.DataColumn
        
        Private columnEXIR_DEDUCTIBLE As Global.System.Data.DataColumn
        
        Private columnEXIR_NOTE As Global.System.Data.DataColumn
        
        Private columnEXIR_DETAIL As Global.System.Data.DataColumn
        
        Private columnEXIR_YEAREND As Global.System.Data.DataColumn
        
        Private columnEXIR_STATUS As Global.System.Data.DataColumn
        
        Private columnEXIR_DEDUCTIBLE_ADD As Global.System.Data.DataColumn
        
        Private columnRowIndex As Global.System.Data.DataColumn
        
        Private columnPecentageAmount As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXPENSES_INTERESTRESTRICT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_EXIRKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_EXIRKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_DEDUCTIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_DEDUCTIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_YEARENDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_YEAREND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXIR_DEDUCTIBLE_ADDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXIR_DEDUCTIBLE_ADD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RowIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRowIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PecentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPecentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXPENSES_INTERESTRESTRICTRow
            Get
                Return CType(Me.Rows(index),EXPENSES_INTERESTRESTRICTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_INTERESTRESTRICTRowChanging As EXPENSES_INTERESTRESTRICTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_INTERESTRESTRICTRowChanged As EXPENSES_INTERESTRESTRICTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_INTERESTRESTRICTRowDeleting As EXPENSES_INTERESTRESTRICTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event EXPENSES_INTERESTRESTRICTRowDeleted As EXPENSES_INTERESTRESTRICTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddEXPENSES_INTERESTRESTRICTRow(ByVal row As EXPENSES_INTERESTRESTRICTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddEXPENSES_INTERESTRESTRICTRow(ByVal EXIR_KEY As Integer, ByVal EXIR_SOURCENO As Integer, ByVal EXIR_AMOUNT As Decimal, ByVal EXIR_DESC As String, ByVal EXIR_DEDUCTIBLE As Boolean, ByVal EXIR_NOTE As String, ByVal EXIR_DETAIL As String, ByVal EXIR_YEAREND As Decimal, ByVal EXIR_STATUS As String, ByVal EXIR_DEDUCTIBLE_ADD As Boolean, ByVal RowIndex As Integer, ByVal PecentageAmount As Decimal, ByVal Note As String) As EXPENSES_INTERESTRESTRICTRow
            Dim rowEXPENSES_INTERESTRESTRICTRow As EXPENSES_INTERESTRESTRICTRow = CType(Me.NewRow,EXPENSES_INTERESTRESTRICTRow)
            Dim columnValuesArray() As Object = New Object() {EXIR_KEY, Nothing, EXIR_SOURCENO, EXIR_AMOUNT, EXIR_DESC, EXIR_DEDUCTIBLE, EXIR_NOTE, EXIR_DETAIL, EXIR_YEAREND, EXIR_STATUS, EXIR_DEDUCTIBLE_ADD, RowIndex, PecentageAmount, Note}
            rowEXPENSES_INTERESTRESTRICTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXPENSES_INTERESTRESTRICTRow)
            Return rowEXPENSES_INTERESTRESTRICTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXPENSES_INTERESTRESTRICTDataTable = CType(MyBase.Clone,EXPENSES_INTERESTRESTRICTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXPENSES_INTERESTRESTRICTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnEXIR_KEY = MyBase.Columns("EXIR_KEY")
            Me.columnEXIR_EXIRKEY = MyBase.Columns("EXIR_EXIRKEY")
            Me.columnEXIR_SOURCENO = MyBase.Columns("EXIR_SOURCENO")
            Me.columnEXIR_AMOUNT = MyBase.Columns("EXIR_AMOUNT")
            Me.columnEXIR_DESC = MyBase.Columns("EXIR_DESC")
            Me.columnEXIR_DEDUCTIBLE = MyBase.Columns("EXIR_DEDUCTIBLE")
            Me.columnEXIR_NOTE = MyBase.Columns("EXIR_NOTE")
            Me.columnEXIR_DETAIL = MyBase.Columns("EXIR_DETAIL")
            Me.columnEXIR_YEAREND = MyBase.Columns("EXIR_YEAREND")
            Me.columnEXIR_STATUS = MyBase.Columns("EXIR_STATUS")
            Me.columnEXIR_DEDUCTIBLE_ADD = MyBase.Columns("EXIR_DEDUCTIBLE_ADD")
            Me.columnRowIndex = MyBase.Columns("RowIndex")
            Me.columnPecentageAmount = MyBase.Columns("PecentageAmount")
            Me.columnNote = MyBase.Columns("Note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnEXIR_KEY = New Global.System.Data.DataColumn("EXIR_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_KEY)
            Me.columnEXIR_EXIRKEY = New Global.System.Data.DataColumn("EXIR_EXIRKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_EXIRKEY)
            Me.columnEXIR_SOURCENO = New Global.System.Data.DataColumn("EXIR_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_SOURCENO)
            Me.columnEXIR_AMOUNT = New Global.System.Data.DataColumn("EXIR_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_AMOUNT)
            Me.columnEXIR_DESC = New Global.System.Data.DataColumn("EXIR_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_DESC)
            Me.columnEXIR_DEDUCTIBLE = New Global.System.Data.DataColumn("EXIR_DEDUCTIBLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_DEDUCTIBLE)
            Me.columnEXIR_NOTE = New Global.System.Data.DataColumn("EXIR_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_NOTE)
            Me.columnEXIR_DETAIL = New Global.System.Data.DataColumn("EXIR_DETAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_DETAIL)
            Me.columnEXIR_YEAREND = New Global.System.Data.DataColumn("EXIR_YEAREND", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_YEAREND)
            Me.columnEXIR_STATUS = New Global.System.Data.DataColumn("EXIR_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_STATUS)
            Me.columnEXIR_DEDUCTIBLE_ADD = New Global.System.Data.DataColumn("EXIR_DEDUCTIBLE_ADD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXIR_DEDUCTIBLE_ADD)
            Me.columnRowIndex = New Global.System.Data.DataColumn("RowIndex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRowIndex)
            Me.columnPecentageAmount = New Global.System.Data.DataColumn("PecentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPecentageAmount)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnEXIR_SOURCENO}, false))
            Me.columnEXIR_EXIRKEY.AutoIncrement = true
            Me.columnEXIR_EXIRKEY.AllowDBNull = false
            Me.columnEXIR_SOURCENO.Unique = true
            Me.columnEXIR_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnEXIR_DESC.MaxLength = 255
            Me.columnEXIR_DEDUCTIBLE.DefaultValue = CType(false,Boolean)
            Me.columnEXIR_NOTE.MaxLength = 3000
            Me.columnEXIR_DETAIL.MaxLength = 30
            Me.columnEXIR_YEAREND.DefaultValue = CType(0D,Decimal)
            Me.columnEXIR_STATUS.MaxLength = 10
            Me.columnEXIR_DEDUCTIBLE_ADD.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewEXPENSES_INTERESTRESTRICTRow() As EXPENSES_INTERESTRESTRICTRow
            Return CType(Me.NewRow,EXPENSES_INTERESTRESTRICTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXPENSES_INTERESTRESTRICTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXPENSES_INTERESTRESTRICTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXPENSES_INTERESTRESTRICTRowChangedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_INTERESTRESTRICTRowChanged(Me, New EXPENSES_INTERESTRESTRICTRowChangeEvent(CType(e.Row,EXPENSES_INTERESTRESTRICTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXPENSES_INTERESTRESTRICTRowChangingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_INTERESTRESTRICTRowChanging(Me, New EXPENSES_INTERESTRESTRICTRowChangeEvent(CType(e.Row,EXPENSES_INTERESTRESTRICTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXPENSES_INTERESTRESTRICTRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXPENSES_INTERESTRESTRICTRowDeleted(Me, New EXPENSES_INTERESTRESTRICTRowChangeEvent(CType(e.Row,EXPENSES_INTERESTRESTRICTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXPENSES_INTERESTRESTRICTRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXPENSES_INTERESTRESTRICTRowDeleting(Me, New EXPENSES_INTERESTRESTRICTRowChangeEvent(CType(e.Row,EXPENSES_INTERESTRESTRICTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveEXPENSES_INTERESTRESTRICTRow(ByVal row As EXPENSES_INTERESTRESTRICTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXPENSES_INTERESTRESTRICTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable
        Inherits Global.System.Data.TypedTableBase(Of REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
        
        Private columnRIRD_KEY As Global.System.Data.DataColumn
        
        Private columnRIR_REF_NUM As Global.System.Data.DataColumn
        
        Private columnRIRD_MONTH As Global.System.Data.DataColumn
        
        Private columnRIRD_TYPE As Global.System.Data.DataColumn
        
        Private columnRIRD_DESC As Global.System.Data.DataColumn
        
        Private columnRIRD_AMOUNT As Global.System.Data.DataColumn
        
        Private columnRIRD_NOTE As Global.System.Data.DataColumn
        
        Private columnRIRD_SOURCENO As Global.System.Data.DataColumn
        
        Private columnRIRD_TYPE_INCOME As Global.System.Data.DataColumn
        
        Private columnPecentageAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REF_INTEREST_RESTRIC_DETAIL_MONTHLY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIR_REF_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIR_REF_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_MONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_MONTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_TYPE_INCOMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_TYPE_INCOME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PecentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPecentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
            Get
                Return CType(Me.Rows(index),REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChanging As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChanged As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeleting As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeleted As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow(ByVal row As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow(ByVal RIRD_KEY As Integer, ByVal RIR_REF_NUM As Integer, ByVal RIRD_MONTH As String, ByVal RIRD_TYPE As String, ByVal RIRD_DESC As String, ByVal RIRD_AMOUNT As Decimal, ByVal RIRD_NOTE As String, ByVal RIRD_SOURCENO As Integer, ByVal RIRD_TYPE_INCOME As String, ByVal PecentageAmount As Decimal) As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
            Dim rowREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow = CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
            Dim columnValuesArray() As Object = New Object() {RIRD_KEY, RIR_REF_NUM, RIRD_MONTH, RIRD_TYPE, RIRD_DESC, RIRD_AMOUNT, RIRD_NOTE, RIRD_SOURCENO, RIRD_TYPE_INCOME, PecentageAmount}
            rowREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
            Return rowREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable = CType(MyBase.Clone,REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRIRD_KEY = MyBase.Columns("RIRD_KEY")
            Me.columnRIR_REF_NUM = MyBase.Columns("RIR_REF_NUM")
            Me.columnRIRD_MONTH = MyBase.Columns("RIRD_MONTH")
            Me.columnRIRD_TYPE = MyBase.Columns("RIRD_TYPE")
            Me.columnRIRD_DESC = MyBase.Columns("RIRD_DESC")
            Me.columnRIRD_AMOUNT = MyBase.Columns("RIRD_AMOUNT")
            Me.columnRIRD_NOTE = MyBase.Columns("RIRD_NOTE")
            Me.columnRIRD_SOURCENO = MyBase.Columns("RIRD_SOURCENO")
            Me.columnRIRD_TYPE_INCOME = MyBase.Columns("RIRD_TYPE_INCOME")
            Me.columnPecentageAmount = MyBase.Columns("PecentageAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRIRD_KEY = New Global.System.Data.DataColumn("RIRD_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_KEY)
            Me.columnRIR_REF_NUM = New Global.System.Data.DataColumn("RIR_REF_NUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIR_REF_NUM)
            Me.columnRIRD_MONTH = New Global.System.Data.DataColumn("RIRD_MONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_MONTH)
            Me.columnRIRD_TYPE = New Global.System.Data.DataColumn("RIRD_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_TYPE)
            Me.columnRIRD_DESC = New Global.System.Data.DataColumn("RIRD_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_DESC)
            Me.columnRIRD_AMOUNT = New Global.System.Data.DataColumn("RIRD_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_AMOUNT)
            Me.columnRIRD_NOTE = New Global.System.Data.DataColumn("RIRD_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_NOTE)
            Me.columnRIRD_SOURCENO = New Global.System.Data.DataColumn("RIRD_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_SOURCENO)
            Me.columnRIRD_TYPE_INCOME = New Global.System.Data.DataColumn("RIRD_TYPE_INCOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_TYPE_INCOME)
            Me.columnPecentageAmount = New Global.System.Data.DataColumn("PecentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPecentageAmount)
            Me.columnRIRD_MONTH.MaxLength = 50
            Me.columnRIRD_TYPE.MaxLength = 50
            Me.columnRIRD_DESC.MaxLength = 50
            Me.columnRIRD_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnRIRD_NOTE.MaxLength = 2147483647
            Me.columnRIRD_TYPE_INCOME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow() As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
            Return CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChanged(Me, New REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChanging(Me, New REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeletedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeleted(Me, New REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeletingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowDeleting(Me, New REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREF_INTEREST_RESTRIC_DETAIL_MONTHLYRow(ByVal row As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REF_INTEREST_RESTRIC_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of REF_INTEREST_RESTRIC_DETAILRow)
        
        Private columnRIRD_KEY As Global.System.Data.DataColumn
        
        Private columnRIR_REF_NUM As Global.System.Data.DataColumn
        
        Private columnRIRD_MONTH As Global.System.Data.DataColumn
        
        Private columnRIRD_TYPE As Global.System.Data.DataColumn
        
        Private columnRIRD_DESC As Global.System.Data.DataColumn
        
        Private columnRIRD_AMOUNT As Global.System.Data.DataColumn
        
        Private columnRIRD_NOTE As Global.System.Data.DataColumn
        
        Private columnRIRD_SOURCENO As Global.System.Data.DataColumn
        
        Private columnRIRD_TYPE_INCOME As Global.System.Data.DataColumn
        
        Private columnPecentageAmount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REF_INTEREST_RESTRIC_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_KEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_KEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIR_REF_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIR_REF_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_MONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_MONTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_DESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_DESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_AMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIRD_TYPE_INCOMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIRD_TYPE_INCOME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PecentageAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPecentageAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REF_INTEREST_RESTRIC_DETAILRow
            Get
                Return CType(Me.Rows(index),REF_INTEREST_RESTRIC_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAILRowChanging As REF_INTEREST_RESTRIC_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAILRowChanged As REF_INTEREST_RESTRIC_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAILRowDeleting As REF_INTEREST_RESTRIC_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAILRowDeleted As REF_INTEREST_RESTRIC_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREF_INTEREST_RESTRIC_DETAILRow(ByVal row As REF_INTEREST_RESTRIC_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREF_INTEREST_RESTRIC_DETAILRow(ByVal RIRD_KEY As Integer, ByVal RIR_REF_NUM As Integer, ByVal RIRD_MONTH As String, ByVal RIRD_TYPE As String, ByVal RIRD_DESC As String, ByVal RIRD_AMOUNT As Decimal, ByVal RIRD_NOTE As String, ByVal RIRD_SOURCENO As Integer, ByVal RIRD_TYPE_INCOME As String, ByVal PecentageAmount As Decimal) As REF_INTEREST_RESTRIC_DETAILRow
            Dim rowREF_INTEREST_RESTRIC_DETAILRow As REF_INTEREST_RESTRIC_DETAILRow = CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {RIRD_KEY, RIR_REF_NUM, RIRD_MONTH, RIRD_TYPE, RIRD_DESC, RIRD_AMOUNT, RIRD_NOTE, RIRD_SOURCENO, RIRD_TYPE_INCOME, PecentageAmount}
            rowREF_INTEREST_RESTRIC_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREF_INTEREST_RESTRIC_DETAILRow)
            Return rowREF_INTEREST_RESTRIC_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REF_INTEREST_RESTRIC_DETAILDataTable = CType(MyBase.Clone,REF_INTEREST_RESTRIC_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REF_INTEREST_RESTRIC_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRIRD_KEY = MyBase.Columns("RIRD_KEY")
            Me.columnRIR_REF_NUM = MyBase.Columns("RIR_REF_NUM")
            Me.columnRIRD_MONTH = MyBase.Columns("RIRD_MONTH")
            Me.columnRIRD_TYPE = MyBase.Columns("RIRD_TYPE")
            Me.columnRIRD_DESC = MyBase.Columns("RIRD_DESC")
            Me.columnRIRD_AMOUNT = MyBase.Columns("RIRD_AMOUNT")
            Me.columnRIRD_NOTE = MyBase.Columns("RIRD_NOTE")
            Me.columnRIRD_SOURCENO = MyBase.Columns("RIRD_SOURCENO")
            Me.columnRIRD_TYPE_INCOME = MyBase.Columns("RIRD_TYPE_INCOME")
            Me.columnPecentageAmount = MyBase.Columns("PecentageAmount")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRIRD_KEY = New Global.System.Data.DataColumn("RIRD_KEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_KEY)
            Me.columnRIR_REF_NUM = New Global.System.Data.DataColumn("RIR_REF_NUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIR_REF_NUM)
            Me.columnRIRD_MONTH = New Global.System.Data.DataColumn("RIRD_MONTH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_MONTH)
            Me.columnRIRD_TYPE = New Global.System.Data.DataColumn("RIRD_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_TYPE)
            Me.columnRIRD_DESC = New Global.System.Data.DataColumn("RIRD_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_DESC)
            Me.columnRIRD_AMOUNT = New Global.System.Data.DataColumn("RIRD_AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_AMOUNT)
            Me.columnRIRD_NOTE = New Global.System.Data.DataColumn("RIRD_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_NOTE)
            Me.columnRIRD_SOURCENO = New Global.System.Data.DataColumn("RIRD_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_SOURCENO)
            Me.columnRIRD_TYPE_INCOME = New Global.System.Data.DataColumn("RIRD_TYPE_INCOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIRD_TYPE_INCOME)
            Me.columnPecentageAmount = New Global.System.Data.DataColumn("PecentageAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPecentageAmount)
            Me.columnRIRD_MONTH.MaxLength = 50
            Me.columnRIRD_TYPE.MaxLength = 50
            Me.columnRIRD_DESC.MaxLength = 50
            Me.columnRIRD_AMOUNT.DefaultValue = CType(0D,Decimal)
            Me.columnRIRD_NOTE.MaxLength = 2147483647
            Me.columnRIRD_TYPE_INCOME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREF_INTEREST_RESTRIC_DETAILRow() As REF_INTEREST_RESTRIC_DETAILRow
            Return CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REF_INTEREST_RESTRIC_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REF_INTEREST_RESTRIC_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAILRowChanged(Me, New REF_INTEREST_RESTRIC_DETAILRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAILRowChanging(Me, New REF_INTEREST_RESTRIC_DETAILRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAILRowDeleted(Me, New REF_INTEREST_RESTRIC_DETAILRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAILRowDeleting(Me, New REF_INTEREST_RESTRIC_DETAILRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREF_INTEREST_RESTRIC_DETAILRow(ByVal row As REF_INTEREST_RESTRIC_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REF_INTEREST_RESTRIC_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INTEREST_RESTRIC_MONTLY_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of INTEREST_RESTRIC_MONTLY_REPORTRow)
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INTEREST_RESTRIC_MONTLY_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INTEREST_RESTRIC_MONTLY_REPORTRow
            Get
                Return CType(Me.Rows(index),INTEREST_RESTRIC_MONTLY_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORTRowChanging As INTEREST_RESTRIC_MONTLY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORTRowChanged As INTEREST_RESTRIC_MONTLY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORTRowDeleting As INTEREST_RESTRIC_MONTLY_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORTRowDeleted As INTEREST_RESTRIC_MONTLY_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINTEREST_RESTRIC_MONTLY_REPORTRow(ByVal row As INTEREST_RESTRIC_MONTLY_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINTEREST_RESTRIC_MONTLY_REPORTRow() As INTEREST_RESTRIC_MONTLY_REPORTRow
            Dim rowINTEREST_RESTRIC_MONTLY_REPORTRow As INTEREST_RESTRIC_MONTLY_REPORTRow = CType(Me.NewRow,INTEREST_RESTRIC_MONTLY_REPORTRow)
            Dim columnValuesArray(-1) As Object
            rowINTEREST_RESTRIC_MONTLY_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINTEREST_RESTRIC_MONTLY_REPORTRow)
            Return rowINTEREST_RESTRIC_MONTLY_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INTEREST_RESTRIC_MONTLY_REPORTDataTable = CType(MyBase.Clone,INTEREST_RESTRIC_MONTLY_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INTEREST_RESTRIC_MONTLY_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINTEREST_RESTRIC_MONTLY_REPORTRow() As INTEREST_RESTRIC_MONTLY_REPORTRow
            Return CType(Me.NewRow,INTEREST_RESTRIC_MONTLY_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INTEREST_RESTRIC_MONTLY_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INTEREST_RESTRIC_MONTLY_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORTRowChanged(Me, New INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORTRowChanging(Me, New INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORTRowDeleted(Me, New INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORTRowDeleting(Me, New INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINTEREST_RESTRIC_MONTLY_REPORTRow(ByVal row As INTEREST_RESTRIC_MONTLY_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INTEREST_RESTRIC_MONTLY_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REF_INTEREST_RESTRIC_TMPDataTable
        Inherits Global.System.Data.TypedTableBase(Of REF_INTEREST_RESTRIC_TMPRow)
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REF_INTEREST_RESTRIC_TMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REF_INTEREST_RESTRIC_TMPRow
            Get
                Return CType(Me.Rows(index),REF_INTEREST_RESTRIC_TMPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_TMPRowChanging As REF_INTEREST_RESTRIC_TMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_TMPRowChanged As REF_INTEREST_RESTRIC_TMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_TMPRowDeleting As REF_INTEREST_RESTRIC_TMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_TMPRowDeleted As REF_INTEREST_RESTRIC_TMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREF_INTEREST_RESTRIC_TMPRow(ByVal row As REF_INTEREST_RESTRIC_TMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREF_INTEREST_RESTRIC_TMPRow() As REF_INTEREST_RESTRIC_TMPRow
            Dim rowREF_INTEREST_RESTRIC_TMPRow As REF_INTEREST_RESTRIC_TMPRow = CType(Me.NewRow,REF_INTEREST_RESTRIC_TMPRow)
            Dim columnValuesArray(-1) As Object
            rowREF_INTEREST_RESTRIC_TMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREF_INTEREST_RESTRIC_TMPRow)
            Return rowREF_INTEREST_RESTRIC_TMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REF_INTEREST_RESTRIC_TMPDataTable = CType(MyBase.Clone,REF_INTEREST_RESTRIC_TMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REF_INTEREST_RESTRIC_TMPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREF_INTEREST_RESTRIC_TMPRow() As REF_INTEREST_RESTRIC_TMPRow
            Return CType(Me.NewRow,REF_INTEREST_RESTRIC_TMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REF_INTEREST_RESTRIC_TMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REF_INTEREST_RESTRIC_TMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REF_INTEREST_RESTRIC_TMPRowChangedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_TMPRowChanged(Me, New REF_INTEREST_RESTRIC_TMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_TMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REF_INTEREST_RESTRIC_TMPRowChangingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_TMPRowChanging(Me, New REF_INTEREST_RESTRIC_TMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_TMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REF_INTEREST_RESTRIC_TMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_TMPRowDeleted(Me, New REF_INTEREST_RESTRIC_TMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_TMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REF_INTEREST_RESTRIC_TMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_TMPRowDeleting(Me, New REF_INTEREST_RESTRIC_TMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_TMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREF_INTEREST_RESTRIC_TMPRow(ByVal row As REF_INTEREST_RESTRIC_TMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REF_INTEREST_RESTRIC_TMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REF_INTEREST_RESTRICDataTable
        Inherits Global.System.Data.TypedTableBase(Of REF_INTEREST_RESTRICRow)
        
        Private columnTP_REF_NO As Global.System.Data.DataColumn
        
        Private columnCOLUMN_NAME As Global.System.Data.DataColumn
        
        Private columnDURATION As Global.System.Data.DataColumn
        
        Private columnREF_NUM As Global.System.Data.DataColumn
        
        Private column300 As Global.System.Data.DataColumn
        
        Private columnYOA As Global.System.Data.DataColumn
        
        Private columnBASICPERIOD As Global.System.Data.DataColumn
        
        Private columnRIR_SOURCENO As Global.System.Data.DataColumn
        
        Private columnTYPE_INCOME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REF_INTEREST_RESTRIC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TP_REF_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTP_REF_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COLUMN_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOLUMN_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DURATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDURATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REF_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREF_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _300Column() As Global.System.Data.DataColumn
            Get
                Return Me.column300
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YOAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYOA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BASICPERIODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASICPERIOD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIR_SOURCENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIR_SOURCENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TYPE_INCOMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTYPE_INCOME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REF_INTEREST_RESTRICRow
            Get
                Return CType(Me.Rows(index),REF_INTEREST_RESTRICRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRICRowChanging As REF_INTEREST_RESTRICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRICRowChanged As REF_INTEREST_RESTRICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRICRowDeleting As REF_INTEREST_RESTRICRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRICRowDeleted As REF_INTEREST_RESTRICRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREF_INTEREST_RESTRICRow(ByVal row As REF_INTEREST_RESTRICRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREF_INTEREST_RESTRICRow(ByVal TP_REF_NO As String, ByVal COLUMN_NAME As String, ByVal DURATION As Integer, ByVal REF_NUM As Integer, ByVal _300 As String, ByVal YOA As String, ByVal BASICPERIOD As Date, ByVal RIR_SOURCENO As Integer, ByVal TYPE_INCOME As String) As REF_INTEREST_RESTRICRow
            Dim rowREF_INTEREST_RESTRICRow As REF_INTEREST_RESTRICRow = CType(Me.NewRow,REF_INTEREST_RESTRICRow)
            Dim columnValuesArray() As Object = New Object() {TP_REF_NO, COLUMN_NAME, DURATION, REF_NUM, _300, YOA, BASICPERIOD, RIR_SOURCENO, TYPE_INCOME}
            rowREF_INTEREST_RESTRICRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREF_INTEREST_RESTRICRow)
            Return rowREF_INTEREST_RESTRICRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REF_INTEREST_RESTRICDataTable = CType(MyBase.Clone,REF_INTEREST_RESTRICDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REF_INTEREST_RESTRICDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTP_REF_NO = MyBase.Columns("TP_REF_NO")
            Me.columnCOLUMN_NAME = MyBase.Columns("COLUMN_NAME")
            Me.columnDURATION = MyBase.Columns("DURATION")
            Me.columnREF_NUM = MyBase.Columns("REF_NUM")
            Me.column300 = MyBase.Columns("300")
            Me.columnYOA = MyBase.Columns("YOA")
            Me.columnBASICPERIOD = MyBase.Columns("BASICPERIOD")
            Me.columnRIR_SOURCENO = MyBase.Columns("RIR_SOURCENO")
            Me.columnTYPE_INCOME = MyBase.Columns("TYPE_INCOME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTP_REF_NO = New Global.System.Data.DataColumn("TP_REF_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTP_REF_NO)
            Me.columnCOLUMN_NAME = New Global.System.Data.DataColumn("COLUMN_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOLUMN_NAME)
            Me.columnDURATION = New Global.System.Data.DataColumn("DURATION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDURATION)
            Me.columnREF_NUM = New Global.System.Data.DataColumn("REF_NUM", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREF_NUM)
            Me.column300 = New Global.System.Data.DataColumn("300", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column300.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column300")
            Me.column300.ExtendedProperties.Add("Generator_UserColumnName", "300")
            MyBase.Columns.Add(Me.column300)
            Me.columnYOA = New Global.System.Data.DataColumn("YOA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYOA)
            Me.columnBASICPERIOD = New Global.System.Data.DataColumn("BASICPERIOD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASICPERIOD)
            Me.columnRIR_SOURCENO = New Global.System.Data.DataColumn("RIR_SOURCENO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIR_SOURCENO)
            Me.columnTYPE_INCOME = New Global.System.Data.DataColumn("TYPE_INCOME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTYPE_INCOME)
            Me.columnTP_REF_NO.MaxLength = 20
            Me.columnCOLUMN_NAME.MaxLength = 50
            Me.column300.MaxLength = 10
            Me.columnYOA.MaxLength = 10
            Me.columnTYPE_INCOME.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREF_INTEREST_RESTRICRow() As REF_INTEREST_RESTRICRow
            Return CType(Me.NewRow,REF_INTEREST_RESTRICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REF_INTEREST_RESTRICRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REF_INTEREST_RESTRICRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REF_INTEREST_RESTRICRowChangedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRICRowChanged(Me, New REF_INTEREST_RESTRICRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REF_INTEREST_RESTRICRowChangingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRICRowChanging(Me, New REF_INTEREST_RESTRICRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REF_INTEREST_RESTRICRowDeletedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRICRowDeleted(Me, New REF_INTEREST_RESTRICRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REF_INTEREST_RESTRICRowDeletingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRICRowDeleting(Me, New REF_INTEREST_RESTRICRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRICRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREF_INTEREST_RESTRICRow(ByVal row As REF_INTEREST_RESTRICRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REF_INTEREST_RESTRICDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable
        Inherits Global.System.Data.TypedTableBase(Of REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
            Get
                Return CType(Me.Rows(index),REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChanging As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChanged As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeleting As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeleted As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow(ByVal row As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow() As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
            Dim rowREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow = CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
            Dim columnValuesArray(-1) As Object
            rowREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
            Return rowREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable = CType(MyBase.Clone,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow() As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
            Return CType(Me.NewRow,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChanged(Me, New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChanging(Me, New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeletedEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeleted(Me, New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeletingEvent) Is Nothing) Then
                RaiseEvent REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowDeleting(Me, New REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent(CType(e.Row,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow(ByVal row As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable
        Inherits Global.System.Data.TypedTableBase(Of INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
        
        Private columnKeyID As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnTypeName As Global.System.Data.DataColumn
        
        Private columnTypeIncome As Global.System.Data.DataColumn
        
        Private columnNo1 As Global.System.Data.DataColumn
        
        Private columnNo2 As Global.System.Data.DataColumn
        
        Private columnNo3 As Global.System.Data.DataColumn
        
        Private columnNo4 As Global.System.Data.DataColumn
        
        Private columnNo5 As Global.System.Data.DataColumn
        
        Private columnNo6 As Global.System.Data.DataColumn
        
        Private columnNo7 As Global.System.Data.DataColumn
        
        Private columnNo8 As Global.System.Data.DataColumn
        
        Private columnNo9 As Global.System.Data.DataColumn
        
        Private columnNo10 As Global.System.Data.DataColumn
        
        Private columnNo11 As Global.System.Data.DataColumn
        
        Private columnNo12 As Global.System.Data.DataColumn
        
        Private columnNo13 As Global.System.Data.DataColumn
        
        Private columnNo14 As Global.System.Data.DataColumn
        
        Private columnNo15 As Global.System.Data.DataColumn
        
        Private columnNo16 As Global.System.Data.DataColumn
        
        Private columnNo17 As Global.System.Data.DataColumn
        
        Private columnNo18 As Global.System.Data.DataColumn
        
        Private columnTotalYear As Global.System.Data.DataColumn
        
        Private columnTotalColumn As Global.System.Data.DataColumn
        
        Private columnLabelTag As Global.System.Data.DataColumn
        
        Private columnDateFrom As Global.System.Data.DataColumn
        
        Private columnDateTo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "INTEREST_RESTRIC_MONTLY_REPORT_Tricor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeIncomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeIncome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property No18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalColumnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalColumn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelTagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabelTag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
            Get
                Return CType(Me.Rows(index),INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChanging As INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChanged As INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeleting As INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeleted As INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddINTEREST_RESTRIC_MONTLY_REPORT_TricorRow(ByVal row As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddINTEREST_RESTRIC_MONTLY_REPORT_TricorRow( _
                    ByVal KeyID As String,  _
                    ByVal Title As String,  _
                    ByVal TypeName As String,  _
                    ByVal TypeIncome As String,  _
                    ByVal No1 As Decimal,  _
                    ByVal No2 As Decimal,  _
                    ByVal No3 As Decimal,  _
                    ByVal No4 As Decimal,  _
                    ByVal No5 As Decimal,  _
                    ByVal No6 As Decimal,  _
                    ByVal No7 As Decimal,  _
                    ByVal No8 As Decimal,  _
                    ByVal No9 As Decimal,  _
                    ByVal No10 As Decimal,  _
                    ByVal No11 As Decimal,  _
                    ByVal No12 As Decimal,  _
                    ByVal No13 As Decimal,  _
                    ByVal No14 As Decimal,  _
                    ByVal No15 As Decimal,  _
                    ByVal No16 As Decimal,  _
                    ByVal No17 As Decimal,  _
                    ByVal No18 As Decimal,  _
                    ByVal TotalYear As String,  _
                    ByVal TotalColumn As Short,  _
                    ByVal LabelTag As String,  _
                    ByVal DateFrom As Date,  _
                    ByVal DateTo As Date) As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
            Dim rowINTEREST_RESTRIC_MONTLY_REPORT_TricorRow As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow = CType(Me.NewRow,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
            Dim columnValuesArray() As Object = New Object() {KeyID, Title, TypeName, TypeIncome, No1, No2, No3, No4, No5, No6, No7, No8, No9, No10, No11, No12, No13, No14, No15, No16, No17, No18, TotalYear, TotalColumn, LabelTag, DateFrom, DateTo}
            rowINTEREST_RESTRIC_MONTLY_REPORT_TricorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowINTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
            Return rowINTEREST_RESTRIC_MONTLY_REPORT_TricorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable = CType(MyBase.Clone,INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKeyID = MyBase.Columns("KeyID")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnTypeName = MyBase.Columns("TypeName")
            Me.columnTypeIncome = MyBase.Columns("TypeIncome")
            Me.columnNo1 = MyBase.Columns("No1")
            Me.columnNo2 = MyBase.Columns("No2")
            Me.columnNo3 = MyBase.Columns("No3")
            Me.columnNo4 = MyBase.Columns("No4")
            Me.columnNo5 = MyBase.Columns("No5")
            Me.columnNo6 = MyBase.Columns("No6")
            Me.columnNo7 = MyBase.Columns("No7")
            Me.columnNo8 = MyBase.Columns("No8")
            Me.columnNo9 = MyBase.Columns("No9")
            Me.columnNo10 = MyBase.Columns("No10")
            Me.columnNo11 = MyBase.Columns("No11")
            Me.columnNo12 = MyBase.Columns("No12")
            Me.columnNo13 = MyBase.Columns("No13")
            Me.columnNo14 = MyBase.Columns("No14")
            Me.columnNo15 = MyBase.Columns("No15")
            Me.columnNo16 = MyBase.Columns("No16")
            Me.columnNo17 = MyBase.Columns("No17")
            Me.columnNo18 = MyBase.Columns("No18")
            Me.columnTotalYear = MyBase.Columns("TotalYear")
            Me.columnTotalColumn = MyBase.Columns("TotalColumn")
            Me.columnLabelTag = MyBase.Columns("LabelTag")
            Me.columnDateFrom = MyBase.Columns("DateFrom")
            Me.columnDateTo = MyBase.Columns("DateTo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKeyID = New Global.System.Data.DataColumn("KeyID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyID)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnTypeName = New Global.System.Data.DataColumn("TypeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeName)
            Me.columnTypeIncome = New Global.System.Data.DataColumn("TypeIncome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeIncome)
            Me.columnNo1 = New Global.System.Data.DataColumn("No1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo1)
            Me.columnNo2 = New Global.System.Data.DataColumn("No2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo2)
            Me.columnNo3 = New Global.System.Data.DataColumn("No3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo3)
            Me.columnNo4 = New Global.System.Data.DataColumn("No4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo4)
            Me.columnNo5 = New Global.System.Data.DataColumn("No5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo5)
            Me.columnNo6 = New Global.System.Data.DataColumn("No6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo6)
            Me.columnNo7 = New Global.System.Data.DataColumn("No7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo7)
            Me.columnNo8 = New Global.System.Data.DataColumn("No8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo8)
            Me.columnNo9 = New Global.System.Data.DataColumn("No9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo9)
            Me.columnNo10 = New Global.System.Data.DataColumn("No10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo10)
            Me.columnNo11 = New Global.System.Data.DataColumn("No11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo11)
            Me.columnNo12 = New Global.System.Data.DataColumn("No12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo12)
            Me.columnNo13 = New Global.System.Data.DataColumn("No13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo13)
            Me.columnNo14 = New Global.System.Data.DataColumn("No14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo14)
            Me.columnNo15 = New Global.System.Data.DataColumn("No15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo15)
            Me.columnNo16 = New Global.System.Data.DataColumn("No16", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo16)
            Me.columnNo17 = New Global.System.Data.DataColumn("No17", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo17)
            Me.columnNo18 = New Global.System.Data.DataColumn("No18", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo18)
            Me.columnTotalYear = New Global.System.Data.DataColumn("TotalYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalYear)
            Me.columnTotalColumn = New Global.System.Data.DataColumn("TotalColumn", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalColumn)
            Me.columnLabelTag = New Global.System.Data.DataColumn("LabelTag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabelTag)
            Me.columnDateFrom = New Global.System.Data.DataColumn("DateFrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateFrom)
            Me.columnDateTo = New Global.System.Data.DataColumn("DateTo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateTo)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewINTEREST_RESTRIC_MONTLY_REPORT_TricorRow() As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
            Return CType(Me.NewRow,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New INTEREST_RESTRIC_MONTLY_REPORT_TricorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangedEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChanged(Me, New INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangingEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChanging(Me, New INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeletedEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeleted(Me, New INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeletingEvent) Is Nothing) Then
                RaiseEvent INTEREST_RESTRIC_MONTLY_REPORT_TricorRowDeleting(Me, New INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent(CType(e.Row,INTEREST_RESTRIC_MONTLY_REPORT_TricorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveINTEREST_RESTRIC_MONTLY_REPORT_TricorRow(ByVal row As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PNL_SOURCENO_COUNTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PNL_SOURCENO_COUNTRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnKEYNAME As Global.System.Data.DataColumn
        
        Private columnSOURCE_NO As Global.System.Data.DataColumn
        
        Private columnCOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PNL_SOURCENO_COUNT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KEYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOURCE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOURCE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PNL_SOURCENO_COUNTRow
            Get
                Return CType(Me.Rows(index),PNL_SOURCENO_COUNTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_SOURCENO_COUNTRowChanging As PNL_SOURCENO_COUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_SOURCENO_COUNTRowChanged As PNL_SOURCENO_COUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_SOURCENO_COUNTRowDeleting As PNL_SOURCENO_COUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_SOURCENO_COUNTRowDeleted As PNL_SOURCENO_COUNTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPNL_SOURCENO_COUNTRow(ByVal row As PNL_SOURCENO_COUNTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPNL_SOURCENO_COUNTRow(ByVal ID As String, ByVal KEYNAME As String, ByVal SOURCE_NO As Integer, ByVal COUNT As Integer) As PNL_SOURCENO_COUNTRow
            Dim rowPNL_SOURCENO_COUNTRow As PNL_SOURCENO_COUNTRow = CType(Me.NewRow,PNL_SOURCENO_COUNTRow)
            Dim columnValuesArray() As Object = New Object() {ID, KEYNAME, SOURCE_NO, COUNT}
            rowPNL_SOURCENO_COUNTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPNL_SOURCENO_COUNTRow)
            Return rowPNL_SOURCENO_COUNTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PNL_SOURCENO_COUNTDataTable = CType(MyBase.Clone,PNL_SOURCENO_COUNTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PNL_SOURCENO_COUNTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnKEYNAME = MyBase.Columns("KEYNAME")
            Me.columnSOURCE_NO = MyBase.Columns("SOURCE_NO")
            Me.columnCOUNT = MyBase.Columns("COUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnKEYNAME = New Global.System.Data.DataColumn("KEYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYNAME)
            Me.columnSOURCE_NO = New Global.System.Data.DataColumn("SOURCE_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOURCE_NO)
            Me.columnCOUNT = New Global.System.Data.DataColumn("COUNT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNT)
            Me.columnKEYNAME.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPNL_SOURCENO_COUNTRow() As PNL_SOURCENO_COUNTRow
            Return CType(Me.NewRow,PNL_SOURCENO_COUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PNL_SOURCENO_COUNTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PNL_SOURCENO_COUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PNL_SOURCENO_COUNTRowChangedEvent) Is Nothing) Then
                RaiseEvent PNL_SOURCENO_COUNTRowChanged(Me, New PNL_SOURCENO_COUNTRowChangeEvent(CType(e.Row,PNL_SOURCENO_COUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PNL_SOURCENO_COUNTRowChangingEvent) Is Nothing) Then
                RaiseEvent PNL_SOURCENO_COUNTRowChanging(Me, New PNL_SOURCENO_COUNTRowChangeEvent(CType(e.Row,PNL_SOURCENO_COUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PNL_SOURCENO_COUNTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PNL_SOURCENO_COUNTRowDeleted(Me, New PNL_SOURCENO_COUNTRowChangeEvent(CType(e.Row,PNL_SOURCENO_COUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PNL_SOURCENO_COUNTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PNL_SOURCENO_COUNTRowDeleting(Me, New PNL_SOURCENO_COUNTRowChangeEvent(CType(e.Row,PNL_SOURCENO_COUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePNL_SOURCENO_COUNTRow(ByVal row As PNL_SOURCENO_COUNTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PNL_SOURCENO_COUNTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PNL_TABLE_INFODataTable
        Inherits Global.System.Data.TypedTableBase(Of PNL_TABLE_INFORow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnKeyName As Global.System.Data.DataColumn
        
        Private columnTableName As Global.System.Data.DataColumn
        
        Private columnTableName_Details As Global.System.Data.DataColumn
        
        Private columnColumnName As Global.System.Data.DataColumn
        
        Private columnColumnTable As Global.System.Data.DataColumn
        
        Private columnColumnTable_Details As Global.System.Data.DataColumn
        
        Private columnLabelID As Global.System.Data.DataColumn
        
        Private columnLabelName As Global.System.Data.DataColumn
        
        Private columnLabelNameTricor As Global.System.Data.DataColumn
        
        Private columnColumnAmount As Global.System.Data.DataColumn
        
        Private columnColumnAmount_Details As Global.System.Data.DataColumn
        
        Private columnColumnDescription As Global.System.Data.DataColumn
        
        Private columnColumnDescription_Details As Global.System.Data.DataColumn
        
        Private columnColumnAddBack As Global.System.Data.DataColumn
        
        Private columnColumnAddBack_Details As Global.System.Data.DataColumn
        
        Private columnColumnDeduct As Global.System.Data.DataColumn
        
        Private columnColumnDeduct_Details As Global.System.Data.DataColumn
        
        Private columnColumnSourceNo As Global.System.Data.DataColumn
        
        Private columnColumnSourceNo_Details As Global.System.Data.DataColumn
        
        Private columnColumnPercentage As Global.System.Data.DataColumn
        
        Private columnPrefixName As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnIndexNo As Global.System.Data.DataColumn
        
        Private columnSch As Global.System.Data.DataColumn
        
        Private columnColumnTable_Details_Key As Global.System.Data.DataColumn
        
        Private columnColumnPecentage_Amount_Details As Global.System.Data.DataColumn
        
        Private columnColumnPNLKey As Global.System.Data.DataColumn
        
        Private columnColumnPNLKey_Details As Global.System.Data.DataColumn
        
        Private columnColumnNote As Global.System.Data.DataColumn
        
        Private columnColumnNote_Details As Global.System.Data.DataColumn
        
        Private columnColumnRowIndex As Global.System.Data.DataColumn
        
        Private columnColumnRowIndex_Details As Global.System.Data.DataColumn
        
        Private columnColumnDetail As Global.System.Data.DataColumn
        
        Private _columnColumnPercentage As Global.System.Data.DataColumn
        
        Private columnColumnPecentage_Details As Global.System.Data.DataColumn
        
        Private columnSaveQuery As Global.System.Data.DataColumn
        
        Private columnSaveQuery_Details As Global.System.Data.DataColumn
        
        Private columnDeleteQuery As Global.System.Data.DataColumn
        
        Private columnDeleteQuery_Details As Global.System.Data.DataColumn
        
        Private columnisCustomTable As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PNL_TABLE_INFO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TableNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTableName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TableName_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTableName_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnTableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnTable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnTable_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnTable_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabelName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LabelNameTricorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLabelNameTricor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnAmount_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnAmount_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnDescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnDescription_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnDescription_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnAddBackColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnAddBack
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnAddBack_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnAddBack_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnDeductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnDeduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnDeduct_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnDeduct_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnSourceNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnSourceNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnSourceNo_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnSourceNo_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrefixNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrefixName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IndexNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnTable_Details_KeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnTable_Details_Key
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnPecentage_Amount_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnPecentage_Amount_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnPNLKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnPNLKey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnPNLKey_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnPNLKey_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnNote_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnNote_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnRowIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnRowIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnRowIndex_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnRowIndex_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnDetailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnDetail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _ColumnPercentageColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnColumnPercentage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColumnPecentage_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColumnPecentage_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SaveQueryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaveQuery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SaveQuery_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaveQuery_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DeleteQueryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleteQuery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DeleteQuery_DetailsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleteQuery_Details
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isCustomTableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisCustomTable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PNL_TABLE_INFORow
            Get
                Return CType(Me.Rows(index),PNL_TABLE_INFORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_TABLE_INFORowChanging As PNL_TABLE_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_TABLE_INFORowChanged As PNL_TABLE_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_TABLE_INFORowDeleting As PNL_TABLE_INFORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PNL_TABLE_INFORowDeleted As PNL_TABLE_INFORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPNL_TABLE_INFORow(ByVal row As PNL_TABLE_INFORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPNL_TABLE_INFORow( _
                    ByVal KeyName As String,  _
                    ByVal TableName As String,  _
                    ByVal TableName_Details As String,  _
                    ByVal ColumnName As String,  _
                    ByVal ColumnTable As String,  _
                    ByVal ColumnTable_Details As String,  _
                    ByVal LabelID As String,  _
                    ByVal LabelName As String,  _
                    ByVal LabelNameTricor As String,  _
                    ByVal ColumnAmount As String,  _
                    ByVal ColumnAmount_Details As String,  _
                    ByVal ColumnDescription As String,  _
                    ByVal ColumnDescription_Details As String,  _
                    ByVal ColumnAddBack As String,  _
                    ByVal ColumnAddBack_Details As String,  _
                    ByVal ColumnDeduct As String,  _
                    ByVal ColumnDeduct_Details As String,  _
                    ByVal ColumnSourceNo As String,  _
                    ByVal ColumnSourceNo_Details As String,  _
                    ByVal ColumnPecentage_Amount As String,  _
                    ByVal PrefixName As String,  _
                    ByVal Type As Integer,  _
                    ByVal IndexNo As Integer,  _
                    ByVal Sch As String,  _
                    ByVal ColumnTable_Details_Key As String,  _
                    ByVal ColumnPecentage_Amount_Details As String,  _
                    ByVal ColumnPNLKey As String,  _
                    ByVal ColumnPNLKey_Details As String,  _
                    ByVal ColumnNote As String,  _
                    ByVal ColumnNote_Details As String,  _
                    ByVal ColumnRowIndex As String,  _
                    ByVal ColumnRowIndex_Details As String,  _
                    ByVal ColumnDetail As String,  _
                    ByVal ColumnPercentage As String,  _
                    ByVal ColumnPecentage_Details As String,  _
                    ByVal SaveQuery As String,  _
                    ByVal SaveQuery_Details As String,  _
                    ByVal DeleteQuery As String,  _
                    ByVal DeleteQuery_Details As String,  _
                    ByVal isCustomTable As Boolean) As PNL_TABLE_INFORow
            Dim rowPNL_TABLE_INFORow As PNL_TABLE_INFORow = CType(Me.NewRow,PNL_TABLE_INFORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, KeyName, TableName, TableName_Details, ColumnName, ColumnTable, ColumnTable_Details, LabelID, LabelName, LabelNameTricor, ColumnAmount, ColumnAmount_Details, ColumnDescription, ColumnDescription_Details, ColumnAddBack, ColumnAddBack_Details, ColumnDeduct, ColumnDeduct_Details, ColumnSourceNo, ColumnSourceNo_Details, ColumnPecentage_Amount, PrefixName, Type, IndexNo, Sch, ColumnTable_Details_Key, ColumnPecentage_Amount_Details, ColumnPNLKey, ColumnPNLKey_Details, ColumnNote, ColumnNote_Details, ColumnRowIndex, ColumnRowIndex_Details, ColumnDetail, ColumnPercentage, ColumnPecentage_Details, SaveQuery, SaveQuery_Details, DeleteQuery, DeleteQuery_Details, isCustomTable}
            rowPNL_TABLE_INFORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPNL_TABLE_INFORow)
            Return rowPNL_TABLE_INFORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PNL_TABLE_INFODataTable = CType(MyBase.Clone,PNL_TABLE_INFODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PNL_TABLE_INFODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnKeyName = MyBase.Columns("KeyName")
            Me.columnTableName = MyBase.Columns("TableName")
            Me.columnTableName_Details = MyBase.Columns("TableName_Details")
            Me.columnColumnName = MyBase.Columns("ColumnName")
            Me.columnColumnTable = MyBase.Columns("ColumnTable")
            Me.columnColumnTable_Details = MyBase.Columns("ColumnTable_Details")
            Me.columnLabelID = MyBase.Columns("LabelID")
            Me.columnLabelName = MyBase.Columns("LabelName")
            Me.columnLabelNameTricor = MyBase.Columns("LabelNameTricor")
            Me.columnColumnAmount = MyBase.Columns("ColumnAmount")
            Me.columnColumnAmount_Details = MyBase.Columns("ColumnAmount_Details")
            Me.columnColumnDescription = MyBase.Columns("ColumnDescription")
            Me.columnColumnDescription_Details = MyBase.Columns("ColumnDescription_Details")
            Me.columnColumnAddBack = MyBase.Columns("ColumnAddBack")
            Me.columnColumnAddBack_Details = MyBase.Columns("ColumnAddBack_Details")
            Me.columnColumnDeduct = MyBase.Columns("ColumnDeduct")
            Me.columnColumnDeduct_Details = MyBase.Columns("ColumnDeduct_Details")
            Me.columnColumnSourceNo = MyBase.Columns("ColumnSourceNo")
            Me.columnColumnSourceNo_Details = MyBase.Columns("ColumnSourceNo_Details")
            Me.columnColumnPercentage = MyBase.Columns("ColumnPecentage_Amount")
            Me.columnPrefixName = MyBase.Columns("PrefixName")
            Me.columnType = MyBase.Columns("Type")
            Me.columnIndexNo = MyBase.Columns("IndexNo")
            Me.columnSch = MyBase.Columns("Sch")
            Me.columnColumnTable_Details_Key = MyBase.Columns("ColumnTable_Details_Key")
            Me.columnColumnPecentage_Amount_Details = MyBase.Columns("ColumnPecentage_Amount_Details")
            Me.columnColumnPNLKey = MyBase.Columns("ColumnPNLKey")
            Me.columnColumnPNLKey_Details = MyBase.Columns("ColumnPNLKey_Details")
            Me.columnColumnNote = MyBase.Columns("ColumnNote")
            Me.columnColumnNote_Details = MyBase.Columns("ColumnNote_Details")
            Me.columnColumnRowIndex = MyBase.Columns("ColumnRowIndex")
            Me.columnColumnRowIndex_Details = MyBase.Columns("ColumnRowIndex_Details")
            Me.columnColumnDetail = MyBase.Columns("ColumnDetail")
            Me._columnColumnPercentage = MyBase.Columns("ColumnPercentage")
            Me.columnColumnPecentage_Details = MyBase.Columns("ColumnPecentage_Details")
            Me.columnSaveQuery = MyBase.Columns("SaveQuery")
            Me.columnSaveQuery_Details = MyBase.Columns("SaveQuery_Details")
            Me.columnDeleteQuery = MyBase.Columns("DeleteQuery")
            Me.columnDeleteQuery_Details = MyBase.Columns("DeleteQuery_Details")
            Me.columnisCustomTable = MyBase.Columns("isCustomTable")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnKeyName = New Global.System.Data.DataColumn("KeyName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyName)
            Me.columnTableName = New Global.System.Data.DataColumn("TableName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTableName)
            Me.columnTableName_Details = New Global.System.Data.DataColumn("TableName_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTableName_Details)
            Me.columnColumnName = New Global.System.Data.DataColumn("ColumnName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnName)
            Me.columnColumnTable = New Global.System.Data.DataColumn("ColumnTable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnTable)
            Me.columnColumnTable_Details = New Global.System.Data.DataColumn("ColumnTable_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnTable_Details)
            Me.columnLabelID = New Global.System.Data.DataColumn("LabelID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabelID)
            Me.columnLabelName = New Global.System.Data.DataColumn("LabelName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabelName)
            Me.columnLabelNameTricor = New Global.System.Data.DataColumn("LabelNameTricor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLabelNameTricor)
            Me.columnColumnAmount = New Global.System.Data.DataColumn("ColumnAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnAmount)
            Me.columnColumnAmount_Details = New Global.System.Data.DataColumn("ColumnAmount_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnAmount_Details)
            Me.columnColumnDescription = New Global.System.Data.DataColumn("ColumnDescription", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnDescription)
            Me.columnColumnDescription_Details = New Global.System.Data.DataColumn("ColumnDescription_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnDescription_Details)
            Me.columnColumnAddBack = New Global.System.Data.DataColumn("ColumnAddBack", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnAddBack)
            Me.columnColumnAddBack_Details = New Global.System.Data.DataColumn("ColumnAddBack_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnAddBack_Details)
            Me.columnColumnDeduct = New Global.System.Data.DataColumn("ColumnDeduct", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnDeduct)
            Me.columnColumnDeduct_Details = New Global.System.Data.DataColumn("ColumnDeduct_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnDeduct_Details)
            Me.columnColumnSourceNo = New Global.System.Data.DataColumn("ColumnSourceNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnSourceNo)
            Me.columnColumnSourceNo_Details = New Global.System.Data.DataColumn("ColumnSourceNo_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnSourceNo_Details)
            Me.columnColumnPercentage = New Global.System.Data.DataColumn("ColumnPecentage_Amount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnColumnPercentage.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "ColumnPercentageColumn")
            Me.columnColumnPercentage.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnColumnPercentage")
            Me.columnColumnPercentage.ExtendedProperties.Add("Generator_UserColumnName", "ColumnPecentage_Amount")
            MyBase.Columns.Add(Me.columnColumnPercentage)
            Me.columnPrefixName = New Global.System.Data.DataColumn("PrefixName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrefixName)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnIndexNo = New Global.System.Data.DataColumn("IndexNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexNo)
            Me.columnSch = New Global.System.Data.DataColumn("Sch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSch)
            Me.columnColumnTable_Details_Key = New Global.System.Data.DataColumn("ColumnTable_Details_Key", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnTable_Details_Key)
            Me.columnColumnPecentage_Amount_Details = New Global.System.Data.DataColumn("ColumnPecentage_Amount_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnPecentage_Amount_Details)
            Me.columnColumnPNLKey = New Global.System.Data.DataColumn("ColumnPNLKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnPNLKey)
            Me.columnColumnPNLKey_Details = New Global.System.Data.DataColumn("ColumnPNLKey_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnPNLKey_Details)
            Me.columnColumnNote = New Global.System.Data.DataColumn("ColumnNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnNote)
            Me.columnColumnNote_Details = New Global.System.Data.DataColumn("ColumnNote_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnNote_Details)
            Me.columnColumnRowIndex = New Global.System.Data.DataColumn("ColumnRowIndex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnRowIndex)
            Me.columnColumnRowIndex_Details = New Global.System.Data.DataColumn("ColumnRowIndex_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnRowIndex_Details)
            Me.columnColumnDetail = New Global.System.Data.DataColumn("ColumnDetail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnDetail)
            Me._columnColumnPercentage = New Global.System.Data.DataColumn("ColumnPercentage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnColumnPercentage.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_ColumnPercentageColumn")
            Me._columnColumnPercentage.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnColumnPercentage")
            Me._columnColumnPercentage.ExtendedProperties.Add("Generator_UserColumnName", "ColumnPercentage")
            MyBase.Columns.Add(Me._columnColumnPercentage)
            Me.columnColumnPecentage_Details = New Global.System.Data.DataColumn("ColumnPecentage_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColumnPecentage_Details)
            Me.columnSaveQuery = New Global.System.Data.DataColumn("SaveQuery", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaveQuery)
            Me.columnSaveQuery_Details = New Global.System.Data.DataColumn("SaveQuery_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaveQuery_Details)
            Me.columnDeleteQuery = New Global.System.Data.DataColumn("DeleteQuery", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleteQuery)
            Me.columnDeleteQuery_Details = New Global.System.Data.DataColumn("DeleteQuery_Details", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleteQuery_Details)
            Me.columnisCustomTable = New Global.System.Data.DataColumn("isCustomTable", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisCustomTable)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKeyName}, false))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnKeyName.Unique = true
            Me.columnKeyName.MaxLength = 300
            Me.columnTableName.MaxLength = 300
            Me.columnTableName_Details.MaxLength = 300
            Me.columnColumnName.MaxLength = 300
            Me.columnColumnTable.MaxLength = 300
            Me.columnColumnTable_Details.MaxLength = 300
            Me.columnLabelID.MaxLength = 300
            Me.columnLabelName.MaxLength = 300
            Me.columnLabelNameTricor.MaxLength = 300
            Me.columnColumnAmount.MaxLength = 300
            Me.columnColumnAmount_Details.MaxLength = 300
            Me.columnColumnDescription.MaxLength = 300
            Me.columnColumnDescription_Details.MaxLength = 300
            Me.columnColumnAddBack.MaxLength = 300
            Me.columnColumnAddBack_Details.MaxLength = 300
            Me.columnColumnDeduct.MaxLength = 300
            Me.columnColumnDeduct_Details.MaxLength = 300
            Me.columnColumnSourceNo.MaxLength = 300
            Me.columnColumnSourceNo_Details.MaxLength = 300
            Me.columnColumnPercentage.MaxLength = 300
            Me.columnPrefixName.MaxLength = 300
            Me.columnColumnPecentage_Amount_Details.MaxLength = 300
            Me.columnColumnPNLKey.MaxLength = 300
            Me.columnColumnPNLKey_Details.MaxLength = 300
            Me.columnColumnNote.MaxLength = 300
            Me.columnColumnNote_Details.MaxLength = 300
            Me.columnColumnRowIndex.MaxLength = 300
            Me.columnColumnRowIndex_Details.MaxLength = 300
            Me.columnColumnDetail.MaxLength = 300
            Me._columnColumnPercentage.MaxLength = 300
            Me.columnColumnPecentage_Details.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Return CType(Me.NewRow,PNL_TABLE_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PNL_TABLE_INFORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PNL_TABLE_INFORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PNL_TABLE_INFORowChangedEvent) Is Nothing) Then
                RaiseEvent PNL_TABLE_INFORowChanged(Me, New PNL_TABLE_INFORowChangeEvent(CType(e.Row,PNL_TABLE_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PNL_TABLE_INFORowChangingEvent) Is Nothing) Then
                RaiseEvent PNL_TABLE_INFORowChanging(Me, New PNL_TABLE_INFORowChangeEvent(CType(e.Row,PNL_TABLE_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PNL_TABLE_INFORowDeletedEvent) Is Nothing) Then
                RaiseEvent PNL_TABLE_INFORowDeleted(Me, New PNL_TABLE_INFORowChangeEvent(CType(e.Row,PNL_TABLE_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PNL_TABLE_INFORowDeletingEvent) Is Nothing) Then
                RaiseEvent PNL_TABLE_INFORowDeleting(Me, New PNL_TABLE_INFORowChangeEvent(CType(e.Row,PNL_TABLE_INFORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePNL_TABLE_INFORow(ByVal row As PNL_TABLE_INFORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsPNL_Report = New dsPNL_Report()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PNL_TABLE_INFODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PNL_QUICK_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tablePNL_QUICK_DETAIL As PNL_QUICK_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePNL_QUICK_DETAIL = CType(Me.Table,PNL_QUICK_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOURCE_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.SOURCE_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCE_NO' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.SOURCE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTE' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tablePNL_QUICK_DETAIL.IDColumn),Integer)
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEDUCTIBLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEDUCTIBLE' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEDUCTIBLE_ADD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLE_ADDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEDUCTIBLE_ADD' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLE_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PECENTAGE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.PECENTAGEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PECENTAGE' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.PECENTAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PECENTAGE_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.PECENTAGE_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PECENTAGE_AMOUNT' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.PECENTAGE_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITLE' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCH() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.SCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCH' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.SCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_PECENTAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL.TOTAL_PECENTAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_PECENTAGE' in table 'PNL_QUICK_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL.TOTAL_PECENTAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tablePNL_QUICK_DETAIL.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOURCE_NONull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.SOURCE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOURCE_NONull()
            Me(Me.tablePNL_QUICK_DETAIL.SOURCE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tablePNL_QUICK_DETAIL.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tablePNL_QUICK_DETAIL.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOTENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOTENull()
            Me(Me.tablePNL_QUICK_DETAIL.NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEDUCTIBLENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEDUCTIBLENull()
            Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEDUCTIBLE_ADDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLE_ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEDUCTIBLE_ADDNull()
            Me(Me.tablePNL_QUICK_DETAIL.DEDUCTIBLE_ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPECENTAGENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.PECENTAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPECENTAGENull()
            Me(Me.tablePNL_QUICK_DETAIL.PECENTAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPECENTAGE_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.PECENTAGE_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPECENTAGE_AMOUNTNull()
            Me(Me.tablePNL_QUICK_DETAIL.PECENTAGE_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITLENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITLENull()
            Me(Me.tablePNL_QUICK_DETAIL.TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.SCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHNull()
            Me(Me.tablePNL_QUICK_DETAIL.SCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tablePNL_QUICK_DETAIL.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_PECENTAGENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL.TOTAL_PECENTAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_PECENTAGENull()
            Me(Me.tablePNL_QUICK_DETAIL.TOTAL_PECENTAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPNL_QUICK_DETAIL_SUBRows() As PNL_QUICK_DETAIL_SUBRow()
            If (Me.Table.ChildRelations("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB") Is Nothing) Then
                Return New PNL_QUICK_DETAIL_SUBRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB")),PNL_QUICK_DETAIL_SUBRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PNL_QUICK_DETAIL_SUBRow
        Inherits Global.System.Data.DataRow
        
        Private tablePNL_QUICK_DETAIL_SUB As PNL_QUICK_DETAIL_SUBDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePNL_QUICK_DETAIL_SUB = CType(Me.Table,PNL_QUICK_DETAIL_SUBDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOURCE_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.SOURCE_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCE_NO' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.SOURCE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTE' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARENT_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARENT_ID' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEDUCTIBLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEDUCTIBLE' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEDUCTIBLE_ADD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLE_ADDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEDUCTIBLE_ADD' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLE_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PECENTAGE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PECENTAGE' in table 'PNL_QUICK_DETAIL_SUB' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PECENTAGE_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGE_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PECENTAGE_AMOUNT' in table 'PNL_QUICK_DETAIL_SUB' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGE_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_QUICK_DETAILRow() As PNL_QUICK_DETAILRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB")),PNL_QUICK_DETAILRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PNL_QUICK_DETAIL_PNL_QUICK_DETAIL_SUB"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOURCE_NONull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.SOURCE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOURCE_NONull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.SOURCE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOTENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOTENull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARENT_IDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARENT_IDNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.PARENT_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEDUCTIBLENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEDUCTIBLENull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEDUCTIBLE_ADDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLE_ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEDUCTIBLE_ADDNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.DEDUCTIBLE_ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPECENTAGENull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPECENTAGENull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPECENTAGE_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGE_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPECENTAGE_AMOUNTNull()
            Me(Me.tablePNL_QUICK_DETAIL_SUB.PECENTAGE_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_REPORT As PROFIT_LOSS_ACCOUNT_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_REPORT = CType(Me.Table,PROFIT_LOSS_ACCOUNT_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_KEY() As Integer
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn),Integer)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_REF_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_REF_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_REF_NO' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_REF_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_YA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_YAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_YA' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_YAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_SALES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_SALESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_SALES' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_SALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OP_STK() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OP_STKColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OP_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OP_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_DPC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_DPCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_OAE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_OAEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_OAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_OAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_ONAE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_ONAEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_ONAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_ONAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES_PRO_COST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASES_PRO_COSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASES_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CLS_STK() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CLS_STKColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CLS_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CLS_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COGS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COGSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COGS' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COGSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_GROSS_PROFIT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_GROSS_PROFITColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_GROSS_PROFIT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_GROSS_PROFITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSINColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_UNREALGT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_UNREALGTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_UNREALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_UNREALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_REALGT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_REALGTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_REALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_REALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_RENTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_RENTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_OTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_OTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_INColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_DIVIDEND() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_DIVIDENDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_DIVIDEND' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_DIVIDENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_INTEREST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_INTERESTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_INTEREST' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_INTERESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_RENTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_RENTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_ROYALTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_ROYALTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_OTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_OTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_INColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FA_DISP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FA_DISPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INV_DISP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INV_DISPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INV_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INV_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_EXM_DIV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_EXM_DIVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_EXM_DIV' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_EXM_DIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FIR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FIRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FIR' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_REALG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_REALGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_REALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_REALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_UNREALG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_UNREALGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_UNREALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_UNREALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INSU_COMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INSU_COMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INSU_COMP' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INSU_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_LAWYER_COST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_LAWYER_COSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_LAWYER_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_LAWYER_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CONTRACT_EXP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CONTRACT_EXPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CONTRACT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CONTRACT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_SALARY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_SALARYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_SALARY' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_SALARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ROYALTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ROYALTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_RENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_RENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_RENT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_RENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_MAINTENANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_MAINTENANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_MAINTENANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_MAINTENANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_RND() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_RNDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_RND' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_RNDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ADVERT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ADVERTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ADVERT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ADVERTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TRAVEL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TRAVELColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TRAVEL' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TRAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DPC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DPCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_APP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_APPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_APP' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_APPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_NAPP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_NAPPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_NAPP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_NAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_DISP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_DISPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_CLNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_CLNT' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_STFF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_STFFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_STFF' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_STFFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PENALTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PENALTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PENALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PENALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PROV_ACC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PROV_ACCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PROV_ACC' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PROV_ACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_LEAVE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_LEAVEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_LEAVE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_LEAVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_WO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_WOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_WO' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_UNREALOSS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_UNREALOSSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_UNREALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_UNREALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_REALOSS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_REALOSSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_REALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_REALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_INI_SUB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_INI_SUBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_INI_SUB' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_INI_SUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_CAP_EXP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_CAP_EXPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_CAP_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_CAP_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_OTHERS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_OTHERSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_OTHERS' in table 'PROFIT_LOSS_ACCOUNT_REPORT' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOT_EXP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOT_EXPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NET_PROFIT_LOSS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NET_PROFIT_LOSSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NET_PROFIT_LOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NET_PROFIT_LOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DISALLOWED_EXP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DISALLOWED_EXPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DISALLOWED_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DISALLOWED_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALX' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALY' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INTRESTRICT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTRESTRICTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INTRESTRICT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTRESTRICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_NONSOURCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_NONSOURCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_NONSOURCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_NONSOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60F() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60F' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_MAINBUZ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_MAINBUZColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_MAINBUZ' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_MAINBUZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ZAKAT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ZAKATColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ZAKAT' in table 'PROFIT_LOSS_ACCOUNT_REPORT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ZAKATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COMPANY' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TREGROSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TREGROSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TREGROSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TREGROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TTAXDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TTAXDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TTAXDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TTAXDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TNETDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TNETDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TNETDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TNETDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TECH_FEE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TECH_FEEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TECH_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TECH_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EMPL_STOCK() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EMPL_STOCKColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EMPL_STOCK' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EMPL_STOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60FA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60FA' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_BALANCE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_BALANCEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_BALANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_BALANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXRLOSSFOREIGNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXRLOSSFOREIGNT' in table 'PROFIT_LOSS_ACCOUNT_REP"& _ 
                            "ORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DIRECTORS_FEE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DIRECTORS_FEEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DIRECTORS_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DIRECTORS_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_JKDM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_JKDMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_JKDM' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_JKDMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedBy' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModifiedDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModifiedDateTime' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_Status() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PNL_StatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNL_Status' in table 'PROFIT_LOSS_ACCOUNT_REPORT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PNL_StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_REF_NONull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_REF_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_REF_NONull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_REF_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_YANull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_YAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_YANull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_YAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_SALESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_SALESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_SALESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_SALESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OP_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OP_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OP_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OP_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_OAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_OAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_OAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_OAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_ONAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_ONAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_ONAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PRO_COST_ONAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASES_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASES_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASES_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_PURCHASES_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CLS_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CLS_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CLS_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CLS_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COGSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COGSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COGSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COGSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_GROSS_PROFITNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_GROSS_PROFITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_GROSS_PROFITNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_GROSS_PROFITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSINNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSINNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_UNREALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_UNREALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_UNREALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_UNREALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_REALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_REALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_REALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_REALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_DIVIDENDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_DIVIDENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_DIVIDENDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_DIVIDENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_INTERESTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_INTERESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_INTERESTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_INTERESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_IN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INV_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INV_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INV_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INV_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_EXM_DIVNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_EXM_DIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_EXM_DIVNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_EXM_DIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FIRNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FIRNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_FIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_REALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_REALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_REALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_REALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_UNREALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_UNREALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_UNREALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_UNREALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INSU_COMPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INSU_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INSU_COMPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NONTAX_IN_INSU_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_LAWYER_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_LAWYER_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_LAWYER_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_LAWYER_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CONTRACT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CONTRACT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CONTRACT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_CONTRACT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_SALARYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_SALARYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_SALARYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_SALARYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_RENTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_RENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_RENTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_RENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_MAINTENANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_MAINTENANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_MAINTENANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_MAINTENANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_RNDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_RNDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_RNDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_RNDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ADVERTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ADVERTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ADVERTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_ADVERTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TRAVELNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TRAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TRAVELNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TRAVELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_APPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_APPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_APPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_APPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_NAPPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_NAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_NAPPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_DNT_NAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_CLNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_CLNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_STFFNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_STFFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_STFFNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ENTM_STFFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PENALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PENALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PENALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PENALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PROV_ACCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PROV_ACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PROV_ACCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_PROV_ACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_LEAVENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_LEAVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_LEAVENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_LEAVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_WONull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_WONull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_FA_WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_UNREALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_UNREALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_UNREALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_UNREALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_REALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_REALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_REALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_REALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_INI_SUBNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_INI_SUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_INI_SUBNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_INI_SUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_CAP_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_CAP_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_CAP_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_CAP_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_OTHERSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NET_PROFIT_LOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NET_PROFIT_LOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NET_PROFIT_LOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_NET_PROFIT_LOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DISALLOWED_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DISALLOWED_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DISALLOWED_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DISALLOWED_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALXNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALXNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TOTALYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTRESTRICTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTRESTRICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTRESTRICTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EXP_INTRESTRICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_NONSOURCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_NONSOURCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_NONSOURCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTH_BSIN_NONSOURCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_MAINBUZNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_MAINBUZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_MAINBUZNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_MAINBUZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ZAKATNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ZAKATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ZAKATNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_ZAKATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COMPANYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TREGROSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TREGROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TREGROSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TREGROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TTAXDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TTAXDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TTAXDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TTAXDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TNETDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TNETDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TNETDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TNETDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TECH_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TECH_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TECH_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_TECH_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EMPL_STOCKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EMPL_STOCKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EMPL_STOCKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_EMPL_STOCKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FANull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FANull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_S60FAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_BALANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_BALANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_BALANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXP_BALANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXRLOSSFOREIGNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXRLOSSFOREIGNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DIRECTORS_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DIRECTORS_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DIRECTORS_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_DIRECTORS_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_JKDMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_JKDMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_JKDMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PL_JKDMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModifiedByNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModifiedByNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModifiedDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModifiedDateTimeNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.ModifiedDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNL_StatusNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PNL_StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNL_StatusNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT.PNL_StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRows() As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow()
            If (Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT") Is Nothing) Then
                Return New PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")),PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPROFIT_LOSS_ACCOUNT_REPORT_SCHRows() As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow()
            If (Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH") Is Nothing) Then
                Return New PROFIT_LOSS_ACCOUNT_REPORT_SCHRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH")),PROFIT_LOSS_ACCOUNT_REPORT_SCHRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_REPORT_SCH As PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH = CType(Me.Table,PROFIT_LOSS_ACCOUNT_REPORT_SCHDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_KEY() As Integer
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_KEYColumn),Integer)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_SALES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_SALESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_SALES' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_SALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OP_STK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OP_STKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OP_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OP_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_DPC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_DPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_OAE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_OAEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_OAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_OAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_ONAE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_ONAEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_ONAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_ONAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES_PRO_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASES_PRO_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASES_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CLS_STK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CLS_STKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CLS_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CLS_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COGS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COGSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COGS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COGSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_GROSS_PROFIT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_GROSS_PROFITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_GROSS_PROFIT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_GROSS_PROFITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_UNREALGT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_UNREALGTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_UNREALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_UNREALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_REALGT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_REALGTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_REALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_REALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_RENTAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_RENTALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_INColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_DIVIDEND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_DIVIDENDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_DIVIDEND' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_DIVIDENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_INTEREST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_INTERESTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_INTEREST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_INTERESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_RENTAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_RENTALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_ROYALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_ROYALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_INColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FA_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FA_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INV_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INV_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INV_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INV_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_EXM_DIV() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_EXM_DIVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_EXM_DIV' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_EXM_DIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FIR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FIR' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_REALG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_REALGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_REALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_REALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_UNREALG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_UNREALGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_UNREALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_UNREALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INSU_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INSU_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INSU_COMP' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INSU_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_LAWYER_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_LAWYER_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_LAWYER_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_LAWYER_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CONTRACT_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CONTRACT_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CONTRACT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CONTRACT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_SALARY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_SALARYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_SALARY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_SALARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ROYALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ROYALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_RENT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_RENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_RENT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_RENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_MAINTENANCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_MAINTENANCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_MAINTENANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_MAINTENANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_RND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_RNDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_RND' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_RNDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ADVERT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ADVERTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ADVERT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ADVERTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TRAVEL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TRAVELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TRAVEL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TRAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DPC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_APP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_APPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_APP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_APPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_NAPP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_NAPPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_NAPP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_NAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_CLNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_CLNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_CLNT' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_CLNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_STFF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_STFFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_STFF' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_STFFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PENALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PENALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PENALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PENALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PROV_ACC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PROV_ACCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PROV_ACC' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PROV_ACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_LEAVE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_LEAVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_LEAVE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_LEAVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_WO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_WOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_WO' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_UNREALOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_UNREALOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_UNREALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_UNREALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_REALOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_REALOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_REALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_REALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_INI_SUB() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_INI_SUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_INI_SUB' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_INI_SUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_CAP_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_CAP_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_CAP_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_CAP_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_OTHERS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_S"& _ 
                            "CH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOT_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOT_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NET_PROFIT_LOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NET_PROFIT_LOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NET_PROFIT_LOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NET_PROFIT_LOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DISALLOWED_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DISALLOWED_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DISALLOWED_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DISALLOWED_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALX' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INTRESTRICT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTRESTRICTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INTRESTRICT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTRESTRICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_NONSOURCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_NONSOURCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_NONSOURCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_NONSOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60F() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60F' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_MAINBUZ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_MAINBUZColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_MAINBUZ' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_MAINBUZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ZAKAT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ZAKATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ZAKAT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SC"& _ 
                            "H' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ZAKATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COMPANY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TREGROSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TREGROSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TREGROSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TREGROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TTAXDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TTAXDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TTAXDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TTAXDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TNETDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TNETDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TNETDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TNETDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TECH_FEE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TECH_FEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TECH_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TECH_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EMPL_STOCK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EMPL_STOCKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EMPL_STOCK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EMPL_STOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60FA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60FA' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_BALANCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_BALANCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_BALANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_BALANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXRLOSSFOREIGNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXRLOSSFOREIGNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXRLOSSFOREIGNT' in table 'PROFIT_LOSS_ACCOUNT_REP"& _ 
                            "ORT_SCH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXRLOSSFOREIGNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DIRECTORS_FEE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DIRECTORS_FEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DIRECTORS_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DIRECTORS_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_JKDM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_JKDMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_JKDM' in table 'PROFIT_LOSS_ACCOUNT_REPORT_SCH' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_JKDMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROFIT_LOSS_ACCOUNT_REPORTRow() As PROFIT_LOSS_ACCOUNT_REPORTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH")),PROFIT_LOSS_ACCOUNT_REPORTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_SCH"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_SALESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_SALESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_SALESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_SALESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OP_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OP_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OP_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OP_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_OAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_OAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_OAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_OAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_ONAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_ONAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_ONAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PRO_COST_ONAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASES_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASES_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASES_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_PURCHASES_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CLS_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CLS_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CLS_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CLS_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COGSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COGSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COGSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COGSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_GROSS_PROFITNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_GROSS_PROFITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_GROSS_PROFITNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_GROSS_PROFITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSINNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSINNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_UNREALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_UNREALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_UNREALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_UNREALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_REALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_REALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_REALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_REALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_DIVIDENDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_DIVIDENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_DIVIDENDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_DIVIDENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_INTERESTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_INTERESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_INTERESTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_INTERESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_IN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INV_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INV_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INV_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INV_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_EXM_DIVNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_EXM_DIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_EXM_DIVNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_EXM_DIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FIRNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FIRNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_FIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_REALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_REALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_REALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_REALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_UNREALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_UNREALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_UNREALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_UNREALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INSU_COMPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INSU_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INSU_COMPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NONTAX_IN_INSU_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_LAWYER_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_LAWYER_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_LAWYER_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_LAWYER_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CONTRACT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CONTRACT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CONTRACT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_CONTRACT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_SALARYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_SALARYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_SALARYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_SALARYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_RENTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_RENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_RENTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_RENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_MAINTENANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_MAINTENANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_MAINTENANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_MAINTENANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_RNDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_RNDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_RNDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_RNDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ADVERTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ADVERTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ADVERTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_ADVERTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TRAVELNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TRAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TRAVELNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TRAVELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_APPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_APPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_APPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_APPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_NAPPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_NAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_NAPPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_DNT_NAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_CLNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_CLNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_CLNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_CLNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_STFFNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_STFFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_STFFNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ENTM_STFFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PENALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PENALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PENALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PENALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PROV_ACCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PROV_ACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PROV_ACCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_PROV_ACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_LEAVENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_LEAVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_LEAVENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_LEAVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_WONull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_WONull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_FA_WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_UNREALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_UNREALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_UNREALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_UNREALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_REALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_REALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_REALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_REALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_INI_SUBNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_INI_SUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_INI_SUBNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_INI_SUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_CAP_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_CAP_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_CAP_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_CAP_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_OTHERSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NET_PROFIT_LOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NET_PROFIT_LOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NET_PROFIT_LOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_NET_PROFIT_LOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DISALLOWED_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DISALLOWED_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DISALLOWED_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DISALLOWED_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALXNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALXNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TOTALYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTRESTRICTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTRESTRICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTRESTRICTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EXP_INTRESTRICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_NONSOURCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_NONSOURCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_NONSOURCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTH_BSIN_NONSOURCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_MAINBUZNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_MAINBUZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_MAINBUZNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_MAINBUZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ZAKATNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ZAKATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ZAKATNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_ZAKATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COMPANYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TREGROSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TREGROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TREGROSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TREGROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TTAXDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TTAXDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TTAXDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TTAXDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TNETDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TNETDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TNETDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TNETDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TECH_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TECH_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TECH_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_TECH_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EMPL_STOCKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EMPL_STOCKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EMPL_STOCKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_EMPL_STOCKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FANull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FANull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_S60FAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_BALANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_BALANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_BALANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXP_BALANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXRLOSSFOREIGNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXRLOSSFOREIGNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXRLOSSFOREIGNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_OTHER_EXRLOSSFOREIGNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DIRECTORS_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DIRECTORS_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DIRECTORS_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_DIRECTORS_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_JKDMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_JKDMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_JKDMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_SCH.PL_JKDMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT = CType(Me.Table,PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_KEY() As Integer
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_KEYColumn),Integer)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INTRESTRICT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTRESTRICTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INTRESTRICT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EX"& _ 
                            "CLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTRESTRICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_RE"& _ 
                            "PORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_LAWYER_COST() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_LAWYER_COSTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_LAWYER_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUD"& _ 
                            "E_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_LAWYER_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TECH_FEE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TECH_FEEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TECH_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_R"& _ 
                            "EPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TECH_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CONTRACT_EXP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_CONTRACT_EXPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CONTRACT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLU"& _ 
                            "DE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_CONTRACT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DIRECTORS_FEE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_DIRECTORS_FEEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DIRECTORS_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCL"& _ 
                            "UDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_DIRECTORS_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_SALARY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_SALARYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_SALARY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE"& _ 
                            "_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_SALARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EMPL_STOCK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EMPL_STOCKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EMPL_STOCK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE"& _ 
                            "_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EMPL_STOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ROYALTY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ROYALTYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_RE"& _ 
                            "PORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_RENT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_RENTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_RENT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_R"& _ 
                            "EPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_RENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_MAINTENANCE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_MAINTENANCEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_MAINTENANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EX"& _ 
                            "CLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_MAINTENANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_RND() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_RNDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_RND' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_RNDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ADVERT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ADVERTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ADVERT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REP"& _ 
                            "ORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ADVERTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TRAVEL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TRAVELColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TRAVEL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REP"& _ 
                            "ORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TRAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_UNREALOSS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_UNREALOSSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_UNREALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_UNREALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_JKDM() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_JKDMColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_JKDM' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPOR"& _ 
                            "T' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_JKDMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DPC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DPCColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EXCL"& _ 
                            "UDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_APP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_APPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_APP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_APPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_NAPP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_NAPPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_NAPP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_NAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ZAKAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ZAKATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ZAKAT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EX"& _ 
                            "CLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ZAKATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_DISP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_DISPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_CLNT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_CLNT' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_STFF() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_STFFColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_STFF' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_STFFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PENALTY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PENALTYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PENALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PENALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PROV_ACC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PROV_ACCColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PROV_ACC' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PROV_ACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_LEAVE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_LEAVEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_LEAVE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EX"& _ 
                            "CLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_LEAVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_WO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_WOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_WO' in table 'PROFIT_LOSS_ACCOUNT_REPORT_EX"& _ 
                            "CLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_REALOSS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_REALOSSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_REALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_REALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXRLOSSFOREIGNT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXRLOSSFOREIGNT' in table 'PROFIT_LOSS_ACCOUNT_REP"& _ 
                            "ORT_EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_INI_SUB() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_INI_SUBColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_INI_SUB' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_INI_SUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_CAP_EXP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_CAP_EXPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_CAP_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "EXCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_CAP_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_OTHERS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_OTHERSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_OTHERS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_E"& _ 
                            "XCLUDE_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROFIT_LOSS_ACCOUNT_REPORTRow() As PROFIT_LOSS_ACCOUNT_REPORTRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT")),PROFIT_LOSS_ACCOUNT_REPORTRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_REPORT_PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTRESTRICTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTRESTRICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTRESTRICTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTRESTRICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_INTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_LAWYER_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_LAWYER_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_LAWYER_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_LAWYER_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TECH_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TECH_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TECH_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TECH_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CONTRACT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_CONTRACT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CONTRACT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_CONTRACT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DIRECTORS_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_DIRECTORS_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DIRECTORS_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_DIRECTORS_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_SALARYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_SALARYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_SALARYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_SALARYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EMPL_STOCKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EMPL_STOCKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EMPL_STOCKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EMPL_STOCKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_RENTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_RENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_RENTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_RENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_MAINTENANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_MAINTENANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_MAINTENANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_EXP_MAINTENANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_RNDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_RNDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_RNDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_RNDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ADVERTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ADVERTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ADVERTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_ADVERTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TRAVELNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TRAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TRAVELNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_TRAVELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_UNREALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_UNREALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_UNREALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_UNREALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_JKDMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_JKDMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_JKDMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_JKDMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_APPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_APPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_APPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_APPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_NAPPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_NAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_NAPPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_DNT_NAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ZAKATNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ZAKATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ZAKATNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ZAKATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_CLNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_CLNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_CLNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_STFFNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_STFFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_STFFNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_ENTM_STFFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PENALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PENALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PENALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PENALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PROV_ACCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PROV_ACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PROV_ACCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_PROV_ACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_LEAVENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_LEAVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_LEAVENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_LEAVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_WONull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_WONull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_FA_WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_REALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_REALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_REALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_REALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXRLOSSFOREIGNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXRLOSSFOREIGNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXRLOSSFOREIGNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_INI_SUBNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_INI_SUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_INI_SUBNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_INI_SUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_CAP_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_CAP_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_CAP_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_CAP_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_OTHERSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORT.PL_OTHER_EXP_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTERow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_NOTE As PROFIT_LOSS_ACCOUNT_NOTEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_NOTE = CType(Me.Table,PROFIT_LOSS_ACCOUNT_NOTEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parent_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Parent_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Parent_KEY' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Parent_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DataID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.DataIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataID' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.DataIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Data_SubID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Data_SubIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Data_SubID' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Data_SubIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isParent() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.isParentColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isParent' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.isParentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyName' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeNote() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TypeNoteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeNote' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TypeNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TitleFront() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleFrontColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TitleFront' in table 'PROFIT_LOSS_ACCOUNT_NOTE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleFrontColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_NOTE")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_NOTE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParent_KEYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Parent_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParent_KEYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Parent_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDataIDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.DataIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDataIDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.DataIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsData_SubIDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Data_SubIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetData_SubIDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.Data_SubIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisParentNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.isParentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisParentNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.isParentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyNameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyNameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.KeyNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNoteNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TypeNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNoteNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TypeNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTitleFrontNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleFrontColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTitleFrontNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE.TitleFrontColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPROFIT_LOSS_ACCOUNT_NOTE_COLUMNRows() As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow()
            If (Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN") Is Nothing) Then
                Return New PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")),PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN = CType(Me.Table,PROFIT_LOSS_ACCOUNT_NOTE_COLUMNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentID() As Decimal
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.ParentIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.ParentIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col1_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col1_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col1_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col1_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col2_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col2_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col2_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col2_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col3_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col3_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col3_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col3_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col4_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col4_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col4_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col4_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col5_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col5_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col5_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col5_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col6_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col6_Name' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Col6_Val() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_ValColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col6_Val' in table 'PROFIT_LOSS_ACCOUNT_NOTE_COLUMN' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_ValColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROFIT_LOSS_ACCOUNT_NOTERow() As PROFIT_LOSS_ACCOUNT_NOTERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN")),PROFIT_LOSS_ACCOUNT_NOTERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PROFIT_LOSS_ACCOUNT_NOTE_PROFIT_LOSS_ACCOUNT_NOTE_COLUMN"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol1_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol1_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol1_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol1_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col1_ValColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol2_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol2_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol2_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol2_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col2_ValColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol3_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol3_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol3_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol3_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col3_ValColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol4_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol4_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol4_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol4_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col4_ValColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol5_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol5_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol5_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol5_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col5_ValColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol6_NameNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol6_NameNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCol6_ValNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_ValColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCol6_ValNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_COLUMN.Col6_ValColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT = CType(Me.Table,PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ParentID() As Decimal
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ParentIDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ParentIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Attachment() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.AttachmentColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Attachment' in table 'PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.AttachmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Extension() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ExtensionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Extension' in table 'PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ExtensionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAttachmentNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.AttachmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAttachmentNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.AttachmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExtensionNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ExtensionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExtensionNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENT.ExtensionColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
        Inherits Global.System.Data.DataRow
        
        Private tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME = CType(Me.Table,PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_KEY() As Integer
            Get
                Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_KEYColumn),Integer)
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_SALES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_SALESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_SALES' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_SALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OP_STK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OP_STKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OP_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OP_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_DPC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_DPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNA"& _ 
                            "ME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_OAE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_OAEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_OAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNA"& _ 
                            "ME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_OAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PRO_COST_ONAE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_ONAEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PRO_COST_ONAE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_ONAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_PURCHASES_PRO_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASES_PRO_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_PURCHASES_PRO_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASES_PRO_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CLS_STK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CLS_STKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CLS_STK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CLS_STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COGS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COGSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COGS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COGSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_GROSS_PROFIT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_GROSS_PROFITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_GROSS_PROFIT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNA"& _ 
                            "ME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_GROSS_PROFITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_UNREALGT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_UNREALGTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_UNREALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_UNREALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_REALGT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_REALGTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_REALGT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_REALGTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_RENTAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_RENTALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEY"& _ 
                            "NAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_INColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_DIVIDEND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_DIVIDENDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_DIVIDEND' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_DIVIDENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_INTEREST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_INTERESTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_INTEREST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_INTERESTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_RENTAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_RENTALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_RENTAL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_RENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_ROYALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_ROYALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEY"& _ 
                            "NAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_IN_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_IN_OTHER' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNA"& _ 
                            "ME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_INColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_INColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FA_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FA_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INV_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INV_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INV_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INV_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_EXM_DIV() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_EXM_DIVColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_EXM_DIV' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_EXM_DIVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_FIR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_FIR' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_REALG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_REALGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_REALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_REALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_UNREALG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_UNREALGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_UNREALG' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_UNREALGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NONTAX_IN_INSU_COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INSU_COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NONTAX_IN_INSU_COMP' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INSU_COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_LAWYER_COST() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_LAWYER_COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_LAWYER_COST' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAM"& _ 
                            "E' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_LAWYER_COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_CONTRACT_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CONTRACT_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_CONTRACT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNA"& _ 
                            "ME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CONTRACT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_SALARY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_SALARYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_SALARY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_SALARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ROYALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ROYALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ROYALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ROYALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_RENT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_RENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_RENT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_RENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_MAINTENANCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_MAINTENANCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_MAINTENANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_MAINTENANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_RND() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_RNDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_RND' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_RNDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_ADVERT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ADVERTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_ADVERT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ADVERTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TRAVEL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TRAVELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TRAVEL' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TRAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DPC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DPCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DPC' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DPCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_APP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_APPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_APP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_APPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_DNT_NAPP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_NAPPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_DNT_NAPP' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_NAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_DISP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_DISPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_DISP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_DISPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEY"& _ 
                            "NAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_CLNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_CLNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_CLNT' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_CLNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ENTM_STFF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_STFFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ENTM_STFF' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_STFFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PENALTY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PENALTYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PENALTY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PENALTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_PROV_ACC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PROV_ACCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_PROV_ACC' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PROV_ACCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_LEAVE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_LEAVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_LEAVE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_LEAVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_FA_WO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_WOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_FA_WO' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_UNREALOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_UNREALOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_UNREALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPOR"& _ 
                            "T_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_UNREALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_REALOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_REALOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_REALOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_REALOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_INI_SUB() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_INI_SUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_INI_SUB' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_INI_SUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_CAP_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_CAP_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_CAP_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_CAP_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_OTHERS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_K"& _ 
                            "EYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOT_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOT_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOT_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOT_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_NET_PROFIT_LOSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NET_PROFIT_LOSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_NET_PROFIT_LOSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NET_PROFIT_LOSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DISALLOWED_EXP() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DISALLOWED_EXPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DISALLOWED_EXP' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEY"& _ 
                            "NAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DISALLOWED_EXPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALX() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALX' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TOTALY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TOTALY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EXP_INTRESTRICT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTRESTRICTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EXP_INTRESTRICT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTRESTRICTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTH_BSIN_NONSOURCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_NONSOURCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTH_BSIN_NONSOURCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT"& _ 
                            "_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_NONSOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60F() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60F' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_MAINBUZ() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_MAINBUZColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_MAINBUZ' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_MAINBUZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_ZAKAT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ZAKATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_ZAKAT' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KE"& _ 
                            "YNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ZAKATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_COMPANY' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TREGROSS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TREGROSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TREGROSS' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TREGROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TTAXDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TTAXDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TTAXDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TTAXDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TNETDEDUCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TNETDEDUCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TNETDEDUCTION' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TNETDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_TECH_FEE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TECH_FEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_TECH_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TECH_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_EMPL_STOCK() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EMPL_STOCKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_EMPL_STOCK' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EMPL_STOCKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_S60FA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_S60FA' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXP_BALANCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_BALANCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXP_BALANCE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_"& _ 
                            "KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_BALANCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_OTHER_EXRLOSSFOREIGNT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXRLOSSFOREIGNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_OTHER_EXRLOSSFOREIGNT' in table 'PROFIT_LOSS_ACCOUNT_REP"& _ 
                            "ORT_KEYNAME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXRLOSSFOREIGNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_DIRECTORS_FEE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DIRECTORS_FEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_DIRECTORS_FEE' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYN"& _ 
                            "AME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DIRECTORS_FEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PL_JKDM() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_JKDMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PL_JKDM' in table 'PROFIT_LOSS_ACCOUNT_REPORT_KEYNAME' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_JKDMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_SALESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_SALESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_SALESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_SALESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OP_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OP_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OP_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OP_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASESNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASESNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_OAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_OAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_OAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_OAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PRO_COST_ONAENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_ONAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PRO_COST_ONAENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PRO_COST_ONAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_PURCHASES_PRO_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASES_PRO_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_PURCHASES_PRO_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_PURCHASES_PRO_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CLS_STKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CLS_STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CLS_STKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CLS_STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COGSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COGSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COGSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COGSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_GROSS_PROFITNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_GROSS_PROFITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_GROSS_PROFITNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_GROSS_PROFITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSINNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSINNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_UNREALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_UNREALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_UNREALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_UNREALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_REALGTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_REALGTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_REALGTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_REALGTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_DIVIDENDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_DIVIDENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_DIVIDENDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_DIVIDENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_INTERESTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_INTERESTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_INTERESTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_INTERESTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_RENTALNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_RENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_RENTALNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_RENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_IN_OTHERNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_IN_OTHERNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_IN_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_INNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_INColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_INNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_INColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INV_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INV_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INV_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INV_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_EXM_DIVNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_EXM_DIVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_EXM_DIVNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_EXM_DIVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_FIRNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_FIRNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_FIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_REALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_REALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_REALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_REALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_UNREALGNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_UNREALGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_UNREALGNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_UNREALGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NONTAX_IN_INSU_COMPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INSU_COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NONTAX_IN_INSU_COMPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NONTAX_IN_INSU_COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_LAWYER_COSTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_LAWYER_COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_LAWYER_COSTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_LAWYER_COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_CONTRACT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CONTRACT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_CONTRACT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_CONTRACT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_SALARYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_SALARYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_SALARYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_SALARYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ROYALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ROYALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ROYALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ROYALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_RENTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_RENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_RENTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_RENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_MAINTENANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_MAINTENANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_MAINTENANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_MAINTENANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_RNDNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_RNDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_RNDNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_RNDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_ADVERTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ADVERTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_ADVERTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_ADVERTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TRAVELNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TRAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TRAVELNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TRAVELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DPCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DPCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DPCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DPCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_APPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_APPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_APPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_APPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_DNT_NAPPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_NAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_DNT_NAPPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_DNT_NAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_DISPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_DISPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_DISPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_DISPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_CLNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_CLNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_CLNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_CLNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ENTM_STFFNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_STFFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ENTM_STFFNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ENTM_STFFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PENALTYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PENALTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PENALTYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PENALTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_PROV_ACCNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PROV_ACCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_PROV_ACCNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_PROV_ACCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_LEAVENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_LEAVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_LEAVENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_LEAVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_FA_WONull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_FA_WONull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_FA_WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_UNREALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_UNREALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_UNREALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_UNREALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_REALOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_REALOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_REALOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_REALOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_INI_SUBNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_INI_SUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_INI_SUBNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_INI_SUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_CAP_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_CAP_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_CAP_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_CAP_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_OTHERSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOT_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOT_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOT_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOT_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_NET_PROFIT_LOSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NET_PROFIT_LOSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_NET_PROFIT_LOSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_NET_PROFIT_LOSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DISALLOWED_EXPNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DISALLOWED_EXPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DISALLOWED_EXPNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DISALLOWED_EXPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALXNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALXNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TOTALYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TOTALYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TOTALYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EXP_INTRESTRICTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTRESTRICTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EXP_INTRESTRICTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EXP_INTRESTRICTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTH_BSIN_NONSOURCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_NONSOURCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTH_BSIN_NONSOURCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTH_BSIN_NONSOURCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_MAINBUZNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_MAINBUZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_MAINBUZNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_MAINBUZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_ZAKATNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ZAKATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_ZAKATNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_ZAKATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_COMPANYNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TREGROSSNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TREGROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TREGROSSNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TREGROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TTAXDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TTAXDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TTAXDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TTAXDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TNETDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TNETDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TNETDEDUCTIONNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TNETDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_TECH_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TECH_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_TECH_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_TECH_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_EMPL_STOCKNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EMPL_STOCKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_EMPL_STOCKNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_EMPL_STOCKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_S60FANull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_S60FANull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_S60FAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXP_BALANCENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_BALANCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXP_BALANCENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXP_BALANCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_OTHER_EXRLOSSFOREIGNTNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXRLOSSFOREIGNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_OTHER_EXRLOSSFOREIGNTNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_OTHER_EXRLOSSFOREIGNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_DIRECTORS_FEENull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DIRECTORS_FEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_DIRECTORS_FEENull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_DIRECTORS_FEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPL_JKDMNull() As Boolean
            Return Me.IsNull(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_JKDMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPL_JKDMNull()
            Me(Me.tablePROFIT_LOSS_ACCOUNT_REPORT_KEYNAME.PL_JKDMColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DIVIDEND_INCOMERow
        Inherits Global.System.Data.DataRow
        
        Private tableDIVIDEND_INCOME As DIVIDEND_INCOMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDIVIDEND_INCOME = CType(Me.Table,DIVIDEND_INCOMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_KEY' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_DIVIDENDKEY() As Integer
            Get
                Return CType(Me(Me.tableDIVIDEND_INCOME.DI_DIVIDENDKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_DIVIDENDKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_DATE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_COMPANY' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_GROSS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_GROSSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_GROSS' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_GROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_TAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_TAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_TAX' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_TAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_WARANT_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_WARANT_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_WARANT_NO' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_WARANT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_CHKREGROSS() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_CHKREGROSSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_CHKREGROSS' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_CHKREGROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_TAXRATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_TAXRATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_TAXRATE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_TAXRATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_REGROSS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_REGROSSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_REGROSS' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_REGROSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_TAXDEDUCTION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_TAXDEDUCTIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_TAXDEDUCTION' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_TAXDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_NETDEDUCTION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_NETDEDUCTIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_NETDEDUCTION' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_NETDEDUCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_ENDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_ENDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_ENDDATE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_ENDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_TRATE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_TRATEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_TRATE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_TRATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_SOURCENO' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_DISCLOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_DISCLOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_DISCLOSE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_DISCLOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_TRANSFER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_TRANSFERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_TRANSFER' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_TRANSFERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_NET() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_NETColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_NET' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_NETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_Percentage() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_PercentageColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_Percentage' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_PercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DI_PercentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.DI_PercentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DI_PercentageAmount' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.DI_PercentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITLE' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.SCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCH' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.SCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDIVIDEND_INCOME.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'DIVIDEND_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDIVIDEND_INCOME.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_DIVIDEND_INCOME")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_DIVIDEND_INCOME"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_KEYNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_KEYNull()
            Me(Me.tableDIVIDEND_INCOME.DI_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_DATENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_DATENull()
            Me(Me.tableDIVIDEND_INCOME.DI_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_COMPANYNull()
            Me(Me.tableDIVIDEND_INCOME.DI_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_GROSSNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_GROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_GROSSNull()
            Me(Me.tableDIVIDEND_INCOME.DI_GROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_TAXNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_TAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_TAXNull()
            Me(Me.tableDIVIDEND_INCOME.DI_TAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_WARANT_NONull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_WARANT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_WARANT_NONull()
            Me(Me.tableDIVIDEND_INCOME.DI_WARANT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_CHKREGROSSNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_CHKREGROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_CHKREGROSSNull()
            Me(Me.tableDIVIDEND_INCOME.DI_CHKREGROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_TAXRATENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_TAXRATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_TAXRATENull()
            Me(Me.tableDIVIDEND_INCOME.DI_TAXRATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_REGROSSNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_REGROSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_REGROSSNull()
            Me(Me.tableDIVIDEND_INCOME.DI_REGROSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_TAXDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_TAXDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_TAXDEDUCTIONNull()
            Me(Me.tableDIVIDEND_INCOME.DI_TAXDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_NETDEDUCTIONNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_NETDEDUCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_NETDEDUCTIONNull()
            Me(Me.tableDIVIDEND_INCOME.DI_NETDEDUCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_ENDDATENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_ENDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_ENDDATENull()
            Me(Me.tableDIVIDEND_INCOME.DI_ENDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_TRATENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_TRATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_TRATENull()
            Me(Me.tableDIVIDEND_INCOME.DI_TRATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_SOURCENONull()
            Me(Me.tableDIVIDEND_INCOME.DI_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_DISCLOSENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_DISCLOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_DISCLOSENull()
            Me(Me.tableDIVIDEND_INCOME.DI_DISCLOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_TRANSFERNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_TRANSFERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_TRANSFERNull()
            Me(Me.tableDIVIDEND_INCOME.DI_TRANSFERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_NETNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_NETColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_NETNull()
            Me(Me.tableDIVIDEND_INCOME.DI_NETColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_PercentageNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_PercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_PercentageNull()
            Me(Me.tableDIVIDEND_INCOME.DI_PercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDI_PercentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.DI_PercentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDI_PercentageAmountNull()
            Me(Me.tableDIVIDEND_INCOME.DI_PercentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableDIVIDEND_INCOME.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tableDIVIDEND_INCOME.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITLENull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITLENull()
            Me(Me.tableDIVIDEND_INCOME.TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.SCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHNull()
            Me(Me.tableDIVIDEND_INCOME.SCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableDIVIDEND_INCOME.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tableDIVIDEND_INCOME.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RENTAL_INCOMERow
        Inherits Global.System.Data.DataRow
        
        Private tableRENTAL_INCOME As RENTAL_INCOMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRENTAL_INCOME = CType(Me.Table,RENTAL_INCOMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_KEY' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_RENTKEY() As Integer
            Get
                Return CType(Me(Me.tableRENTAL_INCOME.RI_RENTKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_RENTKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_TYPE' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_ADDRESS' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_DATE' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_AMOUNT' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_SOURCENO' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_STATUS4d() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_STATUS4dColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_STATUS4d' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_STATUS4dColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RI_DATE_END() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.RI_DATE_ENDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RI_DATE_END' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.RI_DATE_ENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITLE' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.SCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCH' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.SCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRENTAL_INCOME.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'RENTAL_INCOME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRENTAL_INCOME.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_RENTAL_INCOME")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_RENTAL_INCOME"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_KEYNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_KEYNull()
            Me(Me.tableRENTAL_INCOME.RI_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_TYPENull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_TYPENull()
            Me(Me.tableRENTAL_INCOME.RI_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_ADDRESSNull()
            Me(Me.tableRENTAL_INCOME.RI_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_DATENull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_DATENull()
            Me(Me.tableRENTAL_INCOME.RI_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_AMOUNTNull()
            Me(Me.tableRENTAL_INCOME.RI_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_SOURCENONull()
            Me(Me.tableRENTAL_INCOME.RI_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_STATUS4dNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_STATUS4dColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_STATUS4dNull()
            Me(Me.tableRENTAL_INCOME.RI_STATUS4dColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRI_DATE_ENDNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.RI_DATE_ENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRI_DATE_ENDNull()
            Me(Me.tableRENTAL_INCOME.RI_DATE_ENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableRENTAL_INCOME.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tableRENTAL_INCOME.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITLENull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITLENull()
            Me(Me.tableRENTAL_INCOME.TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.SCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHNull()
            Me(Me.tableRENTAL_INCOME.SCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableRENTAL_INCOME.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tableRENTAL_INCOME.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXEMPT_DIVIDENDRow
        Inherits Global.System.Data.DataRow
        
        Private tableEXEMPT_DIVIDEND As EXEMPT_DIVIDENDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXEMPT_DIVIDEND = CType(Me.Table,EXEMPT_DIVIDENDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_KEY' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_EDKEY() As Integer
            Get
                Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_EDKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_EDKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_DATE' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_COMPANY' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_AMOUNT' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_TIERSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_TIERSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_TIERSTATUS' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_TIERSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ED_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.ED_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ED_SOURCENO' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.ED_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITLE' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.SCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCH' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.SCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXEMPT_DIVIDEND.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'EXEMPT_DIVIDEND' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXEMPT_DIVIDEND.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_EXEMPT_DIVIDEND")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_EXEMPT_DIVIDEND"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_KEYNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_KEYNull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_DATENull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_DATENull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_COMPANYNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_COMPANYNull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_AMOUNTNull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_TIERSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_TIERSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_TIERSTATUSNull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_TIERSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsED_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.ED_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetED_SOURCENONull()
            Me(Me.tableEXEMPT_DIVIDEND.ED_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableEXEMPT_DIVIDEND.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tableEXEMPT_DIVIDEND.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITLENull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITLENull()
            Me(Me.tableEXEMPT_DIVIDEND.TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.SCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHNull()
            Me(Me.tableEXEMPT_DIVIDEND.SCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXEMPT_DIVIDEND.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tableEXEMPT_DIVIDEND.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXPENSES_RENTALRow
        Inherits Global.System.Data.DataRow
        
        Private tableEXPENSES_RENTAL As EXPENSES_RENTALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXPENSES_RENTAL = CType(Me.Table,EXPENSES_RENTALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_KEY' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_EXRENTKEY() As Integer
            Get
                Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_EXRENTKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_EXRENTKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_SOURCENO' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_DESC' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_AMOUNT' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_DEDUCTIBLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_DEDUCTIBLE' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_NOTE' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_DETAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_DETAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_DETAIL' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENT_DEDUCTIBLE_ADD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLE_ADDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENT_DEDUCTIBLE_ADD' in table 'EXPENSES_RENTAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLE_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RowIndex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.RowIndexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RowIndex' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.RowIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PecentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.PecentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PecentageAmount' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.PecentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TITLE' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCH() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.SCHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCH' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.SCHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.TOTAL_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_AMOUNT' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.TOTAL_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL_PECENTAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL.TOTAL_PECENTAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL_PECENTAGE' in table 'EXPENSES_RENTAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL.TOTAL_PECENTAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNL_TABLE_INFORow() As PNL_TABLE_INFORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_EXPENSES_RENTAL")),PNL_TABLE_INFORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_EXPENSES_RENTAL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_KEYNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_KEYNull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_SOURCENONull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_DESCNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_DESCNull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_AMOUNTNull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_DEDUCTIBLENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_DEDUCTIBLENull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_NOTENull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_DETAILNull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENT_DEDUCTIBLE_ADDNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLE_ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENT_DEDUCTIBLE_ADDNull()
            Me(Me.tableEXPENSES_RENTAL.EXRENT_DEDUCTIBLE_ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowIndexNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.RowIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowIndexNull()
            Me(Me.tableEXPENSES_RENTAL.RowIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPecentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.PecentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPecentageAmountNull()
            Me(Me.tableEXPENSES_RENTAL.PecentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableEXPENSES_RENTAL.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableEXPENSES_RENTAL.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tableEXPENSES_RENTAL.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTITLENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTITLENull()
            Me(Me.tableEXPENSES_RENTAL.TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCHNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.SCHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCHNull()
            Me(Me.tableEXPENSES_RENTAL.SCHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.TOTAL_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_AMOUNTNull()
            Me(Me.tableEXPENSES_RENTAL.TOTAL_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL_PECENTAGENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL.TOTAL_PECENTAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL_PECENTAGENull()
            Me(Me.tableEXPENSES_RENTAL.TOTAL_PECENTAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetEXPENSES_RENTAL_DETAILRows() As EXPENSES_RENTAL_DETAILRow()
            If (Me.Table.ChildRelations("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL") Is Nothing) Then
                Return New EXPENSES_RENTAL_DETAILRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL")),EXPENSES_RENTAL_DETAILRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXPENSES_RENTAL_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableEXPENSES_RENTAL_DETAIL As EXPENSES_RENTAL_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXPENSES_RENTAL_DETAIL = CType(Me.Table,EXPENSES_RENTAL_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_KEY' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_EXRENTKEY() As Integer
            Get
                Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_SOURCENO' in table 'EXPENSES_RENTAL_DETAIL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_EXRENTDKEY() As Integer
            Get
                Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTDKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_EXRENTDKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_DESC' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_DEDUCTIBLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_DEDUCTIBLE' in table 'EXPENSES_RENTAL_DETAIL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_AMOUNT' in table 'EXPENSES_RENTAL_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_NOTE' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXRENTD_DEDUCTIBLE_ADD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLE_ADDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXRENTD_DEDUCTIBLE_ADD' in table 'EXPENSES_RENTAL_DETAIL' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLE_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RowIndex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.RowIndexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RowIndex' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.RowIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PecentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.PecentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PecentageAmount' in table 'EXPENSES_RENTAL_DETAIL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.PecentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_RENTAL_DETAIL.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'EXPENSES_RENTAL_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_RENTAL_DETAIL.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXPENSES_RENTALRow() As EXPENSES_RENTALRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL")),EXPENSES_RENTALRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_EXPENSES_RENTAL_EXPENSES_RENTAL_DETAIL"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_KEYNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_KEYNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_SOURCENONull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_DESCNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_DESCNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_DEDUCTIBLENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_DEDUCTIBLENull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_AMOUNTNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_NOTENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_NOTENull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXRENTD_DEDUCTIBLE_ADDNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLE_ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXRENTD_DEDUCTIBLE_ADDNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.EXRENTD_DEDUCTIBLE_ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowIndexNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.RowIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowIndexNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.RowIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPecentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.PecentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPecentageAmountNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.PecentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_RENTAL_DETAIL.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableEXPENSES_RENTAL_DETAIL.NoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXPENSES_INTERESTRESTRICTRow
        Inherits Global.System.Data.DataRow
        
        Private tableEXPENSES_INTERESTRESTRICT As EXPENSES_INTERESTRESTRICTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXPENSES_INTERESTRESTRICT = CType(Me.Table,EXPENSES_INTERESTRESTRICTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_KEY' in table 'EXPENSES_INTERESTRESTRICT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_EXIRKEY() As Integer
            Get
                Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_EXIRKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_EXIRKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_SOURCENO' in table 'EXPENSES_INTERESTRESTRICT' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_AMOUNT' in table 'EXPENSES_INTERESTRESTRICT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_DESC' in table 'EXPENSES_INTERESTRESTRICT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_DEDUCTIBLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_DEDUCTIBLE' in table 'EXPENSES_INTERESTRESTRICT' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_NOTE' in table 'EXPENSES_INTERESTRESTRICT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_DETAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DETAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_DETAIL' in table 'EXPENSES_INTERESTRESTRICT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_YEAREND() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_YEARENDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_YEAREND' in table 'EXPENSES_INTERESTRESTRICT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_YEARENDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_STATUS' in table 'EXPENSES_INTERESTRESTRICT' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXIR_DEDUCTIBLE_ADD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLE_ADDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXIR_DEDUCTIBLE_ADD' in table 'EXPENSES_INTERESTRESTRICT' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLE_ADDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RowIndex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.RowIndexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RowIndex' in table 'EXPENSES_INTERESTRESTRICT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.RowIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PecentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.PecentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PecentageAmount' in table 'EXPENSES_INTERESTRESTRICT' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.PecentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXPENSES_INTERESTRESTRICT.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'EXPENSES_INTERESTRESTRICT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXPENSES_INTERESTRESTRICT.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_KEYNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_KEYNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_SOURCENONull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_AMOUNTNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_DESCNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_DESCNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_DEDUCTIBLENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_DEDUCTIBLENull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_NOTENull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_NOTENull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_DETAILNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_YEARENDNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_YEARENDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_YEARENDNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_YEARENDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_STATUSNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXIR_DEDUCTIBLE_ADDNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLE_ADDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXIR_DEDUCTIBLE_ADDNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.EXIR_DEDUCTIBLE_ADDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRowIndexNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.RowIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRowIndexNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.RowIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPecentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.PecentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPecentageAmountNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.PecentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableEXPENSES_INTERESTRESTRICT.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableEXPENSES_INTERESTRESTRICT.NoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
        Inherits Global.System.Data.DataRow
        
        Private tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY As REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY = CType(Me.Table,REF_INTEREST_RESTRIC_DETAIL_MONTHLYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_KEY' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIR_REF_NUM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIR_REF_NUMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIR_REF_NUM' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIR_REF_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_MONTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_MONTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_MONTH' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_MONTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_TYPE' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_DESC' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_AMOUNT' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_NOTE' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHLY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_SOURCENO' in table 'REF_INTEREST_RESTRIC_DETAIL_MONTHL"& _ 
                            "Y' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_TYPE_INCOME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPE_INCOMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_TYPE_INCOME' in table 'REF_INTEREST_RESTRIC_DETAIL_MON"& _ 
                            "THLY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPE_INCOMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PecentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.PecentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PecentageAmount' in table 'REF_INTEREST_RESTRIC_DETAIL_MONT"& _ 
                            "HLY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.PecentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_KEYNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_KEYNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIR_REF_NUMNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIR_REF_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIR_REF_NUMNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIR_REF_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_MONTHNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_MONTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_MONTHNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_MONTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_TYPENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_TYPENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_DESCNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_DESCNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_AMOUNTNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_NOTENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_NOTENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_SOURCENONull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_TYPE_INCOMENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPE_INCOMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_TYPE_INCOMENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.RIRD_TYPE_INCOMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPecentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.PecentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPecentageAmountNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL_MONTHLY.PecentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REF_INTEREST_RESTRIC_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableREF_INTEREST_RESTRIC_DETAIL As REF_INTEREST_RESTRIC_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREF_INTEREST_RESTRIC_DETAIL = CType(Me.Table,REF_INTEREST_RESTRIC_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_KEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_KEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_KEY' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_KEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIR_REF_NUM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIR_REF_NUMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIR_REF_NUM' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIR_REF_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_MONTH() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_MONTHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_MONTH' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_MONTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_TYPE' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_DESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_DESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_DESC' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_DESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_AMOUNT' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_NOTE' in table 'REF_INTEREST_RESTRIC_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_SOURCENO' in table 'REF_INTEREST_RESTRIC_DETAIL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIRD_TYPE_INCOME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPE_INCOMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIRD_TYPE_INCOME' in table 'REF_INTEREST_RESTRIC_DETAIL' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPE_INCOMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PecentageAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.PecentageAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PecentageAmount' in table 'REF_INTEREST_RESTRIC_DETAIL' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.PecentageAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_KEYNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_KEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_KEYNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_KEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIR_REF_NUMNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIR_REF_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIR_REF_NUMNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIR_REF_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_MONTHNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_MONTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_MONTHNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_MONTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_TYPENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_TYPENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_DESCNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_DESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_DESCNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_DESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_AMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_AMOUNTNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_NOTENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_NOTENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_SOURCENONull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIRD_TYPE_INCOMENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPE_INCOMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIRD_TYPE_INCOMENull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.RIRD_TYPE_INCOMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPecentageAmountNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC_DETAIL.PecentageAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPecentageAmountNull()
            Me(Me.tableREF_INTEREST_RESTRIC_DETAIL.PecentageAmountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INTEREST_RESTRIC_MONTLY_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableINTEREST_RESTRIC_MONTLY_REPORT As INTEREST_RESTRIC_MONTLY_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINTEREST_RESTRIC_MONTLY_REPORT = CType(Me.Table,INTEREST_RESTRIC_MONTLY_REPORTDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REF_INTEREST_RESTRIC_TMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableREF_INTEREST_RESTRIC_TMP As REF_INTEREST_RESTRIC_TMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREF_INTEREST_RESTRIC_TMP = CType(Me.Table,REF_INTEREST_RESTRIC_TMPDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REF_INTEREST_RESTRICRow
        Inherits Global.System.Data.DataRow
        
        Private tableREF_INTEREST_RESTRIC As REF_INTEREST_RESTRICDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREF_INTEREST_RESTRIC = CType(Me.Table,REF_INTEREST_RESTRICDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TP_REF_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.TP_REF_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TP_REF_NO' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.TP_REF_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COLUMN_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.COLUMN_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COLUMN_NAME' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.COLUMN_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DURATION() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.DURATIONColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DURATION' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.DURATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REF_NUM() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.REF_NUMColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REF_NUM' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.REF_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _300() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC._300Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column '300' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC._300Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YOA() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.YOAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YOA' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.YOAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BASICPERIOD() As Date
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.BASICPERIODColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BASICPERIOD' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.BASICPERIODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIR_SOURCENO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.RIR_SOURCENOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIR_SOURCENO' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.RIR_SOURCENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TYPE_INCOME() As String
            Get
                Try 
                    Return CType(Me(Me.tableREF_INTEREST_RESTRIC.TYPE_INCOMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TYPE_INCOME' in table 'REF_INTEREST_RESTRIC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableREF_INTEREST_RESTRIC.TYPE_INCOMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTP_REF_NONull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.TP_REF_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTP_REF_NONull()
            Me(Me.tableREF_INTEREST_RESTRIC.TP_REF_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOLUMN_NAMENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.COLUMN_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOLUMN_NAMENull()
            Me(Me.tableREF_INTEREST_RESTRIC.COLUMN_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDURATIONNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.DURATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDURATIONNull()
            Me(Me.tableREF_INTEREST_RESTRIC.DURATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREF_NUMNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.REF_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREF_NUMNull()
            Me(Me.tableREF_INTEREST_RESTRIC.REF_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_300Null() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC._300Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_300Null()
            Me(Me.tableREF_INTEREST_RESTRIC._300Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYOANull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.YOAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYOANull()
            Me(Me.tableREF_INTEREST_RESTRIC.YOAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBASICPERIODNull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.BASICPERIODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBASICPERIODNull()
            Me(Me.tableREF_INTEREST_RESTRIC.BASICPERIODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIR_SOURCENONull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.RIR_SOURCENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIR_SOURCENONull()
            Me(Me.tableREF_INTEREST_RESTRIC.RIR_SOURCENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTYPE_INCOMENull() As Boolean
            Return Me.IsNull(Me.tableREF_INTEREST_RESTRIC.TYPE_INCOMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTYPE_INCOMENull()
            Me(Me.tableREF_INTEREST_RESTRIC.TYPE_INCOMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
        Inherits Global.System.Data.DataRow
        
        Private tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableREF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMP = CType(Me.Table,REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
        Inherits Global.System.Data.DataRow
        
        Private tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor As INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor = CType(Me.Table,INTEREST_RESTRIC_MONTLY_REPORT_TricorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyID() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.KeyIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyID' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.KeyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Title' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeName' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeIncome() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeIncomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeIncome' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeIncomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No1' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No2' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No3' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No4' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No5' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No6' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No7' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No8' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No9' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No10' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No11' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No12' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No13' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No14' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No15() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No15Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No15' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No16() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No16Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No16' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No17() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No17Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No17' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property No18() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No18Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No18' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalYear() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalYear' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalColumn() As Short
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalColumnColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalColumn' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Trico"& _ 
                            "r' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalColumnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LabelTag() As String
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.LabelTagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabelTag' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.LabelTagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateFrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateFromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateFrom' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateTo() As Date
            Get
                Try 
                    Return CType(Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateToColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateTo' in table 'INTEREST_RESTRIC_MONTLY_REPORT_Tricor' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyIDNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.KeyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyIDNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.KeyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTitleNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNameNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNameNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeIncomeNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeIncomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeIncomeNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TypeIncomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo1Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo1Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo2Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo2Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo3Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo3Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo4Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo4Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo5Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo5Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo6Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo6Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo7Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo7Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo8Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo8Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo9Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo9Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo10Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo10Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo11Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo11Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo12Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo12Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo13Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo13Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo14Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo14Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo15Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo15Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo16Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo16Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo17Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No17Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo17Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No17Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNo18Null() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No18Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNo18Null()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.No18Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalYearNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalYearNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalColumnNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalColumnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalColumnNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.TotalColumnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelTagNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.LabelTagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelTagNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.LabelTagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateFromNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateFromNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateToNull() As Boolean
            Return Me.IsNull(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateToNull()
            Me(Me.tableINTEREST_RESTRIC_MONTLY_REPORT_Tricor.DateToColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PNL_SOURCENO_COUNTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePNL_SOURCENO_COUNT As PNL_SOURCENO_COUNTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePNL_SOURCENO_COUNT = CType(Me.Table,PNL_SOURCENO_COUNTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_SOURCENO_COUNT.IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID' in table 'PNL_SOURCENO_COUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_SOURCENO_COUNT.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KEYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_SOURCENO_COUNT.KEYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KEYNAME' in table 'PNL_SOURCENO_COUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_SOURCENO_COUNT.KEYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOURCE_NO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_SOURCENO_COUNT.SOURCE_NOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOURCE_NO' in table 'PNL_SOURCENO_COUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_SOURCENO_COUNT.SOURCE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNT() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_SOURCENO_COUNT.COUNTColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNT' in table 'PNL_SOURCENO_COUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_SOURCENO_COUNT.COUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_SOURCENO_COUNT.IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIDNull()
            Me(Me.tablePNL_SOURCENO_COUNT.IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKEYNAMENull() As Boolean
            Return Me.IsNull(Me.tablePNL_SOURCENO_COUNT.KEYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKEYNAMENull()
            Me(Me.tablePNL_SOURCENO_COUNT.KEYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOURCE_NONull() As Boolean
            Return Me.IsNull(Me.tablePNL_SOURCENO_COUNT.SOURCE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOURCE_NONull()
            Me(Me.tablePNL_SOURCENO_COUNT.SOURCE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTNull() As Boolean
            Return Me.IsNull(Me.tablePNL_SOURCENO_COUNT.COUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTNull()
            Me(Me.tablePNL_SOURCENO_COUNT.COUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PNL_TABLE_INFORow
        Inherits Global.System.Data.DataRow
        
        Private tablePNL_TABLE_INFO As PNL_TABLE_INFODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePNL_TABLE_INFO = CType(Me.Table,PNL_TABLE_INFODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Decimal
            Get
                Return CType(Me(Me.tablePNL_TABLE_INFO.IDColumn),Decimal)
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.KeyNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KeyName' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.KeyNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TableName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.TableNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TableName' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.TableNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TableName_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.TableName_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TableName_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.TableName_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnName' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnTable() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnTableColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnTable' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnTableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnTable_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnTable_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnTable_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnTable_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LabelID() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.LabelIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabelID' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.LabelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LabelName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.LabelNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabelName' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.LabelNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LabelNameTricor() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.LabelNameTricorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LabelNameTricor' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.LabelNameTricorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnAmount() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnAmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnAmount' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnAmount_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnAmount_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnAmount_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnAmount_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnDescription() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnDescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnDescription' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnDescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnDescription_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnDescription_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnDescription_Details' in table 'PNL_TABLE_INFO' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnDescription_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnAddBack() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnAddBackColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnAddBack' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnAddBackColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnAddBack_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnAddBack_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnAddBack_Details' in table 'PNL_TABLE_INFO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnAddBack_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnDeduct() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnDeductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnDeduct' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnDeductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnDeduct_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnDeduct_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnDeduct_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnDeduct_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnSourceNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnSourceNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnSourceNo' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnSourceNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnSourceNo_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnSourceNo_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnSourceNo_Details' in table 'PNL_TABLE_INFO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnSourceNo_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPecentage_Amount() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnPercentageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPecentage_Amount' in table 'PNL_TABLE_INFO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrefixName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.PrefixNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrefixName' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.PrefixNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.TypeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IndexNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.IndexNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexNo' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.IndexNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sch() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.SchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sch' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.SchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnTable_Details_Key() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnTable_Details_KeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnTable_Details_Key' in table 'PNL_TABLE_INFO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnTable_Details_KeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPecentage_Amount_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_Amount_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPecentage_Amount_Details' in table 'PNL_TABLE_INFO' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_Amount_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPNLKey() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnPNLKeyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPNLKey' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnPNLKeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPNLKey_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnPNLKey_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPNLKey_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnPNLKey_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnNote() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnNote' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnNote_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnNote_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnNote_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnNote_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnRowIndex() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnRowIndexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnRowIndex' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnRowIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnRowIndex_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnRowIndex_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnRowIndex_Details' in table 'PNL_TABLE_INFO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnRowIndex_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnDetail() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnDetailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnDetail' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnDetailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPercentage() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO._ColumnPercentageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPercentage' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO._ColumnPercentageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColumnPecentage_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColumnPecentage_Details' in table 'PNL_TABLE_INFO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SaveQuery() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.SaveQueryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaveQuery' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.SaveQueryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SaveQuery_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.SaveQuery_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaveQuery_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.SaveQuery_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DeleteQuery() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.DeleteQueryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeleteQuery' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.DeleteQueryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DeleteQuery_Details() As String
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.DeleteQuery_DetailsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeleteQuery_Details' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.DeleteQuery_DetailsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isCustomTable() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablePNL_TABLE_INFO.isCustomTableColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isCustomTable' in table 'PNL_TABLE_INFO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePNL_TABLE_INFO.isCustomTableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyNameNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.KeyNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyNameNull()
            Me(Me.tablePNL_TABLE_INFO.KeyNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTableNameNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.TableNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTableNameNull()
            Me(Me.tablePNL_TABLE_INFO.TableNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTableName_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.TableName_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTableName_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.TableName_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnNameNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnNameNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnTableNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnTableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnTableNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnTableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnTable_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnTable_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnTable_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnTable_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelIDNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.LabelIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelIDNull()
            Me(Me.tablePNL_TABLE_INFO.LabelIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelNameNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.LabelNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelNameNull()
            Me(Me.tablePNL_TABLE_INFO.LabelNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLabelNameTricorNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.LabelNameTricorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLabelNameTricorNull()
            Me(Me.tablePNL_TABLE_INFO.LabelNameTricorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnAmountNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnAmountNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnAmount_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnAmount_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnAmount_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnAmount_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnDescriptionNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnDescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnDescriptionNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnDescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnDescription_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnDescription_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnDescription_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnDescription_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnAddBackNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnAddBackColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnAddBackNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnAddBackColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnAddBack_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnAddBack_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnAddBack_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnAddBack_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnDeductNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnDeductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnDeductNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnDeductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnDeduct_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnDeduct_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnDeduct_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnDeduct_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnSourceNoNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnSourceNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnSourceNoNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnSourceNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnSourceNo_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnSourceNo_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnSourceNo_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnSourceNo_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPecentage_AmountNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPecentage_AmountNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrefixNameNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.PrefixNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrefixNameNull()
            Me(Me.tablePNL_TABLE_INFO.PrefixNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tablePNL_TABLE_INFO.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIndexNoNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.IndexNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIndexNoNull()
            Me(Me.tablePNL_TABLE_INFO.IndexNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSchNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.SchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSchNull()
            Me(Me.tablePNL_TABLE_INFO.SchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnTable_Details_KeyNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnTable_Details_KeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnTable_Details_KeyNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnTable_Details_KeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPecentage_Amount_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnPecentage_Amount_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPecentage_Amount_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_Amount_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPNLKeyNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnPNLKeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPNLKeyNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnPNLKeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPNLKey_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnPNLKey_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPNLKey_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnPNLKey_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnNoteNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnNoteNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnNote_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnNote_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnNote_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnNote_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnRowIndexNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnRowIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnRowIndexNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnRowIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnRowIndex_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnRowIndex_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnRowIndex_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnRowIndex_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnDetailNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnDetailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnDetailNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnDetailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPercentageNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO._ColumnPercentageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPercentageNull()
            Me(Me.tablePNL_TABLE_INFO._ColumnPercentageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColumnPecentage_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.ColumnPecentage_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColumnPecentage_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.ColumnPecentage_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSaveQueryNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.SaveQueryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSaveQueryNull()
            Me(Me.tablePNL_TABLE_INFO.SaveQueryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSaveQuery_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.SaveQuery_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSaveQuery_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.SaveQuery_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeleteQueryNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.DeleteQueryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeleteQueryNull()
            Me(Me.tablePNL_TABLE_INFO.DeleteQueryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDeleteQuery_DetailsNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.DeleteQuery_DetailsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDeleteQuery_DetailsNull()
            Me(Me.tablePNL_TABLE_INFO.DeleteQuery_DetailsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisCustomTableNull() As Boolean
            Return Me.IsNull(Me.tablePNL_TABLE_INFO.isCustomTableColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisCustomTableNull()
            Me(Me.tablePNL_TABLE_INFO.isCustomTableColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetEXPENSES_RENTALRows() As EXPENSES_RENTALRow()
            If (Me.Table.ChildRelations("FK_EXPENSES_RENTAL") Is Nothing) Then
                Return New EXPENSES_RENTALRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_EXPENSES_RENTAL")),EXPENSES_RENTALRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetEXEMPT_DIVIDENDRows() As EXEMPT_DIVIDENDRow()
            If (Me.Table.ChildRelations("FK_EXEMPT_DIVIDEND") Is Nothing) Then
                Return New EXEMPT_DIVIDENDRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_EXEMPT_DIVIDEND")),EXEMPT_DIVIDENDRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetRENTAL_INCOMERows() As RENTAL_INCOMERow()
            If (Me.Table.ChildRelations("FK_RENTAL_INCOME") Is Nothing) Then
                Return New RENTAL_INCOMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_RENTAL_INCOME")),RENTAL_INCOMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetDIVIDEND_INCOMERows() As DIVIDEND_INCOMERow()
            If (Me.Table.ChildRelations("FK_DIVIDEND_INCOME") Is Nothing) Then
                Return New DIVIDEND_INCOMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_DIVIDEND_INCOME")),DIVIDEND_INCOMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPROFIT_LOSS_ACCOUNT_NOTERows() As PROFIT_LOSS_ACCOUNT_NOTERow()
            If (Me.Table.ChildRelations("FK_NOTE") Is Nothing) Then
                Return New PROFIT_LOSS_ACCOUNT_NOTERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_NOTE")),PROFIT_LOSS_ACCOUNT_NOTERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPNL_QUICK_DETAILRows() As PNL_QUICK_DETAILRow()
            If (Me.Table.ChildRelations("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL") Is Nothing) Then
                Return New PNL_QUICK_DETAILRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PNL_TABLE_INFO_PNL_QUICK_DETAIL")),PNL_QUICK_DETAILRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PNL_QUICK_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PNL_QUICK_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PNL_QUICK_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PNL_QUICK_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PNL_QUICK_DETAIL_SUBRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PNL_QUICK_DETAIL_SUBRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PNL_QUICK_DETAIL_SUBRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PNL_QUICK_DETAIL_SUBRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_REPORT_SCHRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_REPORT_SCHRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_REPORT_EXCLUDE_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_NOTERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_NOTERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_NOTERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_NOTERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_NOTE_COLUMNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_NOTE_ATTACHMENTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROFIT_LOSS_ACCOUNT_REPORT_KEYNAMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DIVIDEND_INCOMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DIVIDEND_INCOMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DIVIDEND_INCOMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DIVIDEND_INCOMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RENTAL_INCOMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RENTAL_INCOMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RENTAL_INCOMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RENTAL_INCOMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EXEMPT_DIVIDENDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXEMPT_DIVIDENDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EXEMPT_DIVIDENDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EXEMPT_DIVIDENDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EXPENSES_RENTALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXPENSES_RENTALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EXPENSES_RENTALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EXPENSES_RENTALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EXPENSES_RENTAL_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXPENSES_RENTAL_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EXPENSES_RENTAL_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EXPENSES_RENTAL_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class EXPENSES_INTERESTRESTRICTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXPENSES_INTERESTRESTRICTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As EXPENSES_INTERESTRESTRICTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As EXPENSES_INTERESTRESTRICTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REF_INTEREST_RESTRIC_DETAIL_MONTHLYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REF_INTEREST_RESTRIC_DETAIL_MONTHLYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REF_INTEREST_RESTRIC_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REF_INTEREST_RESTRIC_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REF_INTEREST_RESTRIC_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REF_INTEREST_RESTRIC_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INTEREST_RESTRIC_MONTLY_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INTEREST_RESTRIC_MONTLY_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INTEREST_RESTRIC_MONTLY_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INTEREST_RESTRIC_MONTLY_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REF_INTEREST_RESTRIC_TMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REF_INTEREST_RESTRIC_TMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REF_INTEREST_RESTRIC_TMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REF_INTEREST_RESTRIC_TMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REF_INTEREST_RESTRICRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REF_INTEREST_RESTRICRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REF_INTEREST_RESTRICRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REF_INTEREST_RESTRICRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As REF_INTEREST_RESTRIC_DETAIL_TRICOR_TEMPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class INTEREST_RESTRIC_MONTLY_REPORT_TricorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As INTEREST_RESTRIC_MONTLY_REPORT_TricorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PNL_SOURCENO_COUNTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PNL_SOURCENO_COUNTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PNL_SOURCENO_COUNTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PNL_SOURCENO_COUNTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PNL_TABLE_INFORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PNL_TABLE_INFORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PNL_TABLE_INFORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PNL_TABLE_INFORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
